/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var swiper = new Swiper(\".mySwiper\", {\r\n    slidesPerView: 2,\r\n    spaceBetween: 30,\r\n    slidesPerGroup: 1,\r\n    loop: true,\r\n    loopFillGroupWithBlank: true,\r\n    autoplay: true,\r\n  \r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\",\r\n    },\r\n\r\n    breakpoints: {\r\n        769: {\r\n          slidesPerView: 3,\r\n          spaceBetween: 20,\r\n        },\r\n        1024: {\r\n          slidesPerView: 4,\r\n          spaceBetween: 40,\r\n        },\r\n        1200: {\r\n            slidesPerView: 5,\r\n            spaceBetween: 40,\r\n        }\r\n      },\r\n  });\r\n  \r\n\n\n//# sourceURL=webpack:///./src/assets/js/app.js?");

/***/ }),

/***/ "./src/assets/js/burger.js":
/*!*********************************!*\
  !*** ./src/assets/js/burger.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const burger = document.getElementById('sidebarToggle');\r\nconst sidebar = document.getElementById('sidebar');\r\nconst page = document.getElementById('page');\r\nconst body = document.body;\r\n\r\nburger.addEventListener('click', event => {\r\n    if( body.classList.contains('show-sidebar') ) {\r\n        closeSidebar();\r\n    } else {\r\n        showSidebar();\r\n    }\r\n});\r\n\r\nfunction showSidebar() {\r\n    let mask = document.createElement('div');\r\n    mask.classList.add('page__mask');\r\n    mask.addEventListener('click', closeSidebar);\r\n    page.appendChild(mask);\r\n    \r\n    body.classList.add('show-sidebar');\r\n}\r\n\r\nfunction closeSidebar() {\r\n    body.classList.remove('show-sidebar');\r\n    document.querySelector('.page__mask').remove();\r\n}\n\n//# sourceURL=webpack:///./src/assets/js/burger.js?");

/***/ }),

/***/ "./src/assets/js/calculator.js":
/*!*************************************!*\
  !*** ./src/assets/js/calculator.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function calc() {\r\n\tconst quantity = document.querySelector(\"#quantity\");\r\n\tconst priceSpan = document.querySelector(\"#amount-span\");\r\n\tconst selectBtn = document.querySelector(\".calculator-select\");\r\n\tconst selectedProduct = document.querySelector(\"#select-product\");\r\n\tdocument.querySelector(\".calculator__price\").textContent = selectedProduct.value\r\n\tlet priceA = parseInt(quantity.value);\r\n\tlet col = parseInt(selectedProduct.value);\r\n\r\n\tquantity.addEventListener(\"input\", () => {\r\n\t\tpriceSpan.textContent = quantity.value;\r\n\t\tpriceA = quantity.value;\r\n\t\tpriceFun()\r\n\t})\r\n\r\n\tfunction priceFun() {\r\n\t\tconst quantity2 = priceA * col;\r\n\t\tdocument.querySelector(\"#total-price\").textContent = quantity2\r\n\t}\r\n\r\n\tfunction selectFun() {\r\n\t\tdocument.querySelector(\".calculator__price\").textContent = this.value\r\n\t\tpriceA = quantity.value\r\n\t\tcol = this.value\r\n\t\tpriceFun()\r\n\t}\r\n\r\n\tselectBtn.addEventListener(\"change\", selectFun)\r\n}\r\n\r\nif (document.querySelector(\"#quantity\")) {\r\n\tcalc()\r\n}\n\n//# sourceURL=webpack:///./src/assets/js/calculator.js?");

/***/ }),

/***/ "./src/assets/js/uikit-icons.js":
/*!**************************************!*\
  !*** ./src/assets/js/uikit-icons.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! UIkit 3.7.1 | https://www.getuikit.com | (c) 2014 - 2021 YOOtheme | MIT License */\r\n\r\n(function (global, factory) {\r\n     true ? module.exports = factory() :\r\n    undefined;\r\n}(this, (function () { 'use strict';\r\n\r\n    function plugin(UIkit) {\r\n\r\n        if (plugin.installed) {\r\n            return;\r\n        }\r\n\r\n        UIkit.icon.add({\r\n        \"500px\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719 c0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449 c-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045 c-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z\\\"/><path d=\\\"M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066 c0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564 c0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271 c0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z\\\"/><path d=\\\"M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521 c-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53 c-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203 c-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604 c0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645 c1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z\\\"/><path d=\\\"M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461 c0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882 c0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881 c-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461 c-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915 C5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0 c0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408 c0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406 c-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799 c0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468 c-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607 c0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038 c-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113 c-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z\\\"/></svg>\",\r\n        \"album\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"5\\\" y=\\\"2\\\" width=\\\"10\\\" height=\\\"1\\\"/><rect x=\\\"3\\\" y=\\\"4\\\" width=\\\"14\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"6.5\\\" width=\\\"17\\\" height=\\\"11\\\"/></svg>\",\r\n        \"arrow-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10.5\\\" y1=\\\"4\\\" x2=\\\"10.5\\\" y2=\\\"15\\\"/></svg>\",\r\n        \"arrow-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"10 14 5 9.5 10 5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"16\\\" y1=\\\"9.5\\\" x2=\\\"5\\\" y2=\\\"9.52\\\"/></svg>\",\r\n        \"arrow-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"10 5 15 9.5 10 14\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"4\\\" y1=\\\"9.5\\\" x2=\\\"15\\\" y2=\\\"9.5\\\"/></svg>\",\r\n        \"arrow-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10.5\\\" y1=\\\"16\\\" x2=\\\"10.5\\\" y2=\\\"5\\\"/></svg>\",\r\n        \"bag\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M7.5,7.5V4A2.48,2.48,0,0,1,10,1.5,2.54,2.54,0,0,1,12.5,4V7.5\\\"/><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"16.5 7.5 3.5 7.5 2.5 18.5 17.5 18.5 16.5 7.5\\\"/></svg>\",\r\n        \"ban\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"4\\\" y1=\\\"3.5\\\" x2=\\\"16\\\" y2=\\\"16.5\\\"/></svg>\",\r\n        \"behance\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z\\\"/><path d=\\\"M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z\\\"/><rect x=\\\"13\\\" y=\\\"4\\\" width=\\\"5\\\" height=\\\"1.4\\\"/></svg>\",\r\n        \"bell\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16\\\"/></svg>\",\r\n        \"bold\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z\\\"/></svg>\",\r\n        \"bolt\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z\\\"/></svg>\",\r\n        \"bookmark\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5\\\"/></svg>\",\r\n        \"calendar\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z\\\"/><rect width=\\\"1\\\" height=\\\"3\\\" x=\\\"6\\\" y=\\\"2\\\"/><rect width=\\\"1\\\" height=\\\"3\\\" x=\\\"13\\\" y=\\\"2\\\"/></svg>\",\r\n        \"camera\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10.8\\\" r=\\\"3.8\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z\\\"/></svg>\",\r\n        \"cart\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"7.3\\\" cy=\\\"17.3\\\" r=\\\"1.4\\\"/><circle cx=\\\"13.3\\\" cy=\\\"17.3\\\" r=\\\"1.4\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5\\\"/></svg>\",\r\n        \"check\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"4,10 8,15 17,4\\\"/></svg>\",\r\n        \"chevron-double-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"10 14 6 10 10 6\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"14 14 10 10 14 6\\\"/></svg>\",\r\n        \"chevron-double-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"10 6 14 10 10 14\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"6 6 10 10 6 14\\\"/></svg>\",\r\n        \"chevron-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"16 7 10 13 4 7\\\"/></svg>\",\r\n        \"chevron-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"13 16 7 10 13 4\\\"/></svg>\",\r\n        \"chevron-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"7 4 13 10 7 16\\\"/></svg>\",\r\n        \"chevron-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"4 13 10 7 16 13\\\"/></svg>\",\r\n        \"clock\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.018,14.197 L9.445,10.625\\\"/></svg>\",\r\n        \"close\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.06\\\" d=\\\"M16,16 L4,4\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.06\\\" d=\\\"M16,4 L4,16\\\"/></svg>\",\r\n        \"cloud-download\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"11.75 16 9.5 18.25 7.25 16\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M9.5,18 L9.5,9.5\\\"/></svg>\",\r\n        \"cloud-upload\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"7.25 11.75 9.5 9.5 11.75 11.75\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M9.5,18 L9.5,9.5\\\"/></svg>\",\r\n        \"code\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"13,4 19,10 13,16\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"7,4 1,10 7,16\\\"/></svg>\",\r\n        \"cog\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"9.997\\\" cy=\\\"10\\\" r=\\\"3.31\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z\\\"/></svg>\",\r\n        \"comment\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z\\\"/></svg>\",\r\n        \"commenting\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5\\\"/><circle cx=\\\"10\\\" cy=\\\"8\\\" r=\\\"1\\\"/><circle cx=\\\"6\\\" cy=\\\"8\\\" r=\\\"1\\\"/><circle cx=\\\"14\\\" cy=\\\"8\\\" r=\\\"1\\\"/></svg>\",\r\n        \"comments\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"2 0.5 19.5 0.5 19.5 13\\\"/><path d=\\\"M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z\\\"/></svg>\",\r\n        \"copy\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"2.5\\\" width=\\\"12\\\" height=\\\"16\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5 0.5 17.5 0.5 17.5 17\\\"/></svg>\",\r\n        \"credit-card\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"4.5\\\" width=\\\"17\\\" height=\\\"12\\\"/><rect x=\\\"1\\\" y=\\\"7\\\" width=\\\"18\\\" height=\\\"3\\\"/></svg>\",\r\n        \"database\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"4.64\\\" rx=\\\"7.5\\\" ry=\\\"3.14\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64\\\"/></svg>\",\r\n        \"desktop\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"8\\\" y=\\\"15\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"11\\\" y=\\\"15\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"5\\\" y=\\\"16\\\" width=\\\"10\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"3.5\\\" width=\\\"17\\\" height=\\\"11\\\"/></svg>\",\r\n        \"discord\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M16.074,4.361a14.243,14.243,0,0,0-3.61-1.134,10.61,10.61,0,0,0-.463.96,13.219,13.219,0,0,0-4,0,10.138,10.138,0,0,0-.468-.96A14.206,14.206,0,0,0,3.919,4.364,15.146,15.146,0,0,0,1.324,14.5a14.435,14.435,0,0,0,4.428,2.269A10.982,10.982,0,0,0,6.7,15.21a9.294,9.294,0,0,1-1.494-.727c.125-.093.248-.19.366-.289a10.212,10.212,0,0,0,8.854,0c.119.1.242.2.366.289a9.274,9.274,0,0,1-1.5.728,10.8,10.8,0,0,0,.948,1.562,14.419,14.419,0,0,0,4.431-2.27A15.128,15.128,0,0,0,16.074,4.361Zm-8.981,8.1a1.7,1.7,0,0,1-1.573-1.79A1.689,1.689,0,0,1,7.093,8.881a1.679,1.679,0,0,1,1.573,1.791A1.687,1.687,0,0,1,7.093,12.462Zm5.814,0a1.7,1.7,0,0,1-1.573-1.79,1.689,1.689,0,0,1,1.573-1.791,1.679,1.679,0,0,1,1.573,1.791A1.688,1.688,0,0,1,12.907,12.462Z\\\"/></svg>\",\r\n        \"download\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"14,10 9.5,14.5 5,10\\\"/><rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"13\\\" height=\\\"1\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"13.91\\\" x2=\\\"9.5\\\" y2=\\\"3\\\"/></svg>\",\r\n        \"dribbble\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/></svg>\",\r\n        \"etsy\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M8,4.26C8,4.07,8,4,8.31,4h4.46c.79,0,1.22.67,1.53,1.91l.25,1h.76c.14-2.82.26-4,.26-4S13.65,3,12.52,3H6.81L3.75,2.92v.84l1,.2c.73.11.9.27,1,1,0,0,.06,2,.06,5.17s-.06,5.14-.06,5.14c0,.59-.23.81-1,.94l-1,.2v.84l3.06-.1h5.11c1.15,0,3.82.1,3.82.1,0-.7.45-3.88.51-4.22h-.73l-.76,1.69a2.25,2.25,0,0,1-2.45,1.47H9.4c-1,0-1.44-.4-1.44-1.24V10.44s2.16,0,2.86.06c.55,0,.85.19,1.06,1l.23,1H13L12.9,9.94,13,7.41h-.85l-.28,1.13c-.16.74-.28.84-1,1-1,.1-2.89.09-2.89.09Z\\\"/></svg>\",\r\n        \"expand\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"13 2 18 2 18 7 17 7 17 3 13 3\\\"/><polygon points=\\\"2 13 3 13 3 17 7 17 7 18 2 18\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M11,9 L17,3\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M3,17 L9,11\\\"/></svg>\",\r\n        \"facebook\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z\\\"/></svg>\",\r\n        \"file-edit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5\\\"/></svg>\",\r\n        \"file-pdf\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" width=\\\"13\\\" height=\\\"17\\\" x=\\\"3.5\\\" y=\\\"1.5\\\"/><path d=\\\"M14.65 11.67c-.48.3-1.37-.19-1.79-.37a4.65 4.65 0 0 1 1.49.06c.35.1.36.28.3.31zm-6.3.06l.43-.79a14.7 14.7 0 0 0 .75-1.64 5.48 5.48 0 0 0 1.25 1.55l.2.15a16.36 16.36 0 0 0-2.63.73zM9.5 5.32c.2 0 .32.5.32.97a1.99 1.99 0 0 1-.23 1.04 5.05 5.05 0 0 1-.17-1.3s0-.71.08-.71zm-3.9 9a4.35 4.35 0 0 1 1.21-1.46l.24-.22a4.35 4.35 0 0 1-1.46 1.68zm9.23-3.3a2.05 2.05 0 0 0-1.32-.3 11.07 11.07 0 0 0-1.58.11 4.09 4.09 0 0 1-.74-.5 5.39 5.39 0 0 1-1.32-2.06 10.37 10.37 0 0 0 .28-2.62 1.83 1.83 0 0 0-.07-.25.57.57 0 0 0-.52-.4H9.4a.59.59 0 0 0-.6.38 6.95 6.95 0 0 0 .37 3.14c-.26.63-1 2.12-1 2.12-.3.58-.57 1.08-.82 1.5l-.8.44A3.11 3.11 0 0 0 5 14.16a.39.39 0 0 0 .15.42l.24.13c1.15.56 2.28-1.74 2.66-2.42a23.1 23.1 0 0 1 3.59-.85 4.56 4.56 0 0 0 2.91.8.5.5 0 0 0 .3-.21 1.1 1.1 0 0 0 .12-.75.84.84 0 0 0-.14-.25z\\\"/></svg>\",\r\n        \"file-text\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" width=\\\"13\\\" height=\\\"17\\\" x=\\\"3.5\\\" y=\\\"1.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"12\\\" y1=\\\"12.5\\\" y2=\\\"12.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"14\\\" y1=\\\"8.5\\\" y2=\\\"8.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"14\\\" y1=\\\"6.5\\\" y2=\\\"6.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"14\\\" y1=\\\"10.5\\\" y2=\\\"10.5\\\"/></svg>\",\r\n        \"file\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"1.5\\\" width=\\\"13\\\" height=\\\"17\\\"/></svg>\",\r\n        \"flickr\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"5.5\\\" cy=\\\"9.5\\\" r=\\\"3.5\\\"/><circle cx=\\\"14.5\\\" cy=\\\"9.5\\\" r=\\\"3.5\\\"/></svg>\",\r\n        \"folder\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5\\\"/></svg>\",\r\n        \"forward\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z\\\"/></svg>\",\r\n        \"foursquare\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z\\\"/></svg>\",\r\n        \"future\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline points=\\\"19 2 18 2 18 6 14 6 14 7 19 7 19 2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10\\\"/><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"/><path d=\\\"M13.018,14.197 L9.445,10.625\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\"/></svg>\",\r\n        \"git-branch\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"7\\\" cy=\\\"3\\\" r=\\\"2\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"14\\\" cy=\\\"6\\\" r=\\\"2\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"7\\\" cy=\\\"17\\\" r=\\\"2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" d=\\\"M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5\\\"/></svg>\",\r\n        \"git-fork\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"5.79\\\" cy=\\\"2.79\\\" r=\\\"1.79\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"14.19\\\" cy=\\\"2.79\\\" r=\\\"1.79\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"10.03\\\" cy=\\\"16.79\\\" r=\\\"1.79\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" d=\\\"M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57\\\"/></svg>\",\r\n        \"github-alt\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z\\\"/></svg>\",\r\n        \"github\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z\\\"/></svg>\",\r\n        \"gitter\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"3.5\\\" y=\\\"1\\\" width=\\\"1.531\\\" height=\\\"11.471\\\"/><rect x=\\\"7.324\\\" y=\\\"4.059\\\" width=\\\"1.529\\\" height=\\\"15.294\\\"/><rect x=\\\"11.148\\\" y=\\\"4.059\\\" width=\\\"1.527\\\" height=\\\"15.294\\\"/><rect x=\\\"14.971\\\" y=\\\"4.059\\\" width=\\\"1.529\\\" height=\\\"8.412\\\"/></svg>\",\r\n        \"google\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z\\\"/></svg>\",\r\n        \"grid\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"2\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"8\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"14\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"2\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"8\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"14\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"8\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"14\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"/></svg>\",\r\n        \"happy\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"13\\\" cy=\\\"7\\\" r=\\\"1\\\"/><circle cx=\\\"7\\\" cy=\\\"7\\\" r=\\\"1\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"8.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4\\\"/></svg>\",\r\n        \"hashtag\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z\\\"/></svg>\",\r\n        \"heart\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" d=\\\"M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z\\\"/></svg>\",\r\n        \"history\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"#000\\\" points=\\\"1 2 2 2 2 6 6 6 6 7 1 7 1 2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10\\\"/><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.018,14.197 L9.445,10.625\\\"/></svg>\",\r\n        \"home\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65\\\"/><polygon points=\\\"15 4 18 4 18 7 17 7 17 5 15 5\\\"/><polygon points=\\\"3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19\\\"/></svg>\",\r\n        \"image\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"16.1\\\" cy=\\\"6.1\\\" r=\\\"1.1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\".5\\\" y=\\\"2.5\\\" width=\\\"19\\\" height=\\\"15\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"4,13 8,9 13,14\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"11,12 12.5,10.5 16,14\\\"/></svg>\",\r\n        \"info\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/></svg>\",\r\n        \"instagram\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z\\\"/><circle cx=\\\"14.87\\\" cy=\\\"5.26\\\" r=\\\"1.09\\\"/><path d=\\\"M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z\\\"/></svg>\",\r\n        \"italic\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z\\\"/></svg>\",\r\n        \"joomla\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z\\\"/><path d=\\\"M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8\\\"/><path d=\\\"M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8\\\"/><path d=\\\"M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7\\\"/></svg>\",\r\n        \"laptop\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect y=\\\"16\\\" width=\\\"20\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"2.5\\\" y=\\\"4.5\\\" width=\\\"15\\\" height=\\\"10\\\"/></svg>\",\r\n        \"lifesaver\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,0.5 C4.76,0.5 0.5,4.76 0.5,10 C0.5,15.24 4.76,19.5 10,19.5 C15.24,19.5 19.5,15.24 19.5,10 C19.5,4.76 15.24,0.5 10,0.5 L10,0.5 Z M10,1.5 C11.49,1.5 12.89,1.88 14.11,2.56 L11.85,4.82 C11.27,4.61 10.65,4.5 10,4.5 C9.21,4.5 8.47,4.67 7.79,4.96 L5.58,2.75 C6.87,1.95 8.38,1.5 10,1.5 L10,1.5 Z M4.96,7.8 C4.67,8.48 4.5,9.21 4.5,10 C4.5,10.65 4.61,11.27 4.83,11.85 L2.56,14.11 C1.88,12.89 1.5,11.49 1.5,10 C1.5,8.38 1.95,6.87 2.75,5.58 L4.96,7.79 L4.96,7.8 L4.96,7.8 Z M10,18.5 C8.25,18.5 6.62,17.97 5.27,17.06 L7.46,14.87 C8.22,15.27 9.08,15.5 10,15.5 C10.79,15.5 11.53,15.33 12.21,15.04 L14.42,17.25 C13.13,18.05 11.62,18.5 10,18.5 L10,18.5 Z M10,14.5 C7.52,14.5 5.5,12.48 5.5,10 C5.5,7.52 7.52,5.5 10,5.5 C12.48,5.5 14.5,7.52 14.5,10 C14.5,12.48 12.48,14.5 10,14.5 L10,14.5 Z M15.04,12.21 C15.33,11.53 15.5,10.79 15.5,10 C15.5,9.08 15.27,8.22 14.87,7.46 L17.06,5.27 C17.97,6.62 18.5,8.25 18.5,10 C18.5,11.62 18.05,13.13 17.25,14.42 L15.04,12.21 L15.04,12.21 Z\\\"/></svg>\",\r\n        \"link\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M7.925,11.875 L11.925,7.975\\\"/></svg>\",\r\n        \"linkedin\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z\\\"/><path d=\\\"M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z\\\"/></svg>\",\r\n        \"list\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"6\\\" y=\\\"4\\\" width=\\\"12\\\" height=\\\"1\\\"/><rect x=\\\"6\\\" y=\\\"9\\\" width=\\\"12\\\" height=\\\"1\\\"/><rect x=\\\"6\\\" y=\\\"14\\\" width=\\\"12\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"4\\\" width=\\\"2\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"9\\\" width=\\\"2\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"2\\\" height=\\\"1\\\"/></svg>\",\r\n        \"location\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" d=\\\"M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"6.8\\\" r=\\\"2.3\\\"/></svg>\",\r\n        \"lock\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" height=\\\"10\\\" width=\\\"13\\\" y=\\\"8.5\\\" x=\\\"3.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8\\\"/></svg>\",\r\n        \"mail\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"1.4,6.5 10,11 18.6,6.5\\\"/><path d=\\\"M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z\\\"/></svg>\",\r\n        \"menu\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"2\\\" y=\\\"4\\\" width=\\\"16\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"9\\\" width=\\\"16\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"16\\\" height=\\\"1\\\"/></svg>\",\r\n        \"microphone\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10\\\" x2=\\\"10\\\" y1=\\\"16.44\\\" y2=\\\"18.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"7\\\" x2=\\\"13\\\" y1=\\\"18.5\\\" y2=\\\"18.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.5 4.89v5.87a3.5 3.5 0 0 1-7 0V4.89a3.5 3.5 0 0 1 7 0z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M15.5 10.36V11a5.5 5.5 0 0 1-11 0v-.6\\\"/></svg>\",\r\n        \"minus-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.5\\\" cy=\\\"9.5\\\" r=\\\"9\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"5\\\" y1=\\\"9.5\\\" x2=\\\"14\\\" y2=\\\"9.5\\\"/></svg>\",\r\n        \"minus\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect height=\\\"1\\\" width=\\\"18\\\" y=\\\"9\\\" x=\\\"1\\\"/></svg>\",\r\n        \"more-vertical\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"10\\\" cy=\\\"3\\\" r=\\\"2\\\"/><circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"2\\\"/><circle cx=\\\"10\\\" cy=\\\"17\\\" r=\\\"2\\\"/></svg>\",\r\n        \"more\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"3\\\" cy=\\\"10\\\" r=\\\"2\\\"/><circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"2\\\"/><circle cx=\\\"17\\\" cy=\\\"10\\\" r=\\\"2\\\"/></svg>\",\r\n        \"move\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"4,5 1,5 1,9 2,9 2,6 4,6\\\"/><polygon points=\\\"1,16 2,16 2,18 4,18 4,19 1,19\\\"/><polygon points=\\\"14,16 14,19 11,19 11,18 13,18 13,16\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"5.5\\\" y=\\\"1.5\\\" width=\\\"13\\\" height=\\\"13\\\"/><rect x=\\\"1\\\" y=\\\"11\\\" width=\\\"1\\\" height=\\\"3\\\"/><rect x=\\\"6\\\" y=\\\"18\\\" width=\\\"3\\\" height=\\\"1\\\"/></svg>\",\r\n        \"nut\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"3.5\\\"/></svg>\",\r\n        \"pagekit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19\\\"/></svg>\",\r\n        \"paint-bucket\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.21,1 L0,11.21 L8.1,19.31 L18.31,9.1 L10.21,1 L10.21,1 Z M16.89,9.1 L15,11 L1.7,11 L10.21,2.42 L16.89,9.1 Z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.42,2.33 L11.7,7.61\\\"/><path d=\\\"M18.49,12 C18.49,12 20,14.06 20,15.36 C20,16.28 19.24,17 18.49,17 L18.49,17 C17.74,17 17,16.28 17,15.36 C17,14.06 18.49,12 18.49,12 L18.49,12 Z\\\"/></svg>\",\r\n        \"pencil\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M15.98,7.268 L13.851,5.148\\\"/></svg>\",\r\n        \"phone-landscape\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z\\\"/><circle cx=\\\"3.8\\\" cy=\\\"10.5\\\" r=\\\".8\\\"/></svg>\",\r\n        \"phone\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z\\\"/><circle cx=\\\"10.5\\\" cy=\\\"16.5\\\" r=\\\".8\\\"/></svg>\",\r\n        \"pinterest\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1\\\"/></svg>\",\r\n        \"play-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"8.5 7 13.5 10 8.5 13\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/></svg>\",\r\n        \"play\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6.5,5 14.5,10 6.5,15\\\"/></svg>\",\r\n        \"plus-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.5\\\" cy=\\\"9.5\\\" r=\\\"9\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"5\\\" x2=\\\"9.5\\\" y2=\\\"14\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"5\\\" y1=\\\"9.5\\\" x2=\\\"14\\\" y2=\\\"9.5\\\"/></svg>\",\r\n        \"plus\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"9\\\" y=\\\"1\\\" width=\\\"1\\\" height=\\\"17\\\"/><rect x=\\\"1\\\" y=\\\"9\\\" width=\\\"17\\\" height=\\\"1\\\"/></svg>\",\r\n        \"print\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"4.5 13.5 1.5 13.5 1.5 6.5 18.5 6.5 18.5 13.5 15.5 13.5\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"15.5 6.5 15.5 2.5 4.5 2.5 4.5 6.5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" width=\\\"11\\\" height=\\\"6\\\" x=\\\"4.5\\\" y=\\\"11.5\\\"/><rect width=\\\"8\\\" height=\\\"1\\\" x=\\\"6\\\" y=\\\"13\\\"/><rect width=\\\"8\\\" height=\\\"1\\\" x=\\\"6\\\" y=\\\"15\\\"/></svg>\",\r\n        \"pull\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"11\\\" x2=\\\"9.5\\\" y2=\\\"2\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5\\\"/></svg>\",\r\n        \"push\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"10\\\" x2=\\\"9.5\\\" y2=\\\"1\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5\\\"/></svg>\",\r\n        \"question\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><circle cx=\\\"10.44\\\" cy=\\\"14.42\\\" r=\\\"1.05\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" d=\\\"M8.17,7.79 C8.17,4.75 12.72,4.73 12.72,7.72 C12.72,8.67 11.81,9.15 11.23,9.75 C10.75,10.24 10.51,10.73 10.45,11.4 C10.44,11.53 10.43,11.64 10.43,11.75\\\"/></svg>\",\r\n        \"quote-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z\\\"/><path d=\\\"M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z\\\"/></svg>\",\r\n        \"receiver\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" d=\\\"M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611\\\"/></svg>\",\r\n        \"reddit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M19 9.05a2.56 2.56 0 0 0-2.56-2.56 2.59 2.59 0 0 0-1.88.82 10.63 10.63 0 0 0-4.14-1v-.08c.58-1.62 1.58-3.89 2.7-4.1.38-.08.77.12 1.19.57a1.15 1.15 0 0 0-.06.37 1.48 1.48 0 1 0 1.51-1.45 1.43 1.43 0 0 0-.76.19A2.29 2.29 0 0 0 12.91 1c-2.11.43-3.39 4.38-3.63 5.19 0 0 0 .11-.06.11a10.65 10.65 0 0 0-3.75 1A2.56 2.56 0 0 0 1 9.05a2.42 2.42 0 0 0 .72 1.76A5.18 5.18 0 0 0 1.24 13c0 3.66 3.92 6.64 8.73 6.64s8.74-3 8.74-6.64a5.23 5.23 0 0 0-.46-2.13A2.58 2.58 0 0 0 19 9.05zm-16.88 0a1.44 1.44 0 0 1 2.27-1.19 7.68 7.68 0 0 0-2.07 1.91 1.33 1.33 0 0 1-.2-.72zM10 18.4c-4.17 0-7.55-2.4-7.55-5.4S5.83 7.53 10 7.53 17.5 10 17.5 13s-3.38 5.4-7.5 5.4zm7.69-8.61a7.62 7.62 0 0 0-2.09-1.91 1.41 1.41 0 0 1 .84-.28 1.47 1.47 0 0 1 1.44 1.45 1.34 1.34 0 0 1-.21.72z\\\"/><path d=\\\"M6.69 12.58a1.39 1.39 0 1 1 1.39-1.39 1.38 1.38 0 0 1-1.38 1.39z\\\"/><path d=\\\"M14.26 11.2a1.39 1.39 0 1 1-1.39-1.39 1.39 1.39 0 0 1 1.39 1.39z\\\"/><path d=\\\"M13.09 14.88a.54.54 0 0 1-.09.77 5.3 5.3 0 0 1-3.26 1.19 5.61 5.61 0 0 1-3.4-1.22.55.55 0 1 1 .73-.83 4.09 4.09 0 0 0 5.25 0 .56.56 0 0 1 .77.09z\\\"/></svg>\",\r\n        \"refresh\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"9.9 2 12.79 4.89 9.79 7.9\\\"/></svg>\",\r\n        \"reply\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z\\\"/></svg>\",\r\n        \"rss\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"3.12\\\" cy=\\\"16.8\\\" r=\\\"1.85\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5\\\"/></svg>\",\r\n        \"search\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"/></svg>\",\r\n        \"server\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"3\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"5\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"7\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"16\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"1\\\"/><rect x=\\\"16\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"1\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"9.9\\\" cy=\\\"17.4\\\" r=\\\"1.4\\\"/><rect x=\\\"3\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"5\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"9.5\\\" y=\\\"14\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"6\\\" height=\\\"1\\\"/><rect x=\\\"11\\\" y=\\\"17\\\" width=\\\"6\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"1.5\\\" width=\\\"17\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"8.5\\\" width=\\\"17\\\" height=\\\"5\\\"/></svg>\",\r\n        \"settings\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"6.11\\\" cy=\\\"3.55\\\" rx=\\\"2.11\\\" ry=\\\"2.15\\\"/><ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"6.11\\\" cy=\\\"15.55\\\" rx=\\\"2.11\\\" ry=\\\"2.15\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"13.15\\\" cy=\\\"9.55\\\" r=\\\"2.15\\\"/><rect x=\\\"1\\\" y=\\\"3\\\" width=\\\"3\\\" height=\\\"1\\\"/><rect x=\\\"10\\\" y=\\\"3\\\" width=\\\"8\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"9\\\" width=\\\"8\\\" height=\\\"1\\\"/><rect x=\\\"15\\\" y=\\\"9\\\" width=\\\"3\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"15\\\" width=\\\"3\\\" height=\\\"1\\\"/><rect x=\\\"10\\\" y=\\\"15\\\" width=\\\"8\\\" height=\\\"1\\\"/></svg>\",\r\n        \"shrink\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"11 4 12 4 12 8 16 8 16 9 11 9\\\"/><polygon points=\\\"4 11 9 11 9 16 8 16 8 12 4 12\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M12,8 L18,2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M2,18 L8,12\\\"/></svg>\",\r\n        \"sign-in\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3\\\"/><polygon points=\\\"9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5\\\"/></svg>\",\r\n        \"sign-out\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5\\\"/><polygon points=\\\"13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3\\\"/></svg>\",\r\n        \"social\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13.4\\\" y1=\\\"14\\\" x2=\\\"6.3\\\" y2=\\\"10.7\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13.5\\\" y1=\\\"5.5\\\" x2=\\\"6.5\\\" y2=\\\"8.8\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"15.5\\\" cy=\\\"4.6\\\" r=\\\"2.3\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"15.5\\\" cy=\\\"14.8\\\" r=\\\"2.3\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"4.5\\\" cy=\\\"9.8\\\" r=\\\"2.3\\\"/></svg>\",\r\n        \"soundcloud\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z\\\"/><rect x=\\\"6\\\" y=\\\"6.5\\\" width=\\\"1.5\\\" height=\\\"8.5\\\"/><rect x=\\\"3\\\" y=\\\"8\\\" width=\\\"1.5\\\" height=\\\"7\\\"/><rect y=\\\"10\\\" width=\\\"1.5\\\" height=\\\"5\\\"/></svg>\",\r\n        \"star\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27\\\"/></svg>\",\r\n        \"strikethrough\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z\\\"/><rect x=\\\"3\\\" y=\\\"10\\\" width=\\\"15\\\" height=\\\"1\\\"/></svg>\",\r\n        \"table\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"1\\\" y=\\\"3\\\" width=\\\"18\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"7\\\" width=\\\"18\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"11\\\" width=\\\"18\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"15\\\" width=\\\"18\\\" height=\\\"1\\\"/></svg>\",\r\n        \"tablet-landscape\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z\\\"/><circle cx=\\\"3.7\\\" cy=\\\"10.5\\\" r=\\\".8\\\"/></svg>\",\r\n        \"tablet\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z\\\"/><circle cx=\\\"10.5\\\" cy=\\\"16.3\\\" r=\\\".8\\\"/></svg>\",\r\n        \"tag\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z\\\"/><circle cx=\\\"14\\\" cy=\\\"6\\\" r=\\\"1\\\"/></svg>\",\r\n        \"thumbnails\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"3.5\\\" width=\\\"5\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"11.5\\\" y=\\\"3.5\\\" width=\\\"5\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"11.5\\\" y=\\\"11.5\\\" width=\\\"5\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"11.5\\\" width=\\\"5\\\" height=\\\"5\\\"/></svg>\",\r\n        \"tiktok\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.24,6V8.82a6.79,6.79,0,0,1-4-1.28v5.81A5.26,5.26,0,1,1,8,8.1a4.36,4.36,0,0,1,.72.05v2.9A2.57,2.57,0,0,0,7.64,11a2.4,2.4,0,1,0,2.77,2.38V2h2.86a4,4,0,0,0,1.84,3.38A4,4,0,0,0,17.24,6Z\\\"/></svg>\",\r\n        \"trash\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6.5 3 6.5 1.5 13.5 1.5 13.5 3\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"4.5 4 4.5 18.5 15.5 18.5 15.5 4\\\"/><rect x=\\\"8\\\" y=\\\"7\\\" width=\\\"1\\\" height=\\\"9\\\"/><rect x=\\\"11\\\" y=\\\"7\\\" width=\\\"1\\\" height=\\\"9\\\"/><rect x=\\\"2\\\" y=\\\"3\\\" width=\\\"16\\\" height=\\\"1\\\"/></svg>\",\r\n        \"triangle-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"5 7 15 7 10 12\\\"/></svg>\",\r\n        \"triangle-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"12 5 7 10 12 15\\\"/></svg>\",\r\n        \"triangle-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"8 5 13 10 8 15\\\"/></svg>\",\r\n        \"triangle-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"5 13 10 8 15 13\\\"/></svg>\",\r\n        \"tripadvisor\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z\\\"/></svg>\",\r\n        \"tumblr\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z\\\"/></svg>\",\r\n        \"tv\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"7\\\" y=\\\"16\\\" width=\\\"6\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\".5\\\" y=\\\"3.5\\\" width=\\\"19\\\" height=\\\"11\\\"/></svg>\",\r\n        \"twitch\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.23,1,2,4.23V15.85H5.88v3.23L9.1,15.85h2.59L17.5,10V1Zm11,8.4L13.62,12H11L8.78,14.24V12H5.88V2.29H16.21Z\\\"/><rect x=\\\"12.98\\\" y=\\\"4.55\\\" width=\\\"1.29\\\" height=\\\"3.88\\\"/><rect x=\\\"9.43\\\" y=\\\"4.55\\\" width=\\\"1.29\\\" height=\\\"3.88\\\"/></svg>\",\r\n        \"twitter\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74\\\"/></svg>\",\r\n        \"uikit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3\\\"/><polygon points=\\\"9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3\\\"/></svg>\",\r\n        \"unlock\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"8.5\\\" width=\\\"13\\\" height=\\\"10\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9\\\"/></svg>\",\r\n        \"upload\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5 8 9.5 3.5 14 8\\\"/><rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"13\\\" height=\\\"1\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"15\\\" x2=\\\"9.5\\\" y2=\\\"4\\\"/></svg>\",\r\n        \"user\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.9\\\" cy=\\\"6.4\\\" r=\\\"4.4\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2\\\"/></svg>\",\r\n        \"users\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"7.7\\\" cy=\\\"8.6\\\" r=\\\"3.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1\\\"/></svg>\",\r\n        \"video-camera\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"17.5 6.9 17.5 13.1 13.5 10.4 13.5 14.5 2.5 14.5 2.5 5.5 13.5 5.5 13.5 9.6 17.5 6.9\\\"/></svg>\",\r\n        \"vimeo\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z\\\"/></svg>\",\r\n        \"warning\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"10\\\" cy=\\\"14\\\" r=\\\"1\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><path d=\\\"M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z\\\"/></svg>\",\r\n        \"whatsapp\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9\\\"/></svg>\",\r\n        \"wordpress\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z\\\"/></svg>\",\r\n        \"world\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1,10.5 L19,10.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M2.35,15.5 L17.65,15.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M2.35,5.5 L17.523,5.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10.5\\\" r=\\\"9\\\"/></svg>\",\r\n        \"xing\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z\\\"/><path d=\\\"M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z\\\"/></svg>\",\r\n        \"yelp\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z\\\"/></svg>\",\r\n        \"youtube\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z\\\"/></svg>\"\r\n    });\r\n\r\n    }\r\n\r\n    if (typeof window !== 'undefined' && window.UIkit) {\r\n        window.UIkit.use(plugin);\r\n    }\r\n\r\n    return plugin;\r\n\r\n})));\r\n\n\n//# sourceURL=webpack:///./src/assets/js/uikit-icons.js?");

/***/ }),

/***/ "./src/assets/js/uikit.js":
/*!********************************!*\
  !*** ./src/assets/js/uikit.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! UIkit 3.7.1 | https://www.getuikit.com | (c) 2014 - 2021 YOOtheme | MIT License */\r\n\r\n(function (global, factory) {\r\n     true ? module.exports = factory() :\r\n    undefined;\r\n}(this, (function () { 'use strict';\r\n\r\n    var objPrototype = Object.prototype;\r\n    var hasOwnProperty = objPrototype.hasOwnProperty;\r\n\r\n    function hasOwn(obj, key) {\r\n        return hasOwnProperty.call(obj, key);\r\n    }\r\n\r\n    var hyphenateRe = /\\B([A-Z])/g;\r\n\r\n    var hyphenate = memoize(function (str) { return str\r\n        .replace(hyphenateRe, '-$1')\r\n        .toLowerCase(); }\r\n    );\r\n\r\n    var camelizeRe = /-(\\w)/g;\r\n\r\n    var camelize = memoize(function (str) { return str.replace(camelizeRe, toUpper); }\r\n    );\r\n\r\n    var ucfirst = memoize(function (str) { return str.length ? toUpper(null, str.charAt(0)) + str.slice(1) : ''; }\r\n    );\r\n\r\n    function toUpper(_, c) {\r\n        return c ? c.toUpperCase() : '';\r\n    }\r\n\r\n    var strPrototype = String.prototype;\r\n    var startsWithFn = strPrototype.startsWith || function (search) { return this.lastIndexOf(search, 0) === 0; };\r\n\r\n    function startsWith(str, search) {\r\n        return startsWithFn.call(str, search);\r\n    }\r\n\r\n    var endsWithFn = strPrototype.endsWith || function (search) { return this.substr(-search.length) === search; };\r\n\r\n    function endsWith(str, search) {\r\n        return endsWithFn.call(str, search);\r\n    }\r\n\r\n    var arrPrototype = Array.prototype;\r\n\r\n    var includesFn = function (search, i) { return !!~this.indexOf(search, i); };\r\n    var includesStr = strPrototype.includes || includesFn;\r\n    var includesArray = arrPrototype.includes || includesFn;\r\n\r\n    function includes(obj, search) {\r\n        return obj && (isString(obj) ? includesStr : includesArray).call(obj, search);\r\n    }\r\n\r\n    var findIndexFn = arrPrototype.findIndex || function (predicate) {\r\n        var arguments$1 = arguments;\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n            if (predicate.call(arguments$1[1], this[i], i, this)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    function findIndex(array, predicate) {\r\n        return findIndexFn.call(array, predicate);\r\n    }\r\n\r\n    var isArray = Array.isArray;\r\n\r\n    function isFunction(obj) {\r\n        return typeof obj === 'function';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return obj !== null && typeof obj === 'object';\r\n    }\r\n\r\n    var toString = objPrototype.toString;\r\n    function isPlainObject(obj) {\r\n        return toString.call(obj) === '[object Object]';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return isObject(obj) && obj === obj.window;\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return nodeType(obj) === 9;\r\n    }\r\n\r\n    function isNode(obj) {\r\n        return nodeType(obj) >= 1;\r\n    }\r\n\r\n    function isElement(obj) {\r\n        return nodeType(obj) === 1;\r\n    }\r\n\r\n    function nodeType(obj) {\r\n        return !isWindow(obj) && isObject(obj) && obj.nodeType;\r\n    }\r\n\r\n    function isBoolean(value) {\r\n        return typeof value === 'boolean';\r\n    }\r\n\r\n    function isString(value) {\r\n        return typeof value === 'string';\r\n    }\r\n\r\n    function isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    function isNumeric(value) {\r\n        return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\r\n    }\r\n\r\n    function isEmpty(obj) {\r\n        return !(isArray(obj)\r\n            ? obj.length\r\n            : isObject(obj)\r\n                ? Object.keys(obj).length\r\n                : false\r\n        );\r\n    }\r\n\r\n    function isUndefined(value) {\r\n        return value === void 0;\r\n    }\r\n\r\n    function toBoolean(value) {\r\n        return isBoolean(value)\r\n            ? value\r\n            : value === 'true' || value === '1' || value === ''\r\n                ? true\r\n                : value === 'false' || value === '0'\r\n                    ? false\r\n                    : value;\r\n    }\r\n\r\n    function toNumber(value) {\r\n        var number = Number(value);\r\n        return !isNaN(number) ? number : false;\r\n    }\r\n\r\n    function toFloat(value) {\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var toArray = Array.from || (function (value) { return arrPrototype.slice.call(value); });\r\n\r\n    function toNode(element) {\r\n        return toNodes(element)[0];\r\n    }\r\n\r\n    function toNodes(element) {\r\n        return element && (isNode(element) ? [element] : toArray(element).filter(isNode)) || [];\r\n    }\r\n\r\n    function toWindow(element) {\r\n        if (isWindow(element)) {\r\n            return element;\r\n        }\r\n\r\n        element = toNode(element);\r\n\r\n        return element\r\n            ? (isDocument(element)\r\n                ? element\r\n                : element.ownerDocument\r\n            ).defaultView\r\n            : window;\r\n    }\r\n\r\n    function toMs(time) {\r\n        return !time\r\n            ? 0\r\n            : endsWith(time, 'ms')\r\n                ? toFloat(time)\r\n                : toFloat(time) * 1000;\r\n    }\r\n\r\n    function isEqual(value, other) {\r\n        return value === other\r\n            || isObject(value)\r\n            && isObject(other)\r\n            && Object.keys(value).length === Object.keys(other).length\r\n            && each(value, function (val, key) { return val === other[key]; });\r\n    }\r\n\r\n    function swap(value, a, b) {\r\n        return value.replace(\r\n            new RegExp((a + \"|\" + b), 'g'),\r\n            function (match) { return match === a ? b : a; }\r\n        );\r\n    }\r\n\r\n    var assign = Object.assign || function (target) {\r\n        var args = [], len = arguments.length - 1;\r\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n\r\n        target = Object(target);\r\n        for (var i = 0; i < args.length; i++) {\r\n            var source = args[i];\r\n            if (source !== null) {\r\n                for (var key in source) {\r\n                    if (hasOwn(source, key)) {\r\n                        target[key] = source[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n\r\n    function last(array) {\r\n        return array[array.length - 1];\r\n    }\r\n\r\n    function each(obj, cb) {\r\n        for (var key in obj) {\r\n            if (false === cb(obj[key], key)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function sortBy$1(array, prop) {\r\n        return array.slice().sort(function (ref, ref$1) {\r\n                var propA = ref[prop]; if ( propA === void 0 ) propA = 0;\r\n                var propB = ref$1[prop]; if ( propB === void 0 ) propB = 0;\r\n\r\n                return propA > propB\r\n                ? 1\r\n                : propB > propA\r\n                    ? -1\r\n                    : 0;\r\n        }\r\n        );\r\n    }\r\n\r\n    function uniqueBy(array, prop) {\r\n        var seen = new Set();\r\n        return array.filter(function (ref) {\r\n            var check = ref[prop];\r\n\r\n            return seen.has(check)\r\n            ? false\r\n            : seen.add(check) || true;\r\n        } // IE 11 does not return the Set object\r\n        );\r\n    }\r\n\r\n    function clamp(number, min, max) {\r\n        if ( min === void 0 ) min = 0;\r\n        if ( max === void 0 ) max = 1;\r\n\r\n        return Math.min(Math.max(toNumber(number) || 0, min), max);\r\n    }\r\n\r\n    function noop() {}\r\n\r\n    function intersectRect() {\r\n        var rects = [], len = arguments.length;\r\n        while ( len-- ) rects[ len ] = arguments[ len ];\r\n\r\n        return [['bottom', 'top'], ['right', 'left']].every(function (ref) {\r\n                var minProp = ref[0];\r\n                var maxProp = ref[1];\r\n\r\n                return Math.min.apply(Math, rects.map(function (ref) {\r\n                var min = ref[minProp];\r\n\r\n                return min;\r\n                })) - Math.max.apply(Math, rects.map(function (ref) {\r\n                var max = ref[maxProp];\r\n\r\n                return max;\r\n                })) > 0;\r\n        }\r\n        );\r\n    }\r\n\r\n    function pointInRect(point, rect) {\r\n        return point.x <= rect.right &&\r\n            point.x >= rect.left &&\r\n            point.y <= rect.bottom &&\r\n            point.y >= rect.top;\r\n    }\r\n\r\n    var Dimensions = {\r\n\r\n        ratio: function(dimensions, prop, value) {\r\n            var obj;\r\n\r\n\r\n            var aProp = prop === 'width' ? 'height' : 'width';\r\n\r\n            return ( obj = {}, obj[aProp] = dimensions[prop] ? Math.round(value * dimensions[aProp] / dimensions[prop]) : dimensions[aProp], obj[prop] = value, obj );\r\n        },\r\n\r\n        contain: function(dimensions, maxDimensions) {\r\n            var this$1 = this;\r\n\r\n            dimensions = assign({}, dimensions);\r\n\r\n            each(dimensions, function (_, prop) { return dimensions = dimensions[prop] > maxDimensions[prop]\r\n                ? this$1.ratio(dimensions, prop, maxDimensions[prop])\r\n                : dimensions; }\r\n            );\r\n\r\n            return dimensions;\r\n        },\r\n\r\n        cover: function(dimensions, maxDimensions) {\r\n            var this$1 = this;\r\n\r\n            dimensions = this.contain(dimensions, maxDimensions);\r\n\r\n            each(dimensions, function (_, prop) { return dimensions = dimensions[prop] < maxDimensions[prop]\r\n                ? this$1.ratio(dimensions, prop, maxDimensions[prop])\r\n                : dimensions; }\r\n            );\r\n\r\n            return dimensions;\r\n        }\r\n\r\n    };\r\n\r\n    function getIndex(i, elements, current, finite) {\r\n        if ( current === void 0 ) current = 0;\r\n        if ( finite === void 0 ) finite = false;\r\n\r\n\r\n        elements = toNodes(elements);\r\n\r\n        var length = elements.length;\r\n\r\n        i = isNumeric(i)\r\n            ? toNumber(i)\r\n            : i === 'next'\r\n                ? current + 1\r\n                : i === 'previous'\r\n                    ? current - 1\r\n                    : elements.indexOf(toNode(i));\r\n\r\n        if (finite) {\r\n            return clamp(i, 0, length - 1);\r\n        }\r\n\r\n        i %= length;\r\n\r\n        return i < 0 ? i + length : i;\r\n    }\r\n\r\n    function memoize(fn) {\r\n        var cache = Object.create(null);\r\n        return function (key) { return cache[key] || (cache[key] = fn(key)); };\r\n    }\r\n\r\n    function attr(element, name, value) {\r\n\r\n        if (isObject(name)) {\r\n            for (var key in name) {\r\n                attr(element, key, name[key]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (isUndefined(value)) {\r\n            element = toNode(element);\r\n            return element && element.getAttribute(name);\r\n        } else {\r\n            toNodes(element).forEach(function (element) {\r\n\r\n                if (isFunction(value)) {\r\n                    value = value.call(element, attr(element, name));\r\n                }\r\n\r\n                if (value === null) {\r\n                    removeAttr(element, name);\r\n                } else {\r\n                    element.setAttribute(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    function hasAttr(element, name) {\r\n        return toNodes(element).some(function (element) { return element.hasAttribute(name); });\r\n    }\r\n\r\n    function removeAttr(element, name) {\r\n        element = toNodes(element);\r\n        name.split(' ').forEach(function (name) { return element.forEach(function (element) { return element.hasAttribute(name) && element.removeAttribute(name); }\r\n            ); }\r\n        );\r\n    }\r\n\r\n    function data(element, attribute) {\r\n        for (var i = 0, attrs = [attribute, (\"data-\" + attribute)]; i < attrs.length; i++) {\r\n            if (hasAttr(element, attrs[i])) {\r\n                return attr(element, attrs[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* global DocumentTouch */\r\n\r\n    var inBrowser = typeof window !== 'undefined';\r\n    var isIE = inBrowser && /msie|trident/i.test(window.navigator.userAgent);\r\n    var isRtl = inBrowser && attr(document.documentElement, 'dir') === 'rtl';\r\n\r\n    var hasTouchEvents = inBrowser && 'ontouchstart' in window;\r\n    var hasPointerEvents = inBrowser && window.PointerEvent;\r\n    var hasTouch = inBrowser && (hasTouchEvents\r\n        || window.DocumentTouch && document instanceof DocumentTouch\r\n        || navigator.maxTouchPoints); // IE >=11\r\n\r\n    var pointerDown = hasPointerEvents ? 'pointerdown' : hasTouchEvents ? 'touchstart' : 'mousedown';\r\n    var pointerMove = hasPointerEvents ? 'pointermove' : hasTouchEvents ? 'touchmove' : 'mousemove';\r\n    var pointerUp = hasPointerEvents ? 'pointerup' : hasTouchEvents ? 'touchend' : 'mouseup';\r\n    var pointerEnter = hasPointerEvents ? 'pointerenter' : hasTouchEvents ? '' : 'mouseenter';\r\n    var pointerLeave = hasPointerEvents ? 'pointerleave' : hasTouchEvents ? '' : 'mouseleave';\r\n    var pointerCancel = hasPointerEvents ? 'pointercancel' : 'touchcancel';\r\n\r\n    var voidElements = {\r\n        area: true,\r\n        base: true,\r\n        br: true,\r\n        col: true,\r\n        embed: true,\r\n        hr: true,\r\n        img: true,\r\n        input: true,\r\n        keygen: true,\r\n        link: true,\r\n        menuitem: true,\r\n        meta: true,\r\n        param: true,\r\n        source: true,\r\n        track: true,\r\n        wbr: true\r\n    };\r\n    function isVoidElement(element) {\r\n        return toNodes(element).some(function (element) { return voidElements[element.tagName.toLowerCase()]; });\r\n    }\r\n\r\n    function isVisible(element) {\r\n        return toNodes(element).some(function (element) { return element.offsetWidth || element.offsetHeight || element.getClientRects().length; });\r\n    }\r\n\r\n    var selInput = 'input,select,textarea,button';\r\n    function isInput(element) {\r\n        return toNodes(element).some(function (element) { return matches(element, selInput); });\r\n    }\r\n\r\n    function isFocusable(element) {\r\n        return isInput(element) || matches(element, 'a[href],button') || hasAttr(element, 'tabindex');\r\n    }\r\n\r\n    function parent(element) {\r\n        element = toNode(element);\r\n        return element && isElement(element.parentNode) && element.parentNode;\r\n    }\r\n\r\n    function filter$1(element, selector) {\r\n        return toNodes(element).filter(function (element) { return matches(element, selector); });\r\n    }\r\n\r\n    var elProto = inBrowser ? Element.prototype : {};\r\n    var matchesFn = elProto.matches || elProto.webkitMatchesSelector || elProto.msMatchesSelector || noop;\r\n\r\n    function matches(element, selector) {\r\n        return toNodes(element).some(function (element) { return matchesFn.call(element, selector); });\r\n    }\r\n\r\n    var closestFn = elProto.closest || function (selector) {\r\n        var ancestor = this;\r\n\r\n        do {\r\n\r\n            if (matches(ancestor, selector)) {\r\n                return ancestor;\r\n            }\r\n\r\n        } while ((ancestor = parent(ancestor)));\r\n    };\r\n\r\n    function closest(element, selector) {\r\n\r\n        if (startsWith(selector, '>')) {\r\n            selector = selector.slice(1);\r\n        }\r\n\r\n        return isElement(element)\r\n            ? closestFn.call(element, selector)\r\n            : toNodes(element).map(function (element) { return closest(element, selector); }).filter(Boolean);\r\n    }\r\n\r\n    function within(element, selector) {\r\n        return !isString(selector)\r\n            ? element === selector || (isDocument(selector)\r\n                ? selector.documentElement\r\n                : toNode(selector)).contains(toNode(element)) // IE 11 document does not implement contains\r\n            : matches(element, selector) || !!closest(element, selector);\r\n    }\r\n\r\n    function parents(element, selector) {\r\n        var elements = [];\r\n\r\n        while ((element = parent(element))) {\r\n            if (!selector || matches(element, selector)) {\r\n                elements.push(element);\r\n            }\r\n        }\r\n\r\n        return elements;\r\n    }\r\n\r\n    function children(element, selector) {\r\n        element = toNode(element);\r\n        var children = element ? toNodes(element.children) : [];\r\n        return selector ? filter$1(children, selector) : children;\r\n    }\r\n\r\n    function index(element, ref) {\r\n        return ref\r\n            ? toNodes(element).indexOf(toNode(ref))\r\n            : children(parent(element)).indexOf(element);\r\n    }\r\n\r\n    function query(selector, context) {\r\n        return find(selector, getContext(selector, context));\r\n    }\r\n\r\n    function queryAll(selector, context) {\r\n        return findAll(selector, getContext(selector, context));\r\n    }\r\n\r\n    function getContext(selector, context) {\r\n        if ( context === void 0 ) context = document;\r\n\r\n        return isString(selector) && isContextSelector(selector) || isDocument(context)\r\n            ? context\r\n            : context.ownerDocument;\r\n    }\r\n\r\n    function find(selector, context) {\r\n        return toNode(_query(selector, context, 'querySelector'));\r\n    }\r\n\r\n    function findAll(selector, context) {\r\n        return toNodes(_query(selector, context, 'querySelectorAll'));\r\n    }\r\n\r\n    function _query(selector, context, queryFn) {\r\n        if ( context === void 0 ) context = document;\r\n\r\n\r\n        if (!selector || !isString(selector)) {\r\n            return selector;\r\n        }\r\n\r\n        selector = selector.replace(contextSanitizeRe, '$1 *');\r\n\r\n        if (isContextSelector(selector)) {\r\n\r\n            selector = splitSelector(selector).map(function (selector) {\r\n\r\n                var ctx = context;\r\n\r\n                if (selector[0] === '!') {\r\n\r\n                    var selectors = selector.substr(1).trim().split(' ');\r\n                    ctx = closest(parent(context), selectors[0]);\r\n                    selector = selectors.slice(1).join(' ').trim();\r\n\r\n                }\r\n\r\n                if (selector[0] === '-') {\r\n\r\n                    var selectors$1 = selector.substr(1).trim().split(' ');\r\n                    var prev = (ctx || context).previousElementSibling;\r\n                    ctx = matches(prev, selector.substr(1)) ? prev : null;\r\n                    selector = selectors$1.slice(1).join(' ');\r\n\r\n                }\r\n\r\n                if (!ctx) {\r\n                    return null;\r\n                }\r\n\r\n                return ((domPath(ctx)) + \" \" + selector);\r\n\r\n            }).filter(Boolean).join(',');\r\n\r\n            context = document;\r\n\r\n        }\r\n\r\n        try {\r\n\r\n            return context[queryFn](selector);\r\n\r\n        } catch (e) {\r\n\r\n            return null;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    var contextSelectorRe = /(^|[^\\\\],)\\s*[!>+~-]/;\r\n    var contextSanitizeRe = /([!>+~-])(?=\\s+[!>+~-]|\\s*$)/g;\r\n\r\n    var isContextSelector = memoize(function (selector) { return selector.match(contextSelectorRe); });\r\n\r\n    var selectorRe = /.*?[^\\\\](?:,|$)/g;\r\n\r\n    var splitSelector = memoize(function (selector) { return selector.match(selectorRe).map(function (selector) { return selector.replace(/,$/, '').trim(); }\r\n        ); }\r\n    );\r\n\r\n    function domPath(element) {\r\n        var names = [];\r\n        while (element.parentNode) {\r\n            if (element.id) {\r\n                names.unshift((\"#\" + (escape(element.id))));\r\n                break;\r\n            } else {\r\n                var tagName = element.tagName;\r\n                if (tagName !== 'HTML') {\r\n                    tagName += \":nth-child(\" + (index(element) + 1) + \")\";\r\n                }\r\n                names.unshift(tagName);\r\n                element = element.parentNode;\r\n            }\r\n        }\r\n        return names.join(' > ');\r\n    }\r\n\r\n    var escapeFn = inBrowser && window.CSS && CSS.escape || function (css) { return css.replace(/([^\\x7f-\\uFFFF\\w-])/g, function (match) { return (\"\\\\\" + match); }); };\r\n    function escape(css) {\r\n        return isString(css) ? escapeFn.call(null, css) : '';\r\n    }\r\n\r\n    function on() {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n\r\n        var ref = getArgs(args);\r\n        var targets = ref[0];\r\n        var type = ref[1];\r\n        var selector = ref[2];\r\n        var listener = ref[3];\r\n        var useCapture = ref[4];\r\n\r\n        targets = toEventTargets(targets);\r\n\r\n        if (listener.length > 1) {\r\n            listener = detail(listener);\r\n        }\r\n\r\n        if (useCapture && useCapture.self) {\r\n            listener = selfFilter(listener);\r\n        }\r\n\r\n        if (selector) {\r\n            listener = delegate(selector, listener);\r\n        }\r\n\r\n        useCapture = useCaptureFilter(useCapture);\r\n\r\n        type.split(' ').forEach(function (type) { return targets.forEach(function (target) { return target.addEventListener(type, listener, useCapture); }\r\n            ); }\r\n        );\r\n        return function () { return off(targets, type, listener, useCapture); };\r\n    }\r\n\r\n    function off(targets, type, listener, useCapture) {\r\n        if ( useCapture === void 0 ) useCapture = false;\r\n\r\n        useCapture = useCaptureFilter(useCapture);\r\n        targets = toEventTargets(targets);\r\n        type.split(' ').forEach(function (type) { return targets.forEach(function (target) { return target.removeEventListener(type, listener, useCapture); }\r\n            ); }\r\n        );\r\n    }\r\n\r\n    function once() {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n\r\n        var ref = getArgs(args);\r\n        var element = ref[0];\r\n        var type = ref[1];\r\n        var selector = ref[2];\r\n        var listener = ref[3];\r\n        var useCapture = ref[4];\r\n        var condition = ref[5];\r\n        var off = on(element, type, selector, function (e) {\r\n            var result = !condition || condition(e);\r\n            if (result) {\r\n                off();\r\n                listener(e, result);\r\n            }\r\n        }, useCapture);\r\n\r\n        return off;\r\n    }\r\n\r\n    function trigger(targets, event, detail) {\r\n        return toEventTargets(targets).reduce(function (notCanceled, target) { return notCanceled && target.dispatchEvent(createEvent(event, true, true, detail)); }\r\n            , true);\r\n    }\r\n\r\n    function createEvent(e, bubbles, cancelable, detail) {\r\n        if ( bubbles === void 0 ) bubbles = true;\r\n        if ( cancelable === void 0 ) cancelable = false;\r\n\r\n        if (isString(e)) {\r\n            var event = document.createEvent('CustomEvent'); // IE 11\r\n            event.initCustomEvent(e, bubbles, cancelable, detail);\r\n            e = event;\r\n        }\r\n\r\n        return e;\r\n    }\r\n\r\n    function getArgs(args) {\r\n        if (isFunction(args[2])) {\r\n            args.splice(2, 0, false);\r\n        }\r\n        return args;\r\n    }\r\n\r\n    function delegate(selector, listener) {\r\n        var this$1 = this;\r\n\r\n        return function (e) {\r\n\r\n            var current = selector[0] === '>'\r\n                ? findAll(selector, e.currentTarget).reverse().filter(function (element) { return within(e.target, element); })[0]\r\n                : closest(e.target, selector);\r\n\r\n            if (current) {\r\n                e.current = current;\r\n                listener.call(this$1, e);\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    function detail(listener) {\r\n        return function (e) { return isArray(e.detail) ? listener.apply(void 0, [ e ].concat( e.detail )) : listener(e); };\r\n    }\r\n\r\n    function selfFilter(listener) {\r\n        return function (e) {\r\n            if (e.target === e.currentTarget || e.target === e.current) {\r\n                return listener.call(null, e);\r\n            }\r\n        };\r\n    }\r\n\r\n    function useCaptureFilter(options) {\r\n        return options && isIE && !isBoolean(options)\r\n            ? !!options.capture\r\n            : options;\r\n    }\r\n\r\n    function isEventTarget(target) {\r\n        return target && 'addEventListener' in target;\r\n    }\r\n\r\n    function toEventTarget(target) {\r\n        return isEventTarget(target) ? target : toNode(target);\r\n    }\r\n\r\n    function toEventTargets(target) {\r\n        return isArray(target)\r\n                ? target.map(toEventTarget).filter(Boolean)\r\n                : isString(target)\r\n                    ? findAll(target)\r\n                    : isEventTarget(target)\r\n                        ? [target]\r\n                        : toNodes(target);\r\n    }\r\n\r\n    function isTouch(e) {\r\n        return e.pointerType === 'touch' || !!e.touches;\r\n    }\r\n\r\n    function getEventPos(e) {\r\n        var touches = e.touches;\r\n        var changedTouches = e.changedTouches;\r\n        var ref = touches && touches[0] || changedTouches && changedTouches[0] || e;\r\n        var x = ref.clientX;\r\n        var y = ref.clientY;\r\n\r\n        return {x: x, y: y};\r\n    }\r\n\r\n    /* global setImmediate */\r\n\r\n    var Promise$1 = inBrowser && window.Promise || PromiseFn;\r\n\r\n    var Deferred = function() {\r\n        var this$1 = this;\r\n\r\n        this.promise = new Promise$1(function (resolve, reject) {\r\n            this$1.reject = reject;\r\n            this$1.resolve = resolve;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\r\n     */\r\n\r\n    var RESOLVED = 0;\r\n    var REJECTED = 1;\r\n    var PENDING = 2;\r\n\r\n    var async = inBrowser && window.setImmediate || setTimeout;\r\n\r\n    function PromiseFn(executor) {\r\n\r\n        this.state = PENDING;\r\n        this.value = undefined;\r\n        this.deferred = [];\r\n\r\n        var promise = this;\r\n\r\n        try {\r\n            executor(\r\n                function (x) {\r\n                    promise.resolve(x);\r\n                },\r\n                function (r) {\r\n                    promise.reject(r);\r\n                }\r\n            );\r\n        } catch (e) {\r\n            promise.reject(e);\r\n        }\r\n    }\r\n\r\n    PromiseFn.reject = function (r) {\r\n        return new PromiseFn(function (resolve, reject) {\r\n            reject(r);\r\n        });\r\n    };\r\n\r\n    PromiseFn.resolve = function (x) {\r\n        return new PromiseFn(function (resolve, reject) {\r\n            resolve(x);\r\n        });\r\n    };\r\n\r\n    PromiseFn.all = function all(iterable) {\r\n        return new PromiseFn(function (resolve, reject) {\r\n            var result = [];\r\n            var count = 0;\r\n\r\n            if (iterable.length === 0) {\r\n                resolve(result);\r\n            }\r\n\r\n            function resolver(i) {\r\n                return function (x) {\r\n                    result[i] = x;\r\n                    count += 1;\r\n\r\n                    if (count === iterable.length) {\r\n                        resolve(result);\r\n                    }\r\n                };\r\n            }\r\n\r\n            for (var i = 0; i < iterable.length; i += 1) {\r\n                PromiseFn.resolve(iterable[i]).then(resolver(i), reject);\r\n            }\r\n        });\r\n    };\r\n\r\n    PromiseFn.race = function race(iterable) {\r\n        return new PromiseFn(function (resolve, reject) {\r\n            for (var i = 0; i < iterable.length; i += 1) {\r\n                PromiseFn.resolve(iterable[i]).then(resolve, reject);\r\n            }\r\n        });\r\n    };\r\n\r\n    var p = PromiseFn.prototype;\r\n\r\n    p.resolve = function resolve(x) {\r\n        var promise = this;\r\n\r\n        if (promise.state === PENDING) {\r\n            if (x === promise) {\r\n                throw new TypeError('Promise settled with itself.');\r\n            }\r\n\r\n            var called = false;\r\n\r\n            try {\r\n                var then = x && x.then;\r\n\r\n                if (x !== null && isObject(x) && isFunction(then)) {\r\n                    then.call(\r\n                        x,\r\n                        function (x) {\r\n                            if (!called) {\r\n                                promise.resolve(x);\r\n                            }\r\n                            called = true;\r\n                        },\r\n                        function (r) {\r\n                            if (!called) {\r\n                                promise.reject(r);\r\n                            }\r\n                            called = true;\r\n                        }\r\n                    );\r\n                    return;\r\n                }\r\n            } catch (e) {\r\n                if (!called) {\r\n                    promise.reject(e);\r\n                }\r\n                return;\r\n            }\r\n\r\n            promise.state = RESOLVED;\r\n            promise.value = x;\r\n            promise.notify();\r\n        }\r\n    };\r\n\r\n    p.reject = function reject(reason) {\r\n        var promise = this;\r\n\r\n        if (promise.state === PENDING) {\r\n            if (reason === promise) {\r\n                throw new TypeError('Promise settled with itself.');\r\n            }\r\n\r\n            promise.state = REJECTED;\r\n            promise.value = reason;\r\n            promise.notify();\r\n        }\r\n    };\r\n\r\n    p.notify = function notify() {\r\n        var this$1 = this;\r\n\r\n        async(function () {\r\n            if (this$1.state !== PENDING) {\r\n                while (this$1.deferred.length) {\r\n                    var ref = this$1.deferred.shift();\r\n                    var onResolved = ref[0];\r\n                    var onRejected = ref[1];\r\n                    var resolve = ref[2];\r\n                    var reject = ref[3];\r\n\r\n                    try {\r\n                        if (this$1.state === RESOLVED) {\r\n                            if (isFunction(onResolved)) {\r\n                                resolve(onResolved.call(undefined, this$1.value));\r\n                            } else {\r\n                                resolve(this$1.value);\r\n                            }\r\n                        } else if (this$1.state === REJECTED) {\r\n                            if (isFunction(onRejected)) {\r\n                                resolve(onRejected.call(undefined, this$1.value));\r\n                            } else {\r\n                                reject(this$1.value);\r\n                            }\r\n                        }\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    p.then = function then(onResolved, onRejected) {\r\n        var this$1 = this;\r\n\r\n        return new PromiseFn(function (resolve, reject) {\r\n            this$1.deferred.push([onResolved, onRejected, resolve, reject]);\r\n            this$1.notify();\r\n        });\r\n    };\r\n\r\n    p.catch = function (onRejected) {\r\n        return this.then(undefined, onRejected);\r\n    };\r\n\r\n    function ajax(url, options) {\r\n\r\n        var env = assign({\r\n            data: null,\r\n            method: 'GET',\r\n            headers: {},\r\n            xhr: new XMLHttpRequest(),\r\n            beforeSend: noop,\r\n            responseType: ''\r\n        }, options);\r\n\r\n        return Promise$1.resolve()\r\n            .then(function () { return env.beforeSend(env); })\r\n            .then(function () { return send(url, env); });\r\n    }\r\n\r\n    function send(url, env) {\r\n        return new Promise$1(function (resolve, reject) {\r\n            var xhr = env.xhr;\r\n\r\n            for (var prop in env) {\r\n                if (prop in xhr) {\r\n                    try {\r\n\r\n                        xhr[prop] = env[prop];\r\n\r\n                    } catch (e) {}\r\n                }\r\n            }\r\n\r\n            xhr.open(env.method.toUpperCase(), url);\r\n\r\n            for (var header in env.headers) {\r\n                xhr.setRequestHeader(header, env.headers[header]);\r\n            }\r\n\r\n            on(xhr, 'load', function () {\r\n\r\n                if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\r\n\r\n                    // IE 11 does not support responseType 'json'\r\n                    if (env.responseType === 'json' && isString(xhr.response)) {\r\n                        xhr = assign(copyXhr(xhr), {response: JSON.parse(xhr.response)});\r\n                    }\r\n\r\n                    resolve(xhr);\r\n\r\n                } else {\r\n                    reject(assign(Error(xhr.statusText), {\r\n                        xhr: xhr,\r\n                        status: xhr.status\r\n                    }));\r\n                }\r\n\r\n            });\r\n\r\n            on(xhr, 'error', function () { return reject(assign(Error('Network Error'), {xhr: xhr})); });\r\n            on(xhr, 'timeout', function () { return reject(assign(Error('Network Timeout'), {xhr: xhr})); });\r\n\r\n            xhr.send(env.data);\r\n        });\r\n    }\r\n\r\n    function getImage(src, srcset, sizes) {\r\n\r\n        return new Promise$1(function (resolve, reject) {\r\n            var img = new Image();\r\n\r\n            img.onerror = function (e) { return reject(e); };\r\n            img.onload = function () { return resolve(img); };\r\n\r\n            sizes && (img.sizes = sizes);\r\n            srcset && (img.srcset = srcset);\r\n            img.src = src;\r\n        });\r\n\r\n    }\r\n\r\n    function copyXhr(source) {\r\n        var target = {};\r\n        for (var key in source) {\r\n            target[key] = source[key];\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function ready(fn) {\r\n\r\n        if (document.readyState !== 'loading') {\r\n            fn();\r\n            return;\r\n        }\r\n\r\n        var unbind = on(document, 'DOMContentLoaded', function () {\r\n            unbind();\r\n            fn();\r\n        });\r\n    }\r\n\r\n    function empty(element) {\r\n        element = $(element);\r\n        element.innerHTML = '';\r\n        return element;\r\n    }\r\n\r\n    function html(parent, html) {\r\n        parent = $(parent);\r\n        return isUndefined(html)\r\n            ? parent.innerHTML\r\n            : append(parent.hasChildNodes() ? empty(parent) : parent, html);\r\n    }\r\n\r\n    function prepend(parent, element) {\r\n\r\n        parent = $(parent);\r\n\r\n        if (!parent.hasChildNodes()) {\r\n            return append(parent, element);\r\n        } else {\r\n            return insertNodes(element, function (element) { return parent.insertBefore(element, parent.firstChild); });\r\n        }\r\n    }\r\n\r\n    function append(parent, element) {\r\n        parent = $(parent);\r\n        return insertNodes(element, function (element) { return parent.appendChild(element); });\r\n    }\r\n\r\n    function before(ref, element) {\r\n        ref = $(ref);\r\n        return insertNodes(element, function (element) { return ref.parentNode.insertBefore(element, ref); });\r\n    }\r\n\r\n    function after(ref, element) {\r\n        ref = $(ref);\r\n        return insertNodes(element, function (element) { return ref.nextSibling\r\n            ? before(ref.nextSibling, element)\r\n            : append(ref.parentNode, element); }\r\n        );\r\n    }\r\n\r\n    function insertNodes(element, fn) {\r\n        element = isString(element) ? fragment(element) : element;\r\n        return element\r\n            ? 'length' in element\r\n                ? toNodes(element).map(fn)\r\n                : fn(element)\r\n            : null;\r\n    }\r\n\r\n    function remove$1(element) {\r\n        toNodes(element).forEach(function (element) { return element.parentNode && element.parentNode.removeChild(element); });\r\n    }\r\n\r\n    function wrapAll(element, structure) {\r\n\r\n        structure = toNode(before(element, structure));\r\n\r\n        while (structure.firstChild) {\r\n            structure = structure.firstChild;\r\n        }\r\n\r\n        append(structure, element);\r\n\r\n        return structure;\r\n    }\r\n\r\n    function wrapInner(element, structure) {\r\n        return toNodes(toNodes(element).map(function (element) { return element.hasChildNodes ? wrapAll(toNodes(element.childNodes), structure) : append(element, structure); }\r\n        ));\r\n    }\r\n\r\n    function unwrap(element) {\r\n        toNodes(element)\r\n            .map(parent)\r\n            .filter(function (value, index, self) { return self.indexOf(value) === index; })\r\n            .forEach(function (parent) {\r\n                before(parent, parent.childNodes);\r\n                remove$1(parent);\r\n            });\r\n    }\r\n\r\n    var fragmentRe = /^\\s*<(\\w+|!)[^>]*>/;\r\n    var singleTagRe = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\r\n\r\n    function fragment(html) {\r\n\r\n        var matches = singleTagRe.exec(html);\r\n        if (matches) {\r\n            return document.createElement(matches[1]);\r\n        }\r\n\r\n        var container = document.createElement('div');\r\n        if (fragmentRe.test(html)) {\r\n            container.insertAdjacentHTML('beforeend', html.trim());\r\n        } else {\r\n            container.textContent = html;\r\n        }\r\n\r\n        return container.childNodes.length > 1 ? toNodes(container.childNodes) : container.firstChild;\r\n\r\n    }\r\n\r\n    function apply$1(node, fn) {\r\n\r\n        if (!isElement(node)) {\r\n            return;\r\n        }\r\n\r\n        fn(node);\r\n        node = node.firstElementChild;\r\n        while (node) {\r\n            var next = node.nextElementSibling;\r\n            apply$1(node, fn);\r\n            node = next;\r\n        }\r\n    }\r\n\r\n    function $(selector, context) {\r\n        return isHtml(selector)\r\n            ? toNode(fragment(selector))\r\n            : find(selector, context);\r\n    }\r\n\r\n    function $$(selector, context) {\r\n        return isHtml(selector)\r\n            ? toNodes(fragment(selector))\r\n            : findAll(selector, context);\r\n    }\r\n\r\n    function isHtml(str) {\r\n        return isString(str) && (str[0] === '<' || str.match(/^\\s*</));\r\n    }\r\n\r\n    function addClass(element) {\r\n        var args = [], len = arguments.length - 1;\r\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n\r\n        apply(element, args, 'add');\r\n    }\r\n\r\n    function removeClass(element) {\r\n        var args = [], len = arguments.length - 1;\r\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n\r\n        apply(element, args, 'remove');\r\n    }\r\n\r\n    function removeClasses(element, cls) {\r\n        attr(element, 'class', function (value) { return (value || '').replace(new RegExp((\"\\\\b\" + cls + \"\\\\b\"), 'g'), ''); });\r\n    }\r\n\r\n    function replaceClass(element) {\r\n        var args = [], len = arguments.length - 1;\r\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n\r\n        args[0] && removeClass(element, args[0]);\r\n        args[1] && addClass(element, args[1]);\r\n    }\r\n\r\n    function hasClass(element, cls) {\r\n        var assign;\r\n\r\n        (assign = getClasses(cls), cls = assign[0]);\r\n        var nodes = toNodes(element);\r\n        for (var n = 0; n < nodes.length; n++) {\r\n            if (cls && nodes[n].classList.contains(cls)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function toggleClass(element, cls, force) {\r\n\r\n        cls = getClasses(cls);\r\n\r\n        var nodes = toNodes(element);\r\n        for (var n = 0; n < nodes.length; n++) {\r\n            var list = nodes[n].classList;\r\n            for (var i = 0; i < cls.length; i++) {\r\n                if (isUndefined(force)) {\r\n                    list.toggle(cls[i]);\r\n                } else if (supports.Force) {\r\n                    list.toggle(cls[i], !!force);\r\n                } else {\r\n                    list[force ? 'add' : 'remove'](cls[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function apply(element, args, fn) {\r\n        var ref;\r\n\r\n\r\n        args = args.reduce(function (args, arg) { return args.concat(getClasses(arg)); }, []);\r\n\r\n        var nodes = toNodes(element);\r\n        var loop = function ( n ) {\r\n            if (supports.Multiple) {\r\n                (ref = nodes[n].classList)[fn].apply(ref, args);\r\n            } else {\r\n                args.forEach(function (cls) { return nodes[n].classList[fn](cls); });\r\n            }\r\n        };\r\n\r\n        for (var n = 0; n < nodes.length; n++) loop( n );\r\n    }\r\n\r\n    function getClasses(str) {\r\n        return String(str).split(/\\s|,/).filter(Boolean);\r\n    }\r\n\r\n    // IE 11\r\n    var supports = {\r\n\r\n        get Multiple() {\r\n            return this.get('Multiple');\r\n        },\r\n\r\n        get Force() {\r\n            return this.get('Force');\r\n        },\r\n\r\n        get: function(key) {\r\n\r\n            var ref = document.createElement('_');\r\n            var classList = ref.classList;\r\n            classList.add('a', 'b');\r\n            classList.toggle('c', false);\r\n            supports = {\r\n                Multiple: classList.contains('b'),\r\n                Force: !classList.contains('c')\r\n            };\r\n\r\n            return supports[key];\r\n        }\r\n\r\n    };\r\n\r\n    var cssNumber = {\r\n        'animation-iteration-count': true,\r\n        'column-count': true,\r\n        'fill-opacity': true,\r\n        'flex-grow': true,\r\n        'flex-shrink': true,\r\n        'font-weight': true,\r\n        'line-height': true,\r\n        'opacity': true,\r\n        'order': true,\r\n        'orphans': true,\r\n        'stroke-dasharray': true,\r\n        'stroke-dashoffset': true,\r\n        'widows': true,\r\n        'z-index': true,\r\n        'zoom': true\r\n    };\r\n\r\n    function css(element, property, value, priority) {\r\n        if ( priority === void 0 ) priority = '';\r\n\r\n\r\n        return toNodes(element).map(function (element) {\r\n\r\n            if (isString(property)) {\r\n\r\n                property = propName(property);\r\n\r\n                if (isUndefined(value)) {\r\n                    return getStyle(element, property);\r\n                } else if (!value && !isNumber(value)) {\r\n                    element.style.removeProperty(property);\r\n                } else {\r\n                    element.style.setProperty(property, isNumeric(value) && !cssNumber[property] ? (value + \"px\") : value, priority);\r\n                }\r\n\r\n            } else if (isArray(property)) {\r\n\r\n                var styles = getStyles(element);\r\n\r\n                return property.reduce(function (props, property) {\r\n                    props[property] = styles[propName(property)];\r\n                    return props;\r\n                }, {});\r\n\r\n            } else if (isObject(property)) {\r\n                priority = value;\r\n                each(property, function (value, property) { return css(element, property, value, priority); });\r\n            }\r\n\r\n            return element;\r\n\r\n        })[0];\r\n\r\n    }\r\n\r\n    function getStyles(element, pseudoElt) {\r\n        return toWindow(element).getComputedStyle(element, pseudoElt);\r\n    }\r\n\r\n    function getStyle(element, property, pseudoElt) {\r\n        return getStyles(element, pseudoElt)[property];\r\n    }\r\n\r\n    var parseCssVar = memoize(function (name) {\r\n        /* usage in css: .uk-name:before { content:\"xyz\" } */\r\n\r\n        var element = append(document.documentElement, document.createElement('div'));\r\n\r\n        addClass(element, (\"uk-\" + name));\r\n\r\n        name = getStyle(element, 'content', ':before').replace(/^[\"'](.*)[\"']$/, '$1');\r\n\r\n        remove$1(element);\r\n\r\n        return name;\r\n    });\r\n\r\n    function getCssVar(name) {\r\n        return !isIE\r\n            ? getStyles(document.documentElement).getPropertyValue((\"--uk-\" + name))\r\n            : parseCssVar(name);\r\n    }\r\n\r\n    // https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-setproperty\r\n    var propName = memoize(function (name) { return vendorPropName(name); });\r\n\r\n    var cssPrefixes = ['webkit', 'moz', 'ms'];\r\n\r\n    function vendorPropName(name) {\r\n\r\n        name = hyphenate(name);\r\n\r\n        var ref = document.documentElement;\r\n        var style = ref.style;\r\n\r\n        if (name in style) {\r\n            return name;\r\n        }\r\n\r\n        var i = cssPrefixes.length, prefixedName;\r\n\r\n        while (i--) {\r\n            prefixedName = \"-\" + (cssPrefixes[i]) + \"-\" + name;\r\n            if (prefixedName in style) {\r\n                return prefixedName;\r\n            }\r\n        }\r\n    }\r\n\r\n    function transition(element, props, duration, timing) {\r\n        if ( duration === void 0 ) duration = 400;\r\n        if ( timing === void 0 ) timing = 'linear';\r\n\r\n\r\n        return Promise$1.all(toNodes(element).map(function (element) { return new Promise$1(function (resolve, reject) {\r\n\r\n                for (var name in props) {\r\n                    var value = css(element, name);\r\n                    if (value === '') {\r\n                        css(element, name, value);\r\n                    }\r\n                }\r\n\r\n                var timer = setTimeout(function () { return trigger(element, 'transitionend'); }, duration);\r\n\r\n                once(element, 'transitionend transitioncanceled', function (ref) {\r\n                    var type = ref.type;\r\n\r\n                    clearTimeout(timer);\r\n                    removeClass(element, 'uk-transition');\r\n                    css(element, {\r\n                        transitionProperty: '',\r\n                        transitionDuration: '',\r\n                        transitionTimingFunction: ''\r\n                    });\r\n                    type === 'transitioncanceled' ? reject() : resolve(element);\r\n                }, {self: true});\r\n\r\n                addClass(element, 'uk-transition');\r\n                css(element, assign({\r\n                    transitionProperty: Object.keys(props).map(propName).join(','),\r\n                    transitionDuration: (duration + \"ms\"),\r\n                    transitionTimingFunction: timing\r\n                }, props));\r\n\r\n            }); }\r\n        ));\r\n\r\n    }\r\n\r\n    var Transition = {\r\n\r\n        start: transition,\r\n\r\n        stop: function(element) {\r\n            trigger(element, 'transitionend');\r\n            return Promise$1.resolve();\r\n        },\r\n\r\n        cancel: function(element) {\r\n            trigger(element, 'transitioncanceled');\r\n        },\r\n\r\n        inProgress: function(element) {\r\n            return hasClass(element, 'uk-transition');\r\n        }\r\n\r\n    };\r\n\r\n    var animationPrefix = 'uk-animation-';\r\n\r\n    function animate$1(element, animation, duration, origin, out) {\r\n        if ( duration === void 0 ) duration = 200;\r\n\r\n\r\n        return Promise$1.all(toNodes(element).map(function (element) { return new Promise$1(function (resolve, reject) {\r\n\r\n                trigger(element, 'animationcanceled');\r\n                var timer = setTimeout(function () { return trigger(element, 'animationend'); }, duration);\r\n\r\n                once(element, 'animationend animationcanceled', function (ref) {\r\n                    var type = ref.type;\r\n\r\n\r\n                    clearTimeout(timer);\r\n\r\n                    type === 'animationcanceled' ? reject() : resolve(element);\r\n\r\n                    css(element, 'animationDuration', '');\r\n                    removeClasses(element, (animationPrefix + \"\\\\S*\"));\r\n\r\n                }, {self: true});\r\n\r\n                css(element, 'animationDuration', (duration + \"ms\"));\r\n                addClass(element, animation, animationPrefix + (out ? 'leave' : 'enter'));\r\n\r\n                if (startsWith(animation, animationPrefix)) {\r\n                    origin && addClass(element, (\"uk-transform-origin-\" + origin));\r\n                    out && addClass(element, (animationPrefix + \"reverse\"));\r\n                }\r\n\r\n            }); }\r\n        ));\r\n\r\n    }\r\n\r\n    var inProgress = new RegExp((animationPrefix + \"(enter|leave)\"));\r\n    var Animation = {\r\n\r\n        in: animate$1,\r\n\r\n        out: function(element, animation, duration, origin) {\r\n            return animate$1(element, animation, duration, origin, true);\r\n        },\r\n\r\n        inProgress: function(element) {\r\n            return inProgress.test(attr(element, 'class'));\r\n        },\r\n\r\n        cancel: function(element) {\r\n            trigger(element, 'animationcanceled');\r\n        }\r\n\r\n    };\r\n\r\n    var dirs$1 = {\r\n        width: ['left', 'right'],\r\n        height: ['top', 'bottom']\r\n    };\r\n\r\n    function dimensions(element) {\r\n\r\n        var rect = isElement(element)\r\n            ? toNode(element).getBoundingClientRect()\r\n            : {height: height(element), width: width(element), top: 0, left: 0};\r\n\r\n        return {\r\n            height: rect.height,\r\n            width: rect.width,\r\n            top: rect.top,\r\n            left: rect.left,\r\n            bottom: rect.top + rect.height,\r\n            right: rect.left + rect.width\r\n        };\r\n    }\r\n\r\n    function offset(element, coordinates) {\r\n\r\n        var currentOffset = dimensions(element);\r\n        var ref = toWindow(element);\r\n        var pageYOffset = ref.pageYOffset;\r\n        var pageXOffset = ref.pageXOffset;\r\n        var offsetBy = {height: pageYOffset, width: pageXOffset};\r\n\r\n        for (var dir in dirs$1) {\r\n            for (var i in dirs$1[dir]) {\r\n                currentOffset[dirs$1[dir][i]] += offsetBy[dir];\r\n            }\r\n        }\r\n\r\n        if (!coordinates) {\r\n            return currentOffset;\r\n        }\r\n\r\n        var pos = css(element, 'position');\r\n\r\n        each(css(element, ['left', 'top']), function (value, prop) { return css(element, prop, coordinates[prop]\r\n                - currentOffset[prop]\r\n                + toFloat(pos === 'absolute' && value === 'auto'\r\n                    ? position(element)[prop]\r\n                    : value)\r\n            ); }\r\n        );\r\n    }\r\n\r\n    function position(element) {\r\n\r\n        var ref = offset(element);\r\n        var top = ref.top;\r\n        var left = ref.left;\r\n\r\n        var ref$1 = toNode(element);\r\n        var ref$1_ownerDocument = ref$1.ownerDocument;\r\n        var body = ref$1_ownerDocument.body;\r\n        var documentElement = ref$1_ownerDocument.documentElement;\r\n        var offsetParent = ref$1.offsetParent;\r\n        var parent = offsetParent || documentElement;\r\n\r\n        while (parent && (parent === body || parent === documentElement) && css(parent, 'position') === 'static') {\r\n            parent = parent.parentNode;\r\n        }\r\n\r\n        if (isElement(parent)) {\r\n            var parentOffset = offset(parent);\r\n            top -= parentOffset.top + toFloat(css(parent, 'borderTopWidth'));\r\n            left -= parentOffset.left + toFloat(css(parent, 'borderLeftWidth'));\r\n        }\r\n\r\n        return {\r\n            top: top - toFloat(css(element, 'marginTop')),\r\n            left: left - toFloat(css(element, 'marginLeft'))\r\n        };\r\n    }\r\n\r\n    function offsetPosition(element) {\r\n        var offset = [0, 0];\r\n\r\n        element = toNode(element);\r\n\r\n        do {\r\n\r\n            offset[0] += element.offsetTop;\r\n            offset[1] += element.offsetLeft;\r\n\r\n            if (css(element, 'position') === 'fixed') {\r\n                var win = toWindow(element);\r\n                offset[0] += win.pageYOffset;\r\n                offset[1] += win.pageXOffset;\r\n                return offset;\r\n            }\r\n\r\n        } while ((element = element.offsetParent));\r\n\r\n        return offset;\r\n    }\r\n\r\n    var height = dimension('height');\r\n    var width = dimension('width');\r\n\r\n    function dimension(prop) {\r\n        var propName = ucfirst(prop);\r\n        return function (element, value) {\r\n\r\n            if (isUndefined(value)) {\r\n\r\n                if (isWindow(element)) {\r\n                    return element[(\"inner\" + propName)];\r\n                }\r\n\r\n                if (isDocument(element)) {\r\n                    var doc = element.documentElement;\r\n                    return Math.max(doc[(\"offset\" + propName)], doc[(\"scroll\" + propName)]);\r\n                }\r\n\r\n                element = toNode(element);\r\n\r\n                value = css(element, prop);\r\n                value = value === 'auto' ? element[(\"offset\" + propName)] : toFloat(value) || 0;\r\n\r\n                return value - boxModelAdjust(element, prop);\r\n\r\n            } else {\r\n\r\n                return css(element, prop, !value && value !== 0\r\n                    ? ''\r\n                    : +value + boxModelAdjust(element, prop) + 'px'\r\n                );\r\n\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    function boxModelAdjust(element, prop, sizing) {\r\n        if ( sizing === void 0 ) sizing = 'border-box';\r\n\r\n        return css(element, 'boxSizing') === sizing\r\n            ? dirs$1[prop].map(ucfirst).reduce(function (value, prop) { return value\r\n                + toFloat(css(element, (\"padding\" + prop)))\r\n                + toFloat(css(element, (\"border\" + prop + \"Width\"))); }\r\n                , 0)\r\n            : 0;\r\n    }\r\n\r\n    function flipPosition(pos) {\r\n        for (var dir in dirs$1) {\r\n            for (var i in dirs$1[dir]) {\r\n                if (dirs$1[dir][i] === pos) {\r\n                    return dirs$1[dir][1 - i];\r\n                }\r\n            }\r\n        }\r\n        return pos;\r\n    }\r\n\r\n    function toPx(value, property, element) {\r\n        if ( property === void 0 ) property = 'width';\r\n        if ( element === void 0 ) element = window;\r\n\r\n        return isNumeric(value)\r\n            ? +value\r\n            : endsWith(value, 'vh')\r\n                ? percent(height(toWindow(element)), value)\r\n                : endsWith(value, 'vw')\r\n                    ? percent(width(toWindow(element)), value)\r\n                    : endsWith(value, '%')\r\n                        ? percent(dimensions(element)[property], value)\r\n                        : toFloat(value);\r\n    }\r\n\r\n    function percent(base, value) {\r\n        return base * toFloat(value) / 100;\r\n    }\r\n\r\n    /*\r\n        Based on:\r\n        Copyright (c) 2016 Wilson Page wilsonpage@me.com\r\n        https://github.com/wilsonpage/fastdom\r\n    */\r\n\r\n    var fastdom = {\r\n\r\n        reads: [],\r\n        writes: [],\r\n\r\n        read: function(task) {\r\n            this.reads.push(task);\r\n            scheduleFlush();\r\n            return task;\r\n        },\r\n\r\n        write: function(task) {\r\n            this.writes.push(task);\r\n            scheduleFlush();\r\n            return task;\r\n        },\r\n\r\n        clear: function(task) {\r\n            remove(this.reads, task);\r\n            remove(this.writes, task);\r\n        },\r\n\r\n        flush: flush\r\n\r\n    };\r\n\r\n    function flush(recursion) {\r\n        if ( recursion === void 0 ) recursion = 1;\r\n\r\n        runTasks(fastdom.reads);\r\n        runTasks(fastdom.writes.splice(0));\r\n\r\n        fastdom.scheduled = false;\r\n\r\n        if (fastdom.reads.length || fastdom.writes.length) {\r\n            scheduleFlush(recursion + 1);\r\n        }\r\n    }\r\n\r\n    var RECURSION_LIMIT = 4;\r\n    function scheduleFlush(recursion) {\r\n\r\n        if (fastdom.scheduled) {\r\n            return;\r\n        }\r\n\r\n        fastdom.scheduled = true;\r\n        if (recursion && recursion < RECURSION_LIMIT) {\r\n            Promise$1.resolve().then(function () { return flush(recursion); });\r\n        } else {\r\n            requestAnimationFrame(function () { return flush(); });\r\n        }\r\n\r\n    }\r\n\r\n    function runTasks(tasks) {\r\n        var task;\r\n        while ((task = tasks.shift())) {\r\n            try {\r\n                task();\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    function remove(array, item) {\r\n        var index = array.indexOf(item);\r\n        return ~index && array.splice(index, 1);\r\n    }\r\n\r\n    function MouseTracker() {}\r\n\r\n    MouseTracker.prototype = {\r\n\r\n        positions: [],\r\n\r\n        init: function() {\r\n            var this$1 = this;\r\n\r\n\r\n            this.positions = [];\r\n\r\n            var position;\r\n            this.unbind = on(document, 'mousemove', function (e) { return position = getEventPos(e); });\r\n            this.interval = setInterval(function () {\r\n\r\n                if (!position) {\r\n                    return;\r\n                }\r\n\r\n                this$1.positions.push(position);\r\n\r\n                if (this$1.positions.length > 5) {\r\n                    this$1.positions.shift();\r\n                }\r\n            }, 50);\r\n\r\n        },\r\n\r\n        cancel: function() {\r\n            this.unbind && this.unbind();\r\n            this.interval && clearInterval(this.interval);\r\n        },\r\n\r\n        movesTo: function(target) {\r\n\r\n            if (this.positions.length < 2) {\r\n                return false;\r\n            }\r\n\r\n            var p = target.getBoundingClientRect();\r\n            var left = p.left;\r\n            var right = p.right;\r\n            var top = p.top;\r\n            var bottom = p.bottom;\r\n\r\n            var ref = this.positions;\r\n            var prevPosition = ref[0];\r\n            var position = last(this.positions);\r\n            var path = [prevPosition, position];\r\n\r\n            if (pointInRect(position, p)) {\r\n                return false;\r\n            }\r\n\r\n            var diagonals = [[{x: left, y: top}, {x: right, y: bottom}], [{x: left, y: bottom}, {x: right, y: top}]];\r\n\r\n            return diagonals.some(function (diagonal) {\r\n                var intersection = intersect(path, diagonal);\r\n                return intersection && pointInRect(intersection, p);\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    // Inspired by http://paulbourke.net/geometry/pointlineplane/\r\n    function intersect(ref, ref$1) {\r\n        var ref_0 = ref[0];\r\n        var x1 = ref_0.x;\r\n        var y1 = ref_0.y;\r\n        var ref_1 = ref[1];\r\n        var x2 = ref_1.x;\r\n        var y2 = ref_1.y;\r\n        var ref$1_0 = ref$1[0];\r\n        var x3 = ref$1_0.x;\r\n        var y3 = ref$1_0.y;\r\n        var ref$1_1 = ref$1[1];\r\n        var x4 = ref$1_1.x;\r\n        var y4 = ref$1_1.y;\r\n\r\n\r\n        var denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n\r\n        // Lines are parallel\r\n        if (denominator === 0) {\r\n            return false;\r\n        }\r\n\r\n        var ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\r\n\r\n        if (ua < 0) {\r\n            return false;\r\n        }\r\n\r\n        // Return an object with the x and y coordinates of the intersection\r\n        return {x: x1 + ua * (x2 - x1), y: y1 + ua * (y2 - y1)};\r\n    }\r\n\r\n    var strats = {};\r\n\r\n    strats.events =\r\n    strats.created =\r\n    strats.beforeConnect =\r\n    strats.connected =\r\n    strats.beforeDisconnect =\r\n    strats.disconnected =\r\n    strats.destroy = concatStrat;\r\n\r\n    // args strategy\r\n    strats.args = function (parentVal, childVal) {\r\n        return childVal !== false && concatStrat(childVal || parentVal);\r\n    };\r\n\r\n    // update strategy\r\n    strats.update = function (parentVal, childVal) {\r\n        return sortBy$1(concatStrat(parentVal, isFunction(childVal) ? {read: childVal} : childVal), 'order');\r\n    };\r\n\r\n    // property strategy\r\n    strats.props = function (parentVal, childVal) {\r\n\r\n        if (isArray(childVal)) {\r\n            childVal = childVal.reduce(function (value, key) {\r\n                value[key] = String;\r\n                return value;\r\n            }, {});\r\n        }\r\n\r\n        return strats.methods(parentVal, childVal);\r\n    };\r\n\r\n    // extend strategy\r\n    strats.computed =\r\n    strats.methods = function (parentVal, childVal) {\r\n        return childVal\r\n            ? parentVal\r\n                ? assign({}, parentVal, childVal)\r\n                : childVal\r\n            : parentVal;\r\n    };\r\n\r\n    // data strategy\r\n    strats.data = function (parentVal, childVal, vm) {\r\n\r\n        if (!vm) {\r\n\r\n            if (!childVal) {\r\n                return parentVal;\r\n            }\r\n\r\n            if (!parentVal) {\r\n                return childVal;\r\n            }\r\n\r\n            return function (vm) {\r\n                return mergeFnData(parentVal, childVal, vm);\r\n            };\r\n\r\n        }\r\n\r\n        return mergeFnData(parentVal, childVal, vm);\r\n    };\r\n\r\n    function mergeFnData(parentVal, childVal, vm) {\r\n        return strats.computed(\r\n            isFunction(parentVal)\r\n                ? parentVal.call(vm, vm)\r\n                : parentVal,\r\n            isFunction(childVal)\r\n                ? childVal.call(vm, vm)\r\n                : childVal\r\n        );\r\n    }\r\n\r\n    // concat strategy\r\n    function concatStrat(parentVal, childVal) {\r\n\r\n        parentVal = parentVal && !isArray(parentVal) ? [parentVal] : parentVal;\r\n\r\n        return childVal\r\n            ? parentVal\r\n                ? parentVal.concat(childVal)\r\n                : isArray(childVal)\r\n                    ? childVal\r\n                    : [childVal]\r\n            : parentVal;\r\n    }\r\n\r\n    // default strategy\r\n    function defaultStrat(parentVal, childVal) {\r\n        return isUndefined(childVal) ? parentVal : childVal;\r\n    }\r\n\r\n    function mergeOptions(parent, child, vm) {\r\n\r\n        var options = {};\r\n\r\n        if (isFunction(child)) {\r\n            child = child.options;\r\n        }\r\n\r\n        if (child.extends) {\r\n            parent = mergeOptions(parent, child.extends, vm);\r\n        }\r\n\r\n        if (child.mixins) {\r\n            for (var i = 0, l = child.mixins.length; i < l; i++) {\r\n                parent = mergeOptions(parent, child.mixins[i], vm);\r\n            }\r\n        }\r\n\r\n        for (var key in parent) {\r\n            mergeKey(key);\r\n        }\r\n\r\n        for (var key$1 in child) {\r\n            if (!hasOwn(parent, key$1)) {\r\n                mergeKey(key$1);\r\n            }\r\n        }\r\n\r\n        function mergeKey(key) {\r\n            options[key] = (strats[key] || defaultStrat)(parent[key], child[key], vm);\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    function parseOptions(options, args) {\r\n        var obj;\r\n\r\n        if ( args === void 0 ) args = [];\r\n\r\n        try {\r\n\r\n            return !options\r\n                ? {}\r\n                : startsWith(options, '{')\r\n                    ? JSON.parse(options)\r\n                    : args.length && !includes(options, ':')\r\n                        ? (( obj = {}, obj[args[0]] = options, obj ))\r\n                        : options.split(';').reduce(function (options, option) {\r\n                            var ref = option.split(/:(.*)/);\r\n                            var key = ref[0];\r\n                            var value = ref[1];\r\n                            if (key && !isUndefined(value)) {\r\n                                options[key.trim()] = value.trim();\r\n                            }\r\n                            return options;\r\n                        }, {});\r\n\r\n        } catch (e) {\r\n            return {};\r\n        }\r\n\r\n    }\r\n\r\n    function play(el) {\r\n\r\n        if (isIFrame(el)) {\r\n            call(el, {func: 'playVideo', method: 'play'});\r\n        }\r\n\r\n        if (isHTML5(el)) {\r\n            try {\r\n                el.play().catch(noop);\r\n            } catch (e) {}\r\n        }\r\n\r\n    }\r\n\r\n    function pause(el) {\r\n\r\n        if (isIFrame(el)) {\r\n            call(el, {func: 'pauseVideo', method: 'pause'});\r\n        }\r\n\r\n        if (isHTML5(el)) {\r\n            el.pause();\r\n        }\r\n\r\n    }\r\n\r\n    function mute(el) {\r\n\r\n        if (isIFrame(el)) {\r\n            call(el, {func: 'mute', method: 'setVolume', value: 0});\r\n        }\r\n\r\n        if (isHTML5(el)) {\r\n            el.muted = true;\r\n        }\r\n\r\n    }\r\n\r\n    function isHTML5(el) {\r\n        return el && el.tagName === 'VIDEO';\r\n    }\r\n\r\n    function isIFrame(el) {\r\n        return el && el.tagName === 'IFRAME' && (isYoutube(el) || isVimeo(el));\r\n    }\r\n\r\n    function isYoutube(el) {\r\n        return !!el.src.match(/\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/(watch\\?v=[^&\\s]+|embed)|youtu\\.be\\/.*/);\r\n    }\r\n\r\n    function isVimeo(el) {\r\n        return !!el.src.match(/vimeo\\.com\\/video\\/.*/);\r\n    }\r\n\r\n    function call(el, cmd) {\r\n        enableApi(el).then(function () { return post(el, cmd); });\r\n    }\r\n\r\n    function post(el, cmd) {\r\n        try {\r\n            el.contentWindow.postMessage(JSON.stringify(assign({event: 'command'}, cmd)), '*');\r\n        } catch (e) {}\r\n    }\r\n\r\n    var stateKey$1 = '_ukPlayer';\r\n    var counter = 0;\r\n    function enableApi(el) {\r\n\r\n        if (el[stateKey$1]) {\r\n            return el[stateKey$1];\r\n        }\r\n\r\n        var youtube = isYoutube(el);\r\n        var vimeo = isVimeo(el);\r\n\r\n        var id = ++counter;\r\n        var poller;\r\n\r\n        return el[stateKey$1] = new Promise$1(function (resolve) {\r\n\r\n            youtube && once(el, 'load', function () {\r\n                var listener = function () { return post(el, {event: 'listening', id: id}); };\r\n                poller = setInterval(listener, 100);\r\n                listener();\r\n            });\r\n\r\n            once(window, 'message', resolve, false, function (ref) {\r\n                var data = ref.data;\r\n\r\n\r\n                try {\r\n                    data = JSON.parse(data);\r\n                    return data && (youtube && data.id === id && data.event === 'onReady' || vimeo && Number(data.player_id) === id);\r\n                } catch (e) {}\r\n\r\n            });\r\n\r\n            el.src = \"\" + (el.src) + (includes(el.src, '?') ? '&' : '?') + (youtube ? 'enablejsapi=1' : (\"api=1&player_id=\" + id));\r\n\r\n        }).then(function () { return clearInterval(poller); });\r\n    }\r\n\r\n    function isInView(element, offsetTop, offsetLeft) {\r\n        if ( offsetTop === void 0 ) offsetTop = 0;\r\n        if ( offsetLeft === void 0 ) offsetLeft = 0;\r\n\r\n\r\n        if (!isVisible(element)) {\r\n            return false;\r\n        }\r\n\r\n        return intersectRect.apply(void 0, scrollParents(element).map(function (parent) {\r\n\r\n            var ref = offset(getViewport$1(parent));\r\n            var top = ref.top;\r\n            var left = ref.left;\r\n            var bottom = ref.bottom;\r\n            var right = ref.right;\r\n\r\n            return {\r\n                top: top - offsetTop,\r\n                left: left - offsetLeft,\r\n                bottom: bottom + offsetTop,\r\n                right: right + offsetLeft\r\n            };\r\n        }).concat(offset(element)));\r\n    }\r\n\r\n    function scrollTop(element, top) {\r\n\r\n        if (isWindow(element) || isDocument(element)) {\r\n            element = getScrollingElement(element);\r\n        } else {\r\n            element = toNode(element);\r\n        }\r\n\r\n        element.scrollTop = top;\r\n    }\r\n\r\n    function scrollIntoView(element, ref) {\r\n        if ( ref === void 0 ) ref = {};\r\n        var offsetBy = ref.offset; if ( offsetBy === void 0 ) offsetBy = 0;\r\n\r\n\r\n        var parents = isVisible(element) ? scrollParents(element) : [];\r\n        var diff = 0;\r\n        return parents.reduce(function (fn, scrollElement, i) {\r\n\r\n            var scrollTop = scrollElement.scrollTop;\r\n            var scrollHeight = scrollElement.scrollHeight;\r\n            var maxScroll = scrollHeight - getViewportClientHeight(scrollElement);\r\n\r\n            var top = Math.ceil(\r\n                offset(parents[i - 1] || element).top\r\n                - offset(getViewport$1(scrollElement)).top\r\n                - offsetBy\r\n                + diff\r\n                + scrollTop\r\n            );\r\n\r\n            if (top > maxScroll) {\r\n                diff = top - maxScroll;\r\n                top = maxScroll;\r\n            } else {\r\n                diff = 0;\r\n            }\r\n\r\n            return function () { return scrollTo(scrollElement, top - scrollTop).then(fn); };\r\n\r\n        }, function () { return Promise$1.resolve(); })();\r\n\r\n        function scrollTo(element, top) {\r\n            return new Promise$1(function (resolve) {\r\n\r\n                var scroll = element.scrollTop;\r\n                var duration = getDuration(Math.abs(top));\r\n                var start = Date.now();\r\n\r\n                (function step() {\r\n\r\n                    var percent = ease(clamp((Date.now() - start) / duration));\r\n\r\n                    scrollTop(element, scroll + top * percent);\r\n\r\n                    // scroll more if we have not reached our destination\r\n                    if (percent !== 1) {\r\n                        requestAnimationFrame(step);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n\r\n                })();\r\n            });\r\n        }\r\n\r\n        function getDuration(dist) {\r\n            return 40 * Math.pow(dist, .375);\r\n        }\r\n\r\n        function ease(k) {\r\n            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n        }\r\n\r\n    }\r\n\r\n    function scrolledOver(element, heightOffset) {\r\n        if ( heightOffset === void 0 ) heightOffset = 0;\r\n\r\n\r\n        if (!isVisible(element)) {\r\n            return 0;\r\n        }\r\n\r\n        var ref = scrollParents(element, /auto|scroll/, true);\r\n        var scrollElement = ref[0];\r\n        var scrollHeight = scrollElement.scrollHeight;\r\n        var scrollTop = scrollElement.scrollTop;\r\n        var clientHeight = getViewportClientHeight(scrollElement);\r\n        var viewportTop = offsetPosition(element)[0] - scrollTop - offsetPosition(scrollElement)[0];\r\n        var viewportDist = Math.min(clientHeight, viewportTop + scrollTop);\r\n\r\n        var top = viewportTop - viewportDist;\r\n        var dist = Math.min(\r\n            element.offsetHeight + heightOffset + viewportDist,\r\n            scrollHeight - (viewportTop + scrollTop),\r\n            scrollHeight - clientHeight\r\n        );\r\n\r\n        return clamp(-1 * top / dist);\r\n    }\r\n\r\n    function scrollParents(element, overflowRe, scrollable) {\r\n        if ( overflowRe === void 0 ) overflowRe = /auto|scroll|hidden/;\r\n        if ( scrollable === void 0 ) scrollable = false;\r\n\r\n        var scrollEl = getScrollingElement(element);\r\n\r\n        var ancestors = parents(element).reverse();\r\n        ancestors = ancestors.slice(ancestors.indexOf(scrollEl) + 1);\r\n\r\n        var fixedIndex = findIndex(ancestors, function (el) { return css(el, 'position') === 'fixed'; });\r\n        if (~fixedIndex) {\r\n            ancestors = ancestors.slice(fixedIndex);\r\n        }\r\n\r\n        return [scrollEl].concat(ancestors.filter(function (parent) { return overflowRe.test(css(parent, 'overflow')) && (!scrollable || parent.scrollHeight > getViewportClientHeight(parent)); })\r\n        ).reverse();\r\n    }\r\n\r\n    function getViewport$1(scrollElement) {\r\n        return scrollElement === getScrollingElement(scrollElement) ? window : scrollElement;\r\n    }\r\n\r\n    // iOS 12 returns <body> as scrollingElement\r\n    function getViewportClientHeight(scrollElement) {\r\n        return (scrollElement === getScrollingElement(scrollElement) ? document.documentElement : scrollElement).clientHeight;\r\n    }\r\n\r\n    function getScrollingElement(element) {\r\n        var ref = toWindow(element);\r\n        var document = ref.document;\r\n        return document.scrollingElement || document.documentElement;\r\n    }\r\n\r\n    var dirs = {\r\n        width: ['x', 'left', 'right'],\r\n        height: ['y', 'top', 'bottom']\r\n    };\r\n\r\n    function positionAt(element, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary) {\r\n\r\n        elAttach = getPos(elAttach);\r\n        targetAttach = getPos(targetAttach);\r\n\r\n        var flipped = {element: elAttach, target: targetAttach};\r\n\r\n        if (!element || !target) {\r\n            return flipped;\r\n        }\r\n\r\n        var dim = offset(element);\r\n        var targetDim = offset(target);\r\n        var position = targetDim;\r\n\r\n        moveTo(position, elAttach, dim, -1);\r\n        moveTo(position, targetAttach, targetDim, 1);\r\n\r\n        elOffset = getOffsets(elOffset, dim.width, dim.height);\r\n        targetOffset = getOffsets(targetOffset, targetDim.width, targetDim.height);\r\n\r\n        elOffset['x'] += targetOffset['x'];\r\n        elOffset['y'] += targetOffset['y'];\r\n\r\n        position.left += elOffset['x'];\r\n        position.top += elOffset['y'];\r\n\r\n        if (flip) {\r\n\r\n            var boundaries = scrollParents(element).map(getViewport$1);\r\n\r\n            if (boundary && !includes(boundaries, boundary)) {\r\n                boundaries.unshift(boundary);\r\n            }\r\n\r\n            boundaries = boundaries.map(function (el) { return offset(el); });\r\n\r\n            each(dirs, function (ref, prop) {\r\n                var dir = ref[0];\r\n                var align = ref[1];\r\n                var alignFlip = ref[2];\r\n\r\n\r\n                if (!(flip === true || includes(flip, dir))) {\r\n                    return;\r\n                }\r\n\r\n                boundaries.some(function (boundary) {\r\n\r\n                    var elemOffset = elAttach[dir] === align\r\n                        ? -dim[prop]\r\n                        : elAttach[dir] === alignFlip\r\n                            ? dim[prop]\r\n                            : 0;\r\n\r\n                    var targetOffset = targetAttach[dir] === align\r\n                        ? targetDim[prop]\r\n                        : targetAttach[dir] === alignFlip\r\n                            ? -targetDim[prop]\r\n                            : 0;\r\n\r\n                    if (position[align] < boundary[align] || position[align] + dim[prop] > boundary[alignFlip]) {\r\n\r\n                        var centerOffset = dim[prop] / 2;\r\n                        var centerTargetOffset = targetAttach[dir] === 'center' ? -targetDim[prop] / 2 : 0;\r\n\r\n                        return elAttach[dir] === 'center' && (\r\n                            apply(centerOffset, centerTargetOffset)\r\n                            || apply(-centerOffset, -centerTargetOffset)\r\n                        ) || apply(elemOffset, targetOffset);\r\n\r\n                    }\r\n\r\n                    function apply(elemOffset, targetOffset) {\r\n\r\n                        var newVal = toFloat((position[align] + elemOffset + targetOffset - elOffset[dir] * 2).toFixed(4));\r\n\r\n                        if (newVal >= boundary[align] && newVal + dim[prop] <= boundary[alignFlip]) {\r\n                            position[align] = newVal;\r\n\r\n                            ['element', 'target'].forEach(function (el) {\r\n                                flipped[el][dir] = !elemOffset\r\n                                    ? flipped[el][dir]\r\n                                    : flipped[el][dir] === dirs[prop][1]\r\n                                        ? dirs[prop][2]\r\n                                        : dirs[prop][1];\r\n                            });\r\n\r\n                            return true;\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        offset(element, position);\r\n\r\n        return flipped;\r\n    }\r\n\r\n    function moveTo(position, attach, dim, factor) {\r\n        each(dirs, function (ref, prop) {\r\n            var dir = ref[0];\r\n            var align = ref[1];\r\n            var alignFlip = ref[2];\r\n\r\n            if (attach[dir] === alignFlip) {\r\n                position[align] += dim[prop] * factor;\r\n            } else if (attach[dir] === 'center') {\r\n                position[align] += dim[prop] * factor / 2;\r\n            }\r\n        });\r\n    }\r\n\r\n    function getPos(pos) {\r\n\r\n        var x = /left|center|right/;\r\n        var y = /top|center|bottom/;\r\n\r\n        pos = (pos || '').split(' ');\r\n\r\n        if (pos.length === 1) {\r\n            pos = x.test(pos[0])\r\n                ? pos.concat('center')\r\n                : y.test(pos[0])\r\n                    ? ['center'].concat(pos)\r\n                    : ['center', 'center'];\r\n        }\r\n\r\n        return {\r\n            x: x.test(pos[0]) ? pos[0] : 'center',\r\n            y: y.test(pos[1]) ? pos[1] : 'center'\r\n        };\r\n    }\r\n\r\n    function getOffsets(offsets, width, height) {\r\n\r\n        var ref = (offsets || '').split(' ');\r\n        var x = ref[0];\r\n        var y = ref[1];\r\n\r\n        return {\r\n            x: x ? toFloat(x) * (endsWith(x, '%') ? width / 100 : 1) : 0,\r\n            y: y ? toFloat(y) * (endsWith(y, '%') ? height / 100 : 1) : 0\r\n        };\r\n    }\r\n\r\n    var util = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        ajax: ajax,\r\n        getImage: getImage,\r\n        transition: transition,\r\n        Transition: Transition,\r\n        animate: animate$1,\r\n        Animation: Animation,\r\n        attr: attr,\r\n        hasAttr: hasAttr,\r\n        removeAttr: removeAttr,\r\n        data: data,\r\n        addClass: addClass,\r\n        removeClass: removeClass,\r\n        removeClasses: removeClasses,\r\n        replaceClass: replaceClass,\r\n        hasClass: hasClass,\r\n        toggleClass: toggleClass,\r\n        dimensions: dimensions,\r\n        offset: offset,\r\n        position: position,\r\n        offsetPosition: offsetPosition,\r\n        height: height,\r\n        width: width,\r\n        boxModelAdjust: boxModelAdjust,\r\n        flipPosition: flipPosition,\r\n        toPx: toPx,\r\n        ready: ready,\r\n        empty: empty,\r\n        html: html,\r\n        prepend: prepend,\r\n        append: append,\r\n        before: before,\r\n        after: after,\r\n        remove: remove$1,\r\n        wrapAll: wrapAll,\r\n        wrapInner: wrapInner,\r\n        unwrap: unwrap,\r\n        fragment: fragment,\r\n        apply: apply$1,\r\n        $: $,\r\n        $$: $$,\r\n        inBrowser: inBrowser,\r\n        isIE: isIE,\r\n        isRtl: isRtl,\r\n        hasTouch: hasTouch,\r\n        pointerDown: pointerDown,\r\n        pointerMove: pointerMove,\r\n        pointerUp: pointerUp,\r\n        pointerEnter: pointerEnter,\r\n        pointerLeave: pointerLeave,\r\n        pointerCancel: pointerCancel,\r\n        on: on,\r\n        off: off,\r\n        once: once,\r\n        trigger: trigger,\r\n        createEvent: createEvent,\r\n        toEventTargets: toEventTargets,\r\n        isTouch: isTouch,\r\n        getEventPos: getEventPos,\r\n        fastdom: fastdom,\r\n        isVoidElement: isVoidElement,\r\n        isVisible: isVisible,\r\n        selInput: selInput,\r\n        isInput: isInput,\r\n        isFocusable: isFocusable,\r\n        parent: parent,\r\n        filter: filter$1,\r\n        matches: matches,\r\n        closest: closest,\r\n        within: within,\r\n        parents: parents,\r\n        children: children,\r\n        index: index,\r\n        hasOwn: hasOwn,\r\n        hyphenate: hyphenate,\r\n        camelize: camelize,\r\n        ucfirst: ucfirst,\r\n        startsWith: startsWith,\r\n        endsWith: endsWith,\r\n        includes: includes,\r\n        findIndex: findIndex,\r\n        isArray: isArray,\r\n        isFunction: isFunction,\r\n        isObject: isObject,\r\n        isPlainObject: isPlainObject,\r\n        isWindow: isWindow,\r\n        isDocument: isDocument,\r\n        isNode: isNode,\r\n        isElement: isElement,\r\n        isBoolean: isBoolean,\r\n        isString: isString,\r\n        isNumber: isNumber,\r\n        isNumeric: isNumeric,\r\n        isEmpty: isEmpty,\r\n        isUndefined: isUndefined,\r\n        toBoolean: toBoolean,\r\n        toNumber: toNumber,\r\n        toFloat: toFloat,\r\n        toArray: toArray,\r\n        toNode: toNode,\r\n        toNodes: toNodes,\r\n        toWindow: toWindow,\r\n        toMs: toMs,\r\n        isEqual: isEqual,\r\n        swap: swap,\r\n        assign: assign,\r\n        last: last,\r\n        each: each,\r\n        sortBy: sortBy$1,\r\n        uniqueBy: uniqueBy,\r\n        clamp: clamp,\r\n        noop: noop,\r\n        intersectRect: intersectRect,\r\n        pointInRect: pointInRect,\r\n        Dimensions: Dimensions,\r\n        getIndex: getIndex,\r\n        memoize: memoize,\r\n        MouseTracker: MouseTracker,\r\n        mergeOptions: mergeOptions,\r\n        parseOptions: parseOptions,\r\n        play: play,\r\n        pause: pause,\r\n        mute: mute,\r\n        positionAt: positionAt,\r\n        Promise: Promise$1,\r\n        Deferred: Deferred,\r\n        query: query,\r\n        queryAll: queryAll,\r\n        find: find,\r\n        findAll: findAll,\r\n        escape: escape,\r\n        css: css,\r\n        getCssVar: getCssVar,\r\n        propName: propName,\r\n        isInView: isInView,\r\n        scrollTop: scrollTop,\r\n        scrollIntoView: scrollIntoView,\r\n        scrolledOver: scrolledOver,\r\n        scrollParents: scrollParents,\r\n        getViewport: getViewport$1,\r\n        getViewportClientHeight: getViewportClientHeight\r\n    });\r\n\r\n    function globalAPI (UIkit) {\r\n\r\n        var DATA = UIkit.data;\r\n\r\n        UIkit.use = function (plugin) {\r\n\r\n            if (plugin.installed) {\r\n                return;\r\n            }\r\n\r\n            plugin.call(null, this);\r\n            plugin.installed = true;\r\n\r\n            return this;\r\n        };\r\n\r\n        UIkit.mixin = function (mixin, component) {\r\n            component = (isString(component) ? UIkit.component(component) : component) || this;\r\n            component.options = mergeOptions(component.options, mixin);\r\n        };\r\n\r\n        UIkit.extend = function (options) {\r\n\r\n            options = options || {};\r\n\r\n            var Super = this;\r\n            var Sub = function UIkitComponent(options) {\r\n                this._init(options);\r\n            };\r\n\r\n            Sub.prototype = Object.create(Super.prototype);\r\n            Sub.prototype.constructor = Sub;\r\n            Sub.options = mergeOptions(Super.options, options);\r\n\r\n            Sub.super = Super;\r\n            Sub.extend = Super.extend;\r\n\r\n            return Sub;\r\n        };\r\n\r\n        UIkit.update = function (element, e) {\r\n\r\n            element = element ? toNode(element) : document.body;\r\n\r\n            parents(element).reverse().forEach(function (element) { return update(element[DATA], e); });\r\n            apply$1(element, function (element) { return update(element[DATA], e); });\r\n\r\n        };\r\n\r\n        var container;\r\n        Object.defineProperty(UIkit, 'container', {\r\n\r\n            get: function() {\r\n                return container || document.body;\r\n            },\r\n\r\n            set: function(element) {\r\n                container = $(element);\r\n            }\r\n\r\n        });\r\n\r\n        function update(data, e) {\r\n\r\n            if (!data) {\r\n                return;\r\n            }\r\n\r\n            for (var name in data) {\r\n                if (data[name]._connected) {\r\n                    data[name]._callUpdate(e);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function hooksAPI (UIkit) {\r\n\r\n        UIkit.prototype._callHook = function (hook) {\r\n            var this$1 = this;\r\n\r\n\r\n            var handlers = this.$options[hook];\r\n\r\n            if (handlers) {\r\n                handlers.forEach(function (handler) { return handler.call(this$1); });\r\n            }\r\n        };\r\n\r\n        UIkit.prototype._callConnected = function () {\r\n\r\n            if (this._connected) {\r\n                return;\r\n            }\r\n\r\n            this._data = {};\r\n            this._computeds = {};\r\n\r\n            this._initProps();\r\n\r\n            this._callHook('beforeConnect');\r\n            this._connected = true;\r\n\r\n            this._initEvents();\r\n            this._initObservers();\r\n\r\n            this._callHook('connected');\r\n            this._callUpdate();\r\n        };\r\n\r\n        UIkit.prototype._callDisconnected = function () {\r\n\r\n            if (!this._connected) {\r\n                return;\r\n            }\r\n\r\n            this._callHook('beforeDisconnect');\r\n            this._disconnectObservers();\r\n            this._unbindEvents();\r\n            this._callHook('disconnected');\r\n\r\n            this._connected = false;\r\n            delete this._watch;\r\n\r\n        };\r\n\r\n        UIkit.prototype._callUpdate = function (e) {\r\n            var this$1 = this;\r\n            if ( e === void 0 ) e = 'update';\r\n\r\n\r\n            if (!this._connected) {\r\n                return;\r\n            }\r\n\r\n            if (e === 'update' || e === 'resize') {\r\n                this._callWatches();\r\n            }\r\n\r\n            if (!this.$options.update) {\r\n                return;\r\n            }\r\n\r\n            if (!this._updates) {\r\n                this._updates = new Set();\r\n                fastdom.read(function () {\r\n                    if (this$1._connected) {\r\n                        runUpdates.call(this$1, this$1._updates);\r\n                    }\r\n                    delete this$1._updates;\r\n                });\r\n            }\r\n\r\n            this._updates.add(e.type || e);\r\n        };\r\n\r\n        UIkit.prototype._callWatches = function () {\r\n            var this$1 = this;\r\n\r\n\r\n            if (this._watch) {\r\n                return;\r\n            }\r\n\r\n            var initial = !hasOwn(this, '_watch');\r\n\r\n            this._watch = fastdom.read(function () {\r\n                if (this$1._connected) {\r\n                    runWatches.call(this$1, initial);\r\n                }\r\n                this$1._watch = null;\r\n\r\n            });\r\n\r\n        };\r\n\r\n        function runUpdates(types) {\r\n            var this$1 = this;\r\n\r\n\r\n            var updates = this.$options.update;\r\n\r\n            var loop = function ( i ) {\r\n                var ref = updates[i];\r\n                var read = ref.read;\r\n                var write = ref.write;\r\n                var events = ref.events;\r\n\r\n                if (!types.has('update') && (!events || !events.some(function (type) { return types.has(type); }))) {\r\n                    return;\r\n                }\r\n\r\n                var result = (void 0);\r\n                if (read) {\r\n\r\n                    result = read.call(this$1, this$1._data, types);\r\n\r\n                    if (result && isPlainObject(result)) {\r\n                        assign(this$1._data, result);\r\n                    }\r\n                }\r\n\r\n                if (write && result !== false) {\r\n                    fastdom.write(function () { return write.call(this$1, this$1._data, types); });\r\n                }\r\n\r\n            };\r\n\r\n            for (var i = 0; i < updates.length; i++) loop( i );\r\n        }\r\n\r\n        function runWatches(initial) {\r\n\r\n            var ref = this;\r\n            var computed = ref.$options.computed;\r\n            var _computeds = ref._computeds;\r\n\r\n            for (var key in computed) {\r\n\r\n                var hasPrev = hasOwn(_computeds, key);\r\n                var prev = _computeds[key];\r\n\r\n                delete _computeds[key];\r\n\r\n                var ref$1 = computed[key];\r\n                var watch = ref$1.watch;\r\n                var immediate = ref$1.immediate;\r\n                if (watch && (\r\n                    initial && immediate\r\n                    || hasPrev && !isEqual(prev, this[key])\r\n                )) {\r\n                    watch.call(this, this[key], prev);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    function stateAPI (UIkit) {\r\n\r\n        var uid = 0;\r\n\r\n        UIkit.prototype._init = function (options) {\r\n\r\n            options = options || {};\r\n            options.data = normalizeData(options, this.constructor.options);\r\n\r\n            this.$options = mergeOptions(this.constructor.options, options, this);\r\n            this.$el = null;\r\n            this.$props = {};\r\n\r\n            this._uid = uid++;\r\n            this._initData();\r\n            this._initMethods();\r\n            this._initComputeds();\r\n            this._callHook('created');\r\n\r\n            if (options.el) {\r\n                this.$mount(options.el);\r\n            }\r\n        };\r\n\r\n        UIkit.prototype._initData = function () {\r\n\r\n            var ref = this.$options;\r\n            var data = ref.data; if ( data === void 0 ) data = {};\r\n\r\n            for (var key in data) {\r\n                this.$props[key] = this[key] = data[key];\r\n            }\r\n        };\r\n\r\n        UIkit.prototype._initMethods = function () {\r\n\r\n            var ref = this.$options;\r\n            var methods = ref.methods;\r\n\r\n            if (methods) {\r\n                for (var key in methods) {\r\n                    this[key] = methods[key].bind(this);\r\n                }\r\n            }\r\n        };\r\n\r\n        UIkit.prototype._initComputeds = function () {\r\n\r\n            var ref = this.$options;\r\n            var computed = ref.computed;\r\n\r\n            this._computeds = {};\r\n\r\n            if (computed) {\r\n                for (var key in computed) {\r\n                    registerComputed(this, key, computed[key]);\r\n                }\r\n            }\r\n        };\r\n\r\n        UIkit.prototype._initProps = function (props) {\r\n\r\n            var key;\r\n\r\n            props = props || getProps(this.$options, this.$name);\r\n\r\n            for (key in props) {\r\n                if (!isUndefined(props[key])) {\r\n                    this.$props[key] = props[key];\r\n                }\r\n            }\r\n\r\n            var exclude = [this.$options.computed, this.$options.methods];\r\n            for (key in this.$props) {\r\n                if (key in props && notIn(exclude, key)) {\r\n                    this[key] = this.$props[key];\r\n                }\r\n            }\r\n        };\r\n\r\n        UIkit.prototype._initEvents = function () {\r\n            var this$1 = this;\r\n\r\n\r\n            this._events = [];\r\n\r\n            var ref = this.$options;\r\n            var events = ref.events;\r\n\r\n            if (events) {\r\n\r\n                events.forEach(function (event) {\r\n\r\n                    if (!hasOwn(event, 'handler')) {\r\n                        for (var key in event) {\r\n                            registerEvent(this$1, event[key], key);\r\n                        }\r\n                    } else {\r\n                        registerEvent(this$1, event);\r\n                    }\r\n\r\n                });\r\n            }\r\n        };\r\n\r\n        UIkit.prototype._unbindEvents = function () {\r\n            this._events.forEach(function (unbind) { return unbind(); });\r\n            delete this._events;\r\n        };\r\n\r\n        UIkit.prototype._initObservers = function () {\r\n            this._observers = [\r\n                initChildListObserver(this),\r\n                initPropsObserver(this)\r\n            ];\r\n        };\r\n\r\n        UIkit.prototype._disconnectObservers = function () {\r\n            this._observers.forEach(function (observer) { return observer && observer.disconnect(); }\r\n            );\r\n        };\r\n\r\n        function getProps(opts, name) {\r\n\r\n            var data$1 = {};\r\n            var args = opts.args; if ( args === void 0 ) args = [];\r\n            var props = opts.props; if ( props === void 0 ) props = {};\r\n            var el = opts.el;\r\n\r\n            if (!props) {\r\n                return data$1;\r\n            }\r\n\r\n            for (var key in props) {\r\n                var prop = hyphenate(key);\r\n                var value = data(el, prop);\r\n\r\n                if (isUndefined(value)) {\r\n                    continue;\r\n                }\r\n\r\n                value = props[key] === Boolean && value === ''\r\n                    ? true\r\n                    : coerce(props[key], value);\r\n\r\n                if (prop === 'target' && (!value || startsWith(value, '_'))) {\r\n                    continue;\r\n                }\r\n\r\n                data$1[key] = value;\r\n            }\r\n\r\n            var options = parseOptions(data(el, name), args);\r\n\r\n            for (var key$1 in options) {\r\n                var prop$1 = camelize(key$1);\r\n                if (props[prop$1] !== undefined) {\r\n                    data$1[prop$1] = coerce(props[prop$1], options[key$1]);\r\n                }\r\n            }\r\n\r\n            return data$1;\r\n        }\r\n\r\n        function registerComputed(component, key, cb) {\r\n            Object.defineProperty(component, key, {\r\n\r\n                enumerable: true,\r\n\r\n                get: function() {\r\n\r\n                    var _computeds = component._computeds;\r\n                    var $props = component.$props;\r\n                    var $el = component.$el;\r\n\r\n                    if (!hasOwn(_computeds, key)) {\r\n                        _computeds[key] = (cb.get || cb).call(component, $props, $el);\r\n                    }\r\n\r\n                    return _computeds[key];\r\n                },\r\n\r\n                set: function(value) {\r\n\r\n                    var _computeds = component._computeds;\r\n\r\n                    _computeds[key] = cb.set ? cb.set.call(component, value) : value;\r\n\r\n                    if (isUndefined(_computeds[key])) {\r\n                        delete _computeds[key];\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        function registerEvent(component, event, key) {\r\n\r\n            if (!isPlainObject(event)) {\r\n                event = ({name: key, handler: event});\r\n            }\r\n\r\n            var name = event.name;\r\n            var el = event.el;\r\n            var handler = event.handler;\r\n            var capture = event.capture;\r\n            var passive = event.passive;\r\n            var delegate = event.delegate;\r\n            var filter = event.filter;\r\n            var self = event.self;\r\n            el = isFunction(el)\r\n                ? el.call(component)\r\n                : el || component.$el;\r\n\r\n            if (isArray(el)) {\r\n                el.forEach(function (el) { return registerEvent(component, assign({}, event, {el: el}), key); });\r\n                return;\r\n            }\r\n\r\n            if (!el || filter && !filter.call(component)) {\r\n                return;\r\n            }\r\n\r\n            component._events.push(\r\n                on(\r\n                    el,\r\n                    name,\r\n                    !delegate\r\n                        ? null\r\n                        : isString(delegate)\r\n                            ? delegate\r\n                            : delegate.call(component),\r\n                    isString(handler) ? component[handler] : handler.bind(component),\r\n                    {passive: passive, capture: capture, self: self}\r\n                )\r\n            );\r\n\r\n        }\r\n\r\n        function notIn(options, key) {\r\n            return options.every(function (arr) { return !arr || !hasOwn(arr, key); });\r\n        }\r\n\r\n        function coerce(type, value) {\r\n\r\n            if (type === Boolean) {\r\n                return toBoolean(value);\r\n            } else if (type === Number) {\r\n                return toNumber(value);\r\n            } else if (type === 'list') {\r\n                return toList(value);\r\n            }\r\n\r\n            return type ? type(value) : value;\r\n        }\r\n\r\n        function toList(value) {\r\n            return isArray(value)\r\n                ? value\r\n                : isString(value)\r\n                    ? value.split(/,(?![^(]*\\))/).map(function (value) { return isNumeric(value)\r\n                        ? toNumber(value)\r\n                        : toBoolean(value.trim()); })\r\n                    : [value];\r\n        }\r\n\r\n        function normalizeData(ref, ref$1) {\r\n            var data = ref.data;\r\n            var args = ref$1.args;\r\n            var props = ref$1.props; if ( props === void 0 ) props = {};\r\n\r\n            data = isArray(data)\r\n                ? !isEmpty(args)\r\n                    ? data.slice(0, args.length).reduce(function (data, value, index) {\r\n                        if (isPlainObject(value)) {\r\n                            assign(data, value);\r\n                        } else {\r\n                            data[args[index]] = value;\r\n                        }\r\n                        return data;\r\n                    }, {})\r\n                    : undefined\r\n                : data;\r\n\r\n            if (data) {\r\n                for (var key in data) {\r\n                    if (isUndefined(data[key])) {\r\n                        delete data[key];\r\n                    } else {\r\n                        data[key] = props[key] ? coerce(props[key], data[key]) : data[key];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        function initChildListObserver(component) {\r\n            var ref = component.$options;\r\n            var el = ref.el;\r\n\r\n            var observer = new MutationObserver(function () { return component.$emit(); });\r\n            observer.observe(el, {\r\n                childList: true,\r\n                subtree: true\r\n            });\r\n\r\n            return observer;\r\n        }\r\n\r\n        function initPropsObserver(component) {\r\n\r\n            var $name = component.$name;\r\n            var $options = component.$options;\r\n            var $props = component.$props;\r\n            var attrs = $options.attrs;\r\n            var props = $options.props;\r\n            var el = $options.el;\r\n\r\n            if (!props || attrs === false) {\r\n                return;\r\n            }\r\n\r\n            var attributes = isArray(attrs) ? attrs : Object.keys(props);\r\n            var filter = attributes.map(function (key) { return hyphenate(key); }).concat($name);\r\n\r\n            var observer = new MutationObserver(function (records) {\r\n                var data = getProps($options, $name);\r\n                if (records.some(function (ref) {\r\n                    var attributeName = ref.attributeName;\r\n\r\n                    var prop = attributeName.replace('data-', '');\r\n                    return (prop === $name ? attributes : [camelize(prop), camelize(attributeName)]).some(function (prop) { return !isUndefined(data[prop]) && data[prop] !== $props[prop]; }\r\n                    );\r\n                })) {\r\n                    component.$reset();\r\n                }\r\n            });\r\n\r\n            observer.observe(el, {\r\n                attributes: true,\r\n                attributeFilter: filter.concat(filter.map(function (key) { return (\"data-\" + key); }))\r\n            });\r\n\r\n            return observer;\r\n        }\r\n    }\r\n\r\n    function instanceAPI (UIkit) {\r\n\r\n        var DATA = UIkit.data;\r\n\r\n        UIkit.prototype.$create = function (component, element, data) {\r\n            return UIkit[component](element, data);\r\n        };\r\n\r\n        UIkit.prototype.$mount = function (el) {\r\n\r\n            var ref = this.$options;\r\n            var name = ref.name;\r\n\r\n            if (!el[DATA]) {\r\n                el[DATA] = {};\r\n            }\r\n\r\n            if (el[DATA][name]) {\r\n                return;\r\n            }\r\n\r\n            el[DATA][name] = this;\r\n\r\n            this.$el = this.$options.el = this.$options.el || el;\r\n\r\n            if (within(el, document)) {\r\n                this._callConnected();\r\n            }\r\n        };\r\n\r\n        UIkit.prototype.$reset = function () {\r\n            this._callDisconnected();\r\n            this._callConnected();\r\n        };\r\n\r\n        UIkit.prototype.$destroy = function (removeEl) {\r\n            if ( removeEl === void 0 ) removeEl = false;\r\n\r\n\r\n            var ref = this.$options;\r\n            var el = ref.el;\r\n            var name = ref.name;\r\n\r\n            if (el) {\r\n                this._callDisconnected();\r\n            }\r\n\r\n            this._callHook('destroy');\r\n\r\n            if (!el || !el[DATA]) {\r\n                return;\r\n            }\r\n\r\n            delete el[DATA][name];\r\n\r\n            if (!isEmpty(el[DATA])) {\r\n                delete el[DATA];\r\n            }\r\n\r\n            if (removeEl) {\r\n                remove$1(this.$el);\r\n            }\r\n        };\r\n\r\n        UIkit.prototype.$emit = function (e) {\r\n            this._callUpdate(e);\r\n        };\r\n\r\n        UIkit.prototype.$update = function (element, e) {\r\n            if ( element === void 0 ) element = this.$el;\r\n\r\n            UIkit.update(element, e);\r\n        };\r\n\r\n        UIkit.prototype.$getComponent = UIkit.getComponent;\r\n\r\n        var componentName = memoize(function (name) { return UIkit.prefix + hyphenate(name); });\r\n        Object.defineProperties(UIkit.prototype, {\r\n\r\n            $container: Object.getOwnPropertyDescriptor(UIkit, 'container'),\r\n\r\n            $name: {\r\n\r\n                get: function() {\r\n                    return componentName(this.$options.name);\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    function componentAPI (UIkit) {\r\n\r\n        var DATA = UIkit.data;\r\n\r\n        var components = {};\r\n\r\n        UIkit.component = function (name, options) {\r\n\r\n            var id = hyphenate(name);\r\n\r\n            name = camelize(id);\r\n\r\n            if (!options) {\r\n\r\n                if (isPlainObject(components[name])) {\r\n                    components[name] = UIkit.extend(components[name]);\r\n                }\r\n\r\n                return components[name];\r\n\r\n            }\r\n\r\n            UIkit[name] = function (element, data) {\r\n                var i = arguments.length, argsArray = Array(i);\r\n                while ( i-- ) argsArray[i] = arguments[i];\r\n\r\n\r\n                var component = UIkit.component(name);\r\n\r\n                return component.options.functional\r\n                    ? new component({data: isPlainObject(element) ? element : [].concat( argsArray )})\r\n                    : !element ? init(element) : $$(element).map(init)[0];\r\n\r\n                function init(element) {\r\n\r\n                    var instance = UIkit.getComponent(element, name);\r\n\r\n                    if (instance) {\r\n                        if (!data) {\r\n                            return instance;\r\n                        } else {\r\n                            instance.$destroy();\r\n                        }\r\n                    }\r\n\r\n                    return new component({el: element, data: data});\r\n\r\n                }\r\n\r\n            };\r\n\r\n            var opt = isPlainObject(options) ? assign({}, options) : options.options;\r\n\r\n            opt.name = name;\r\n\r\n            if (opt.install) {\r\n                opt.install(UIkit, opt, name);\r\n            }\r\n\r\n            if (UIkit._initialized && !opt.functional) {\r\n                fastdom.read(function () { return UIkit[name]((\"[uk-\" + id + \"],[data-uk-\" + id + \"]\")); });\r\n            }\r\n\r\n            return components[name] = isPlainObject(options) ? opt : options;\r\n        };\r\n\r\n        UIkit.getComponents = function (element) { return element && element[DATA] || {}; };\r\n        UIkit.getComponent = function (element, name) { return UIkit.getComponents(element)[name]; };\r\n\r\n        UIkit.connect = function (node) {\r\n\r\n            if (node[DATA]) {\r\n                for (var name in node[DATA]) {\r\n                    node[DATA][name]._callConnected();\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < node.attributes.length; i++) {\r\n\r\n                var name$1 = getComponentName(node.attributes[i].name);\r\n\r\n                if (name$1 && name$1 in components) {\r\n                    UIkit[name$1](node);\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n        UIkit.disconnect = function (node) {\r\n            for (var name in node[DATA]) {\r\n                node[DATA][name]._callDisconnected();\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    var getComponentName = memoize(function (attribute) {\r\n        return startsWith(attribute, 'uk-') || startsWith(attribute, 'data-uk-')\r\n            ? camelize(attribute.replace('data-uk-', '').replace('uk-', ''))\r\n            : false;\r\n    });\r\n\r\n    var UIkit = function (options) {\r\n        this._init(options);\r\n    };\r\n\r\n    UIkit.util = util;\r\n    UIkit.data = '__uikit__';\r\n    UIkit.prefix = 'uk-';\r\n    UIkit.options = {};\r\n    UIkit.version = '3.7.1';\r\n\r\n    globalAPI(UIkit);\r\n    hooksAPI(UIkit);\r\n    stateAPI(UIkit);\r\n    componentAPI(UIkit);\r\n    instanceAPI(UIkit);\r\n\r\n    function Core (UIkit) {\r\n\r\n        if (!inBrowser) {\r\n            return;\r\n        }\r\n\r\n        // throttle 'resize'\r\n        var pendingResize;\r\n        var handleResize = function () {\r\n            if (pendingResize) {\r\n                return;\r\n            }\r\n            pendingResize = true;\r\n            fastdom.write(function () { return pendingResize = false; });\r\n            UIkit.update(null, 'resize');\r\n        };\r\n\r\n        on(window, 'load resize', handleResize);\r\n        on(document, 'loadedmetadata load', handleResize, true);\r\n\r\n        if ('ResizeObserver' in window) {\r\n            (new ResizeObserver(handleResize)).observe(document.documentElement);\r\n        }\r\n\r\n        // throttle `scroll` event (Safari triggers multiple `scroll` events per frame)\r\n        var pending;\r\n        on(window, 'scroll', function (e) {\r\n\r\n            if (pending) {\r\n                return;\r\n            }\r\n            pending = true;\r\n            fastdom.write(function () { return pending = false; });\r\n\r\n            UIkit.update(null, e.type);\r\n\r\n        }, {passive: true, capture: true});\r\n\r\n        var started = 0;\r\n        on(document, 'animationstart', function (ref) {\r\n            var target = ref.target;\r\n\r\n            if ((css(target, 'animationName') || '').match(/^uk-.*(left|right)/)) {\r\n\r\n                started++;\r\n                css(document.documentElement, 'overflowX', 'hidden');\r\n                setTimeout(function () {\r\n                    if (!--started) {\r\n                        css(document.documentElement, 'overflowX', '');\r\n                    }\r\n                }, toMs(css(target, 'animationDuration')) + 100);\r\n            }\r\n        }, true);\r\n\r\n        on(document, pointerDown, function (e) {\r\n\r\n            if (!isTouch(e)) {\r\n                return;\r\n            }\r\n\r\n            // Handle Swipe Gesture\r\n            var pos = getEventPos(e);\r\n            var target = 'tagName' in e.target ? e.target : parent(e.target);\r\n            once(document, (pointerUp + \" \" + pointerCancel + \" scroll\"), function (e) {\r\n\r\n                var ref = getEventPos(e);\r\n                var x = ref.x;\r\n                var y = ref.y;\r\n\r\n                // swipe\r\n                if (e.type !== 'scroll' && target && x && Math.abs(pos.x - x) > 100 || y && Math.abs(pos.y - y) > 100) {\r\n\r\n                    setTimeout(function () {\r\n                        trigger(target, 'swipe');\r\n                        trigger(target, (\"swipe\" + (swipeDirection(pos.x, pos.y, x, y))));\r\n                    });\r\n\r\n                }\r\n\r\n            });\r\n\r\n        }, {passive: true});\r\n\r\n    }\r\n\r\n    function swipeDirection(x1, y1, x2, y2) {\r\n        return Math.abs(x1 - x2) >= Math.abs(y1 - y2)\r\n            ? x1 - x2 > 0\r\n                ? 'Left'\r\n                : 'Right'\r\n            : y1 - y2 > 0\r\n                ? 'Up'\r\n                : 'Down';\r\n    }\r\n\r\n    function boot (UIkit) {\r\n\r\n        var connect = UIkit.connect;\r\n        var disconnect = UIkit.disconnect;\r\n\r\n        if (!inBrowser || !window.MutationObserver) {\r\n            return;\r\n        }\r\n\r\n        fastdom.read(function () {\r\n\r\n            if (document.body) {\r\n                apply$1(document.body, connect);\r\n            }\r\n\r\n            new MutationObserver(function (records) { return records.forEach(applyChildListMutation); }\r\n            ).observe(document, {\r\n                childList: true,\r\n                subtree: true\r\n            });\r\n\r\n            new MutationObserver(function (records) { return records.forEach(applyAttributeMutation); }\r\n            ).observe(document, {\r\n                attributes: true,\r\n                subtree: true\r\n            });\r\n\r\n            UIkit._initialized = true;\r\n        });\r\n\r\n        function applyChildListMutation(ref) {\r\n            var addedNodes = ref.addedNodes;\r\n            var removedNodes = ref.removedNodes;\r\n\r\n            for (var i = 0; i < addedNodes.length; i++) {\r\n                apply$1(addedNodes[i], connect);\r\n            }\r\n\r\n            for (var i$1 = 0; i$1 < removedNodes.length; i$1++) {\r\n                apply$1(removedNodes[i$1], disconnect);\r\n            }\r\n        }\r\n\r\n        function applyAttributeMutation(ref) {\r\n            var target = ref.target;\r\n            var attributeName = ref.attributeName;\r\n\r\n\r\n            var name = getComponentName(attributeName);\r\n\r\n            if (!name || !(name in UIkit)) {\r\n                return;\r\n            }\r\n\r\n            if (hasAttr(target, attributeName)) {\r\n                UIkit[name](target);\r\n                return;\r\n            }\r\n\r\n            var component = UIkit.getComponent(target, name);\r\n\r\n            if (component) {\r\n                component.$destroy();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    var Class = {\r\n\r\n        connected: function() {\r\n            !hasClass(this.$el, this.$name) && addClass(this.$el, this.$name);\r\n        }\r\n\r\n    };\r\n\r\n    var Togglable = {\r\n\r\n        props: {\r\n            cls: Boolean,\r\n            animation: 'list',\r\n            duration: Number,\r\n            origin: String,\r\n            transition: String\r\n        },\r\n\r\n        data: {\r\n            cls: false,\r\n            animation: [false],\r\n            duration: 200,\r\n            origin: false,\r\n            transition: 'linear',\r\n            clsEnter: 'uk-togglabe-enter',\r\n            clsLeave: 'uk-togglabe-leave',\r\n\r\n            initProps: {\r\n                overflow: '',\r\n                height: '',\r\n                paddingTop: '',\r\n                paddingBottom: '',\r\n                marginTop: '',\r\n                marginBottom: ''\r\n            },\r\n\r\n            hideProps: {\r\n                overflow: 'hidden',\r\n                height: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0\r\n            }\r\n\r\n        },\r\n\r\n        computed: {\r\n\r\n            hasAnimation: function(ref) {\r\n                var animation = ref.animation;\r\n\r\n                return !!animation[0];\r\n            },\r\n\r\n            hasTransition: function(ref) {\r\n                var animation = ref.animation;\r\n\r\n                return this.hasAnimation && animation[0] === true;\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            toggleElement: function(targets, toggle, animate) {\r\n                var this$1 = this;\r\n\r\n                return new Promise$1(function (resolve) { return Promise$1.all(toNodes(targets).map(function (el) {\r\n\r\n                        var show = isBoolean(toggle) ? toggle : !this$1.isToggled(el);\r\n\r\n                        if (!trigger(el, (\"before\" + (show ? 'show' : 'hide')), [this$1])) {\r\n                            return Promise$1.reject();\r\n                        }\r\n\r\n                        var promise = (\r\n                            isFunction(animate)\r\n                                ? animate\r\n                                : animate === false || !this$1.hasAnimation\r\n                                ? this$1._toggle\r\n                                : this$1.hasTransition\r\n                                    ? toggleHeight(this$1)\r\n                                    : toggleAnimation(this$1)\r\n                        )(el, show);\r\n\r\n                        var cls = show ? this$1.clsEnter : this$1.clsLeave;\r\n\r\n                        addClass(el, cls);\r\n\r\n                        trigger(el, show ? 'show' : 'hide', [this$1]);\r\n\r\n                        var done = function () {\r\n                            removeClass(el, cls);\r\n                            trigger(el, show ? 'shown' : 'hidden', [this$1]);\r\n                            this$1.$update(el);\r\n                        };\r\n\r\n                        return promise ? promise.then(done, function () {\r\n                            removeClass(el, cls);\r\n                            return Promise$1.reject();\r\n                        }) : done();\r\n\r\n                    })).then(resolve, noop); }\r\n                );\r\n            },\r\n\r\n            isToggled: function(el) {\r\n                if ( el === void 0 ) el = this.$el;\r\n\r\n                return hasClass(el, this.clsEnter)\r\n                    ? true\r\n                    : hasClass(el, this.clsLeave)\r\n                        ? false\r\n                        : this.cls\r\n                            ? hasClass(el, this.cls.split(' ')[0])\r\n                            : !hasAttr(el, 'hidden');\r\n            },\r\n\r\n            _toggle: function(el, toggled) {\r\n\r\n                if (!el) {\r\n                    return;\r\n                }\r\n\r\n                toggled = Boolean(toggled);\r\n\r\n                var changed;\r\n                if (this.cls) {\r\n                    changed = includes(this.cls, ' ') || toggled !== hasClass(el, this.cls);\r\n                    changed && toggleClass(el, this.cls, includes(this.cls, ' ') ? undefined : toggled);\r\n                } else {\r\n                    changed = toggled === el.hidden;\r\n                    changed && (el.hidden = !toggled);\r\n                }\r\n\r\n                $$('[autofocus]', el).some(function (el) { return isVisible(el) ? el.focus() || true : el.blur(); });\r\n\r\n                if (changed) {\r\n                    trigger(el, 'toggled', [toggled, this]);\r\n                    this.$update(el);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function toggleHeight(ref) {\r\n        var isToggled = ref.isToggled;\r\n        var duration = ref.duration;\r\n        var initProps = ref.initProps;\r\n        var hideProps = ref.hideProps;\r\n        var transition = ref.transition;\r\n        var _toggle = ref._toggle;\r\n\r\n        return function (el, show) {\r\n\r\n            var inProgress = Transition.inProgress(el);\r\n            var inner = el.hasChildNodes ? toFloat(css(el.firstElementChild, 'marginTop')) + toFloat(css(el.lastElementChild, 'marginBottom')) : 0;\r\n            var currentHeight = isVisible(el) ? height(el) + (inProgress ? 0 : inner) : 0;\r\n\r\n            Transition.cancel(el);\r\n\r\n            if (!isToggled(el)) {\r\n                _toggle(el, true);\r\n            }\r\n\r\n            height(el, '');\r\n\r\n            // Update child components first\r\n            fastdom.flush();\r\n\r\n            var endHeight = height(el) + (inProgress ? 0 : inner);\r\n            height(el, currentHeight);\r\n\r\n            return (show\r\n                ? Transition.start(el, assign({}, initProps, {overflow: 'hidden', height: endHeight}), Math.round(duration * (1 - currentHeight / endHeight)), transition)\r\n                : Transition.start(el, hideProps, Math.round(duration * (currentHeight / endHeight)), transition).then(function () { return _toggle(el, false); })\r\n            ).then(function () { return css(el, initProps); });\r\n\r\n        };\r\n    }\r\n\r\n    function toggleAnimation(cmp) {\r\n        return function (el, show) {\r\n\r\n            Animation.cancel(el);\r\n\r\n            var animation = cmp.animation;\r\n            var duration = cmp.duration;\r\n            var _toggle = cmp._toggle;\r\n\r\n            if (show) {\r\n                _toggle(el, true);\r\n                return Animation.in(el, animation[0], duration, cmp.origin);\r\n            }\r\n\r\n            return Animation.out(el, animation[1] || animation[0], duration, cmp.origin).then(function () { return _toggle(el, false); });\r\n        };\r\n    }\r\n\r\n    var Accordion = {\r\n\r\n        mixins: [Class, Togglable],\r\n\r\n        props: {\r\n            targets: String,\r\n            active: null,\r\n            collapsible: Boolean,\r\n            multiple: Boolean,\r\n            toggle: String,\r\n            content: String,\r\n            transition: String,\r\n            offset: Number\r\n        },\r\n\r\n        data: {\r\n            targets: '> *',\r\n            active: false,\r\n            animation: [true],\r\n            collapsible: true,\r\n            multiple: false,\r\n            clsOpen: 'uk-open',\r\n            toggle: '> .uk-accordion-title',\r\n            content: '> .uk-accordion-content',\r\n            transition: 'ease',\r\n            offset: 0\r\n        },\r\n\r\n        computed: {\r\n\r\n            items: {\r\n\r\n                get: function(ref, $el) {\r\n                    var targets = ref.targets;\r\n\r\n                    return $$(targets, $el);\r\n                },\r\n\r\n                watch: function(items, prev) {\r\n                    var this$1 = this;\r\n\r\n\r\n                    items.forEach(function (el) { return hide($(this$1.content, el), !hasClass(el, this$1.clsOpen)); });\r\n\r\n                    if (prev || hasClass(items, this.clsOpen)) {\r\n                        return;\r\n                    }\r\n\r\n                    var active = this.active !== false && items[Number(this.active)]\r\n                        || !this.collapsible && items[0];\r\n\r\n                    if (active) {\r\n                        this.toggle(active, false);\r\n                    }\r\n\r\n                },\r\n\r\n                immediate: true\r\n\r\n            },\r\n\r\n            toggles: function(ref) {\r\n                var toggle = ref.toggle;\r\n\r\n                return this.items.map(function (item) { return $(toggle, item); });\r\n            }\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return ((this.targets) + \" \" + (this.$props.toggle));\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.toggle(index(this.toggles, e.current));\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            toggle: function(item, animate) {\r\n                var this$1 = this;\r\n\r\n\r\n                var items = [this.items[getIndex(item, this.items)]];\r\n                var activeItems = filter$1(this.items, (\".\" + (this.clsOpen)));\r\n\r\n                if (!this.multiple && !includes(activeItems, items[0])) {\r\n                    items = items.concat(activeItems);\r\n                }\r\n\r\n                if (!this.collapsible && activeItems.length < 2 && !filter$1(items, (\":not(.\" + (this.clsOpen) + \")\")).length) {\r\n                    return;\r\n                }\r\n\r\n                items.forEach(function (el) { return this$1.toggleElement(el, !hasClass(el, this$1.clsOpen), function (el, show) {\r\n\r\n                    toggleClass(el, this$1.clsOpen, show);\r\n                    attr($(this$1.$props.toggle, el), 'aria-expanded', show);\r\n\r\n                    var content = $((\"\" + (el._wrapper ? '> * ' : '') + (this$1.content)), el);\r\n\r\n                    if (animate === false || !this$1.hasTransition) {\r\n                        hide(content, !show);\r\n                        return;\r\n                    }\r\n\r\n                    if (!el._wrapper) {\r\n                        el._wrapper = wrapAll(content, (\"<div\" + (show ? ' hidden' : '') + \">\"));\r\n                    }\r\n\r\n                    hide(content, false);\r\n                    return toggleHeight(this$1)(el._wrapper, show).then(function () {\r\n                        hide(content, !show);\r\n                        delete el._wrapper;\r\n                        unwrap(content);\r\n\r\n                        if (show) {\r\n                            var toggle = $(this$1.$props.toggle, el);\r\n                            if (!isInView(toggle)) {\r\n                                scrollIntoView(toggle, {offset: this$1.offset});\r\n                            }\r\n                        }\r\n                    });\r\n                }); });\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function hide(el, hide) {\r\n        el && (el.hidden = hide);\r\n    }\r\n\r\n    var alert = {\r\n\r\n        mixins: [Class, Togglable],\r\n\r\n        args: 'animation',\r\n\r\n        props: {\r\n            close: String\r\n        },\r\n\r\n        data: {\r\n            animation: [true],\r\n            selClose: '.uk-alert-close',\r\n            duration: 150,\r\n            hideProps: assign({opacity: 0}, Togglable.data.hideProps)\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return this.selClose;\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.close();\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            close: function() {\r\n                var this$1 = this;\r\n\r\n                this.toggleElement(this.$el).then(function () { return this$1.$destroy(true); });\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var Video = {\r\n\r\n        args: 'autoplay',\r\n\r\n        props: {\r\n            automute: Boolean,\r\n            autoplay: Boolean\r\n        },\r\n\r\n        data: {\r\n            automute: false,\r\n            autoplay: true\r\n        },\r\n\r\n        computed: {\r\n\r\n            inView: function(ref) {\r\n                var autoplay = ref.autoplay;\r\n\r\n                return autoplay === 'inview';\r\n            }\r\n\r\n        },\r\n\r\n        connected: function() {\r\n\r\n            if (this.inView && !hasAttr(this.$el, 'preload')) {\r\n                this.$el.preload = 'none';\r\n            }\r\n\r\n            if (this.automute) {\r\n                mute(this.$el);\r\n            }\r\n\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n                return {\r\n                    visible: isVisible(this.$el) && css(this.$el, 'visibility') !== 'hidden',\r\n                    inView: this.inView && isInView(this.$el)\r\n                };\r\n            },\r\n\r\n            write: function(ref) {\r\n                var visible = ref.visible;\r\n                var inView = ref.inView;\r\n\r\n\r\n                if (!visible || this.inView && !inView) {\r\n                    pause(this.$el);\r\n                } else if (this.autoplay === true || this.inView && inView) {\r\n                    play(this.$el);\r\n                }\r\n\r\n            },\r\n\r\n            events: ['resize', 'scroll']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var cover = {\r\n\r\n        mixins: [Class, Video],\r\n\r\n        props: {\r\n            width: Number,\r\n            height: Number\r\n        },\r\n\r\n        data: {\r\n            automute: true\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n\r\n                var el = this.$el;\r\n                var ref = getPositionedParent(el) || parent(el);\r\n                var height = ref.offsetHeight;\r\n                var width = ref.offsetWidth;\r\n                var dim = Dimensions.cover(\r\n                    {\r\n                        width: this.width || el.naturalWidth || el.videoWidth || el.clientWidth,\r\n                        height: this.height || el.naturalHeight || el.videoHeight || el.clientHeight\r\n                    },\r\n                    {\r\n                        width: width + (width % 2 ? 1 : 0),\r\n                        height: height + (height % 2 ? 1 : 0)\r\n                    }\r\n                );\r\n\r\n                if (!dim.width || !dim.height) {\r\n                    return false;\r\n                }\r\n\r\n                return dim;\r\n            },\r\n\r\n            write: function(ref) {\r\n                var height = ref.height;\r\n                var width = ref.width;\r\n\r\n                css(this.$el, {height: height, width: width});\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getPositionedParent(el) {\r\n        while ((el = parent(el))) {\r\n            if (css(el, 'position') !== 'static') {\r\n                return el;\r\n            }\r\n        }\r\n    }\r\n\r\n    var Container = {\r\n\r\n        props: {\r\n            container: Boolean\r\n        },\r\n\r\n        data: {\r\n            container: true\r\n        },\r\n\r\n        computed: {\r\n\r\n            container: function(ref) {\r\n                var container = ref.container;\r\n\r\n                return container === true && this.$container || container && $(container);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var Position = {\r\n\r\n        props: {\r\n            pos: String,\r\n            offset: null,\r\n            flip: Boolean,\r\n            clsPos: String\r\n        },\r\n\r\n        data: {\r\n            pos: (\"bottom-\" + (!isRtl ? 'left' : 'right')),\r\n            flip: true,\r\n            offset: false,\r\n            clsPos: ''\r\n        },\r\n\r\n        computed: {\r\n\r\n            pos: function(ref) {\r\n                var pos = ref.pos;\r\n\r\n                return (pos + (!includes(pos, '-') ? '-center' : '')).split('-');\r\n            },\r\n\r\n            dir: function() {\r\n                return this.pos[0];\r\n            },\r\n\r\n            align: function() {\r\n                return this.pos[1];\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            positionAt: function(element, target, boundary) {\r\n\r\n                removeClasses(element, ((this.clsPos) + \"-(top|bottom|left|right)(-[a-z]+)?\"));\r\n\r\n                var ref = this;\r\n                var offset$1 = ref.offset;\r\n                var axis = this.getAxis();\r\n\r\n                if (!isNumeric(offset$1)) {\r\n                    var node = $(offset$1);\r\n                    offset$1 = node\r\n                        ? offset(node)[axis === 'x' ? 'left' : 'top'] - offset(target)[axis === 'x' ? 'right' : 'bottom']\r\n                        : 0;\r\n                }\r\n\r\n                var ref$1 = positionAt(\r\n                    element,\r\n                    target,\r\n                    axis === 'x' ? ((flipPosition(this.dir)) + \" \" + (this.align)) : ((this.align) + \" \" + (flipPosition(this.dir))),\r\n                    axis === 'x' ? ((this.dir) + \" \" + (this.align)) : ((this.align) + \" \" + (this.dir)),\r\n                    axis === 'x' ? (\"\" + (this.dir === 'left' ? -offset$1 : offset$1)) : (\" \" + (this.dir === 'top' ? -offset$1 : offset$1)),\r\n                    null,\r\n                    this.flip,\r\n                    boundary\r\n                ).target;\r\n                var x = ref$1.x;\r\n                var y = ref$1.y;\r\n\r\n                this.dir = axis === 'x' ? x : y;\r\n                this.align = axis === 'x' ? y : x;\r\n\r\n                toggleClass(element, ((this.clsPos) + \"-\" + (this.dir) + \"-\" + (this.align)), this.offset === false);\r\n\r\n            },\r\n\r\n            getAxis: function() {\r\n                return this.dir === 'top' || this.dir === 'bottom' ? 'y' : 'x';\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var active$1;\r\n\r\n    var drop = {\r\n\r\n        mixins: [Container, Position, Togglable],\r\n\r\n        args: 'pos',\r\n\r\n        props: {\r\n            mode: 'list',\r\n            toggle: Boolean,\r\n            boundary: Boolean,\r\n            boundaryAlign: Boolean,\r\n            delayShow: Number,\r\n            delayHide: Number,\r\n            clsDrop: String\r\n        },\r\n\r\n        data: {\r\n            mode: ['click', 'hover'],\r\n            toggle: '- *',\r\n            boundary: true,\r\n            boundaryAlign: false,\r\n            delayShow: 0,\r\n            delayHide: 800,\r\n            clsDrop: false,\r\n            animation: ['uk-animation-fade'],\r\n            cls: 'uk-open',\r\n            container: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            boundary: function(ref, $el) {\r\n                var boundary = ref.boundary;\r\n\r\n                return boundary === true ? window : query(boundary, $el);\r\n            },\r\n\r\n            clsDrop: function(ref) {\r\n                var clsDrop = ref.clsDrop;\r\n\r\n                return clsDrop || (\"uk-\" + (this.$options.name));\r\n            },\r\n\r\n            clsPos: function() {\r\n                return this.clsDrop;\r\n            }\r\n\r\n        },\r\n\r\n        created: function() {\r\n            this.tracker = new MouseTracker();\r\n        },\r\n\r\n        connected: function() {\r\n\r\n            addClass(this.$el, this.clsDrop);\r\n\r\n            if (this.toggle && !this.target) {\r\n                this.target = this.$create('toggle', query(this.toggle, this.$el), {\r\n                    target: this.$el,\r\n                    mode: this.mode\r\n                });\r\n            }\r\n\r\n        },\r\n\r\n        disconnected: function() {\r\n            if (this.isActive()) {\r\n                active$1 = null;\r\n            }\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return (\".\" + (this.clsDrop) + \"-close\");\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.hide(false);\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return 'a[href^=\"#\"]';\r\n                },\r\n\r\n                handler: function(ref) {\r\n                    var defaultPrevented = ref.defaultPrevented;\r\n                    var hash = ref.current.hash;\r\n\r\n                    if (!defaultPrevented && hash && !within(hash, this.$el)) {\r\n                        this.hide(false);\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'beforescroll',\r\n\r\n                handler: function() {\r\n                    this.hide(false);\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'toggle',\r\n\r\n                self: true,\r\n\r\n                handler: function(e, toggle) {\r\n\r\n                    e.preventDefault();\r\n\r\n                    if (this.isToggled()) {\r\n                        this.hide(false);\r\n                    } else {\r\n                        this.show(toggle.$el, false);\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'toggleshow',\r\n\r\n                self: true,\r\n\r\n                handler: function(e, toggle) {\r\n                    e.preventDefault();\r\n                    this.show(toggle.$el);\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'togglehide',\r\n\r\n                self: true,\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.hide();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: (pointerEnter + \" focusin\"),\r\n\r\n                filter: function() {\r\n                    return includes(this.mode, 'hover');\r\n                },\r\n\r\n                handler: function(e) {\r\n                    if (!isTouch(e)) {\r\n                        this.clearTimers();\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: (pointerLeave + \" focusout\"),\r\n\r\n                filter: function() {\r\n                    return includes(this.mode, 'hover');\r\n                },\r\n\r\n                handler: function(e) {\r\n                    if (!isTouch(e) && e.relatedTarget) {\r\n                        this.hide();\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'toggled',\r\n\r\n                self: true,\r\n\r\n                handler: function(e, toggled) {\r\n\r\n                    if (!toggled) {\r\n                        return;\r\n                    }\r\n\r\n                    this.clearTimers();\r\n                    this.position();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'show',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n                    var this$1 = this;\r\n\r\n\r\n                    active$1 = this;\r\n\r\n                    this.tracker.init();\r\n\r\n                    once(this.$el, 'hide', on(document, pointerDown, function (ref) {\r\n                            var target = ref.target;\r\n\r\n                            return !within(target, this$1.$el) && once(document, (pointerUp + \" \" + pointerCancel + \" scroll\"), function (ref) {\r\n                            var defaultPrevented = ref.defaultPrevented;\r\n                            var type = ref.type;\r\n                            var newTarget = ref.target;\r\n\r\n                            if (!defaultPrevented && type === pointerUp && target === newTarget && !(this$1.target && within(target, this$1.target))) {\r\n                                this$1.hide(false);\r\n                            }\r\n                        }, true);\r\n                    }\r\n                    ), {self: true});\r\n\r\n                    once(this.$el, 'hide', on(document, 'keydown', function (e) {\r\n                        if (e.keyCode === 27) {\r\n                            this$1.hide(false);\r\n                        }\r\n                    }), {self: true});\r\n\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'beforehide',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n                    this.clearTimers();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'hide',\r\n\r\n                handler: function(ref) {\r\n                    var target = ref.target;\r\n\r\n\r\n                    if (this.$el !== target) {\r\n                        active$1 = active$1 === null && within(target, this.$el) && this.isToggled() ? this : active$1;\r\n                        return;\r\n                    }\r\n\r\n                    active$1 = this.isActive() ? null : active$1;\r\n                    this.tracker.cancel();\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        update: {\r\n\r\n            write: function() {\r\n\r\n                if (this.isToggled() && !hasClass(this.$el, this.clsEnter)) {\r\n                    this.position();\r\n                }\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            show: function(target, delay) {\r\n                var this$1 = this;\r\n                if ( target === void 0 ) target = this.target;\r\n                if ( delay === void 0 ) delay = true;\r\n\r\n\r\n                if (this.isToggled() && target && this.target && target !== this.target) {\r\n                    this.hide(false);\r\n                }\r\n\r\n                this.target = target;\r\n\r\n                this.clearTimers();\r\n\r\n                if (this.isActive()) {\r\n                    return;\r\n                }\r\n\r\n                if (active$1) {\r\n\r\n                    if (delay && active$1.isDelaying) {\r\n                        this.showTimer = setTimeout(this.show, 10);\r\n                        return;\r\n                    }\r\n\r\n                    var prev;\r\n                    while (active$1 && prev !== active$1 && !within(this.$el, active$1.$el)) {\r\n                        prev = active$1;\r\n                        active$1.hide(false);\r\n                    }\r\n\r\n                }\r\n\r\n                if (this.container && parent(this.$el) !== this.container) {\r\n                    append(this.container, this.$el);\r\n                }\r\n\r\n                this.showTimer = setTimeout(function () { return this$1.toggleElement(this$1.$el, true); }, delay && this.delayShow || 0);\r\n\r\n            },\r\n\r\n            hide: function(delay) {\r\n                var this$1 = this;\r\n                if ( delay === void 0 ) delay = true;\r\n\r\n\r\n                var hide = function () { return this$1.toggleElement(this$1.$el, false, false); };\r\n\r\n                this.clearTimers();\r\n\r\n                this.isDelaying = getPositionedElements(this.$el).some(function (el) { return this$1.tracker.movesTo(el); });\r\n\r\n                if (delay && this.isDelaying) {\r\n                    this.hideTimer = setTimeout(this.hide, 50);\r\n                } else if (delay && this.delayHide) {\r\n                    this.hideTimer = setTimeout(hide, this.delayHide);\r\n                } else {\r\n                    hide();\r\n                }\r\n            },\r\n\r\n            clearTimers: function() {\r\n                clearTimeout(this.showTimer);\r\n                clearTimeout(this.hideTimer);\r\n                this.showTimer = null;\r\n                this.hideTimer = null;\r\n                this.isDelaying = false;\r\n            },\r\n\r\n            isActive: function() {\r\n                return active$1 === this;\r\n            },\r\n\r\n            position: function() {\r\n\r\n                removeClass(this.$el, ((this.clsDrop) + \"-stack\"));\r\n                toggleClass(this.$el, ((this.clsDrop) + \"-boundary\"), this.boundaryAlign);\r\n\r\n                var boundary = offset(this.boundary);\r\n                var alignTo = this.boundaryAlign ? boundary : offset(this.target);\r\n\r\n                if (this.align === 'justify') {\r\n                    var prop = this.getAxis() === 'y' ? 'width' : 'height';\r\n                    css(this.$el, prop, alignTo[prop]);\r\n                } else if (this.boundary && this.$el.offsetWidth > Math.max(boundary.right - alignTo.left, alignTo.right - boundary.left)) {\r\n                    addClass(this.$el, ((this.clsDrop) + \"-stack\"));\r\n                }\r\n\r\n                this.positionAt(this.$el, this.boundaryAlign ? this.boundary : this.target, this.boundary);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getPositionedElements(el) {\r\n        var result = [];\r\n        apply$1(el, function (el) { return css(el, 'position') !== 'static' && result.push(el); });\r\n        return result;\r\n    }\r\n\r\n    var formCustom = {\r\n\r\n        mixins: [Class],\r\n\r\n        args: 'target',\r\n\r\n        props: {\r\n            target: Boolean\r\n        },\r\n\r\n        data: {\r\n            target: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            input: function(_, $el) {\r\n                return $(selInput, $el);\r\n            },\r\n\r\n            state: function() {\r\n                return this.input.nextElementSibling;\r\n            },\r\n\r\n            target: function(ref, $el) {\r\n                var target = ref.target;\r\n\r\n                return target && (target === true\r\n                    && parent(this.input) === $el\r\n                    && this.input.nextElementSibling\r\n                    || query(target, $el));\r\n            }\r\n\r\n        },\r\n\r\n        update: function() {\r\n\r\n            var ref = this;\r\n            var target = ref.target;\r\n            var input = ref.input;\r\n\r\n            if (!target) {\r\n                return;\r\n            }\r\n\r\n            var option;\r\n            var prop = isInput(target) ? 'value' : 'textContent';\r\n            var prev = target[prop];\r\n            var value = input.files && input.files[0]\r\n                ? input.files[0].name\r\n                : matches(input, 'select') && (option = $$('option', input).filter(function (el) { return el.selected; })[0]) // eslint-disable-line prefer-destructuring\r\n                    ? option.textContent\r\n                    : input.value;\r\n\r\n            if (prev !== value) {\r\n                target[prop] = value;\r\n            }\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n                name: 'change',\r\n\r\n                handler: function() {\r\n                    this.$update();\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'reset',\r\n\r\n                el: function() {\r\n                    return closest(this.$el, 'form');\r\n                },\r\n\r\n                handler: function() {\r\n                    this.$update();\r\n                }\r\n            }\r\n\r\n        ]\r\n\r\n    };\r\n\r\n    // Deprecated\r\n    var gif = {\r\n\r\n        update: {\r\n\r\n            read: function(data) {\r\n\r\n                var inview = isInView(this.$el);\r\n\r\n                if (!inview || data.isInView === inview) {\r\n                    return false;\r\n                }\r\n\r\n                data.isInView = inview;\r\n            },\r\n\r\n            write: function() {\r\n                this.$el.src = '' + this.$el.src; // force self-assign\r\n            },\r\n\r\n            events: ['scroll', 'resize']\r\n        }\r\n\r\n    };\r\n\r\n    var Margin = {\r\n\r\n        props: {\r\n            margin: String,\r\n            firstColumn: Boolean\r\n        },\r\n\r\n        data: {\r\n            margin: 'uk-margin-small-top',\r\n            firstColumn: 'uk-first-column'\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n\r\n                var rows = getRows(this.$el.children);\r\n\r\n                return {\r\n                    rows: rows,\r\n                    columns: getColumns(rows)\r\n                };\r\n            },\r\n\r\n            write: function(ref) {\r\n                var columns = ref.columns;\r\n                var rows = ref.rows;\r\n\r\n                for (var i = 0; i < rows.length; i++) {\r\n                    for (var j = 0; j < rows[i].length; j++) {\r\n                        toggleClass(rows[i][j], this.margin, i !== 0);\r\n                        toggleClass(rows[i][j], this.firstColumn, !!~columns[0].indexOf(rows[i][j]));\r\n                    }\r\n                }\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getRows(items) {\r\n        return sortBy(items, 'top', 'bottom');\r\n    }\r\n\r\n    function getColumns(rows) {\r\n\r\n        var columns = [];\r\n\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var sorted = sortBy(rows[i], 'left', 'right');\r\n            for (var j = 0; j < sorted.length; j++) {\r\n                columns[j] = !columns[j] ? sorted[j] : columns[j].concat(sorted[j]);\r\n            }\r\n        }\r\n\r\n        return isRtl\r\n            ? columns.reverse()\r\n            : columns;\r\n    }\r\n\r\n    function sortBy(items, startProp, endProp) {\r\n\r\n        var sorted = [[]];\r\n\r\n        for (var i = 0; i < items.length; i++) {\r\n\r\n            var el = items[i];\r\n\r\n            if (!isVisible(el)) {\r\n                continue;\r\n            }\r\n\r\n            var dim = getOffset(el);\r\n\r\n            for (var j = sorted.length - 1; j >= 0; j--) {\r\n\r\n                var current = sorted[j];\r\n\r\n                if (!current[0]) {\r\n                    current.push(el);\r\n                    break;\r\n                }\r\n\r\n                var startDim = (void 0);\r\n                if (current[0].offsetParent === el.offsetParent) {\r\n                    startDim = getOffset(current[0]);\r\n                } else {\r\n                    dim = getOffset(el, true);\r\n                    startDim = getOffset(current[0], true);\r\n                }\r\n\r\n                if (dim[startProp] >= startDim[endProp] - 1 && dim[startProp] !== startDim[startProp]) {\r\n                    sorted.push([el]);\r\n                    break;\r\n                }\r\n\r\n                if (dim[endProp] - 1 > startDim[startProp] || dim[startProp] === startDim[startProp]) {\r\n                    current.push(el);\r\n                    break;\r\n                }\r\n\r\n                if (j === 0) {\r\n                    sorted.unshift([el]);\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return sorted;\r\n    }\r\n\r\n    function getOffset(element, offset) {\r\n        var assign;\r\n\r\n        if ( offset === void 0 ) offset = false;\r\n\r\n        var offsetTop = element.offsetTop;\r\n        var offsetLeft = element.offsetLeft;\r\n        var offsetHeight = element.offsetHeight;\r\n        var offsetWidth = element.offsetWidth;\r\n\r\n        if (offset) {\r\n            (assign = offsetPosition(element), offsetTop = assign[0], offsetLeft = assign[1]);\r\n        }\r\n\r\n        return {\r\n            top: offsetTop,\r\n            left: offsetLeft,\r\n            bottom: offsetTop + offsetHeight,\r\n            right: offsetLeft + offsetWidth\r\n        };\r\n    }\r\n\r\n    var grid = {\r\n\r\n        extends: Margin,\r\n\r\n        mixins: [Class],\r\n\r\n        name: 'grid',\r\n\r\n        props: {\r\n            masonry: Boolean,\r\n            parallax: Number\r\n        },\r\n\r\n        data: {\r\n            margin: 'uk-grid-margin',\r\n            clsStack: 'uk-grid-stack',\r\n            masonry: false,\r\n            parallax: 0\r\n        },\r\n\r\n        connected: function() {\r\n            this.masonry && addClass(this.$el, 'uk-flex-top uk-flex-wrap-top');\r\n        },\r\n\r\n        update: [\r\n\r\n            {\r\n\r\n                write: function(ref) {\r\n                    var columns = ref.columns;\r\n\r\n                    toggleClass(this.$el, this.clsStack, columns.length < 2);\r\n                },\r\n\r\n                events: ['resize']\r\n\r\n            },\r\n\r\n            {\r\n\r\n                read: function(data) {\r\n\r\n                    var columns = data.columns;\r\n                    var rows = data.rows;\r\n\r\n                    // Filter component makes elements positioned absolute\r\n                    if (!columns.length || !this.masonry && !this.parallax || positionedAbsolute(this.$el)) {\r\n                        data.translates = false;\r\n                        return false;\r\n                    }\r\n\r\n                    var translates = false;\r\n\r\n                    var nodes = children(this.$el);\r\n                    var columnHeights = getColumnHeights(columns);\r\n                    var margin = getMarginTop(nodes, this.margin) * (rows.length - 1);\r\n                    var elHeight = Math.max.apply(Math, columnHeights) + margin;\r\n\r\n                    if (this.masonry) {\r\n                        columns = columns.map(function (column) { return sortBy$1(column, 'offsetTop'); });\r\n                        translates = getTranslates(rows, columns);\r\n                    }\r\n\r\n                    var padding = Math.abs(this.parallax);\r\n                    if (padding) {\r\n                        padding = columnHeights.reduce(function (newPadding, hgt, i) { return Math.max(newPadding, hgt + margin + (i % 2 ? padding : padding / 8) - elHeight); }\r\n                            , 0);\r\n                    }\r\n\r\n                    return {padding: padding, columns: columns, translates: translates, height: translates ? elHeight : ''};\r\n\r\n                },\r\n\r\n                write: function(ref) {\r\n                    var height = ref.height;\r\n                    var padding = ref.padding;\r\n\r\n\r\n                    css(this.$el, 'paddingBottom', padding || '');\r\n                    height !== false && css(this.$el, 'height', height);\r\n\r\n                },\r\n\r\n                events: ['resize']\r\n\r\n            },\r\n\r\n            {\r\n\r\n                read: function(ref) {\r\n                    var height$1 = ref.height;\r\n\r\n\r\n                    if (positionedAbsolute(this.$el)) {\r\n                        return false;\r\n                    }\r\n\r\n                    return {\r\n                        scrolled: this.parallax\r\n                            ? scrolledOver(this.$el, height$1 ? height$1 - height(this.$el) : 0) * Math.abs(this.parallax)\r\n                            : false\r\n                    };\r\n                },\r\n\r\n                write: function(ref) {\r\n                    var columns = ref.columns;\r\n                    var scrolled = ref.scrolled;\r\n                    var translates = ref.translates;\r\n\r\n\r\n                    if (scrolled === false && !translates) {\r\n                        return;\r\n                    }\r\n\r\n                    columns.forEach(function (column, i) { return column.forEach(function (el, j) { return css(el, 'transform', !scrolled && !translates ? '' : (\"translateY(\" + ((translates && -translates[i][j]) + (scrolled ? i % 2 ? scrolled : scrolled / 8 : 0)) + \"px)\")); }\r\n                        ); }\r\n                    );\r\n\r\n                },\r\n\r\n                events: ['scroll', 'resize']\r\n\r\n            }\r\n\r\n        ]\r\n\r\n    };\r\n\r\n    function positionedAbsolute(el) {\r\n        return children(el).some(function (el) { return css(el, 'position') === 'absolute'; });\r\n    }\r\n\r\n    function getTranslates(rows, columns) {\r\n\r\n        var rowHeights = rows.map(function (row) { return Math.max.apply(Math, row.map(function (el) { return el.offsetHeight; })); }\r\n        );\r\n\r\n        return columns.map(function (elements) {\r\n            var prev = 0;\r\n            return elements.map(function (element, row) { return prev += row\r\n                    ? rowHeights[row - 1] - elements[row - 1].offsetHeight\r\n                    : 0; }\r\n            );\r\n        });\r\n    }\r\n\r\n    function getMarginTop(nodes, cls) {\r\n\r\n        var ref = nodes.filter(function (el) { return hasClass(el, cls); });\r\n        var node = ref[0];\r\n\r\n        return toFloat(node\r\n            ? css(node, 'marginTop')\r\n            : css(nodes[0], 'paddingLeft'));\r\n    }\r\n\r\n    function getColumnHeights(columns) {\r\n        return columns.map(function (column) { return column.reduce(function (sum, el) { return sum + el.offsetHeight; }, 0); }\r\n        );\r\n    }\r\n\r\n    // IE 11 fix (min-height on a flex container won't apply to its flex items)\r\n    var FlexBug = isIE ? {\r\n\r\n        props: {\r\n            selMinHeight: String\r\n        },\r\n\r\n        data: {\r\n            selMinHeight: false,\r\n            forceHeight: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            elements: function(ref, $el) {\r\n                var selMinHeight = ref.selMinHeight;\r\n\r\n                return selMinHeight ? $$(selMinHeight, $el) : [$el];\r\n            }\r\n\r\n        },\r\n\r\n        update: [\r\n\r\n            {\r\n\r\n                read: function() {\r\n                    css(this.elements, 'height', '');\r\n                },\r\n\r\n                order: -5,\r\n\r\n                events: ['resize']\r\n\r\n            },\r\n\r\n            {\r\n\r\n                write: function() {\r\n                    var this$1 = this;\r\n\r\n                    this.elements.forEach(function (el) {\r\n                        var height = toFloat(css(el, 'minHeight'));\r\n                        if (height && (this$1.forceHeight || Math.round(height + boxModelAdjust(el, 'height', 'content-box')) >= el.offsetHeight)) {\r\n                            css(el, 'height', height);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                order: 5,\r\n\r\n                events: ['resize']\r\n\r\n            }\r\n\r\n        ]\r\n\r\n    } : {};\r\n\r\n    var heightMatch = {\r\n\r\n        mixins: [FlexBug],\r\n\r\n        args: 'target',\r\n\r\n        props: {\r\n            target: String,\r\n            row: Boolean\r\n        },\r\n\r\n        data: {\r\n            target: '> *',\r\n            row: true,\r\n            forceHeight: true\r\n        },\r\n\r\n        computed: {\r\n\r\n            elements: function(ref, $el) {\r\n                var target = ref.target;\r\n\r\n                return $$(target, $el);\r\n            }\r\n\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n                return {\r\n                    rows: (this.row ? getRows(this.elements) : [this.elements]).map(match$1)\r\n                };\r\n            },\r\n\r\n            write: function(ref) {\r\n                var rows = ref.rows;\r\n\r\n                rows.forEach(function (ref) {\r\n                        var heights = ref.heights;\r\n                        var elements = ref.elements;\r\n\r\n                        return elements.forEach(function (el, i) { return css(el, 'minHeight', heights[i]); }\r\n                    );\r\n                }\r\n                );\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function match$1(elements) {\r\n\r\n        if (elements.length < 2) {\r\n            return {heights: [''], elements: elements};\r\n        }\r\n\r\n        var heights = elements.map(getHeight);\r\n        var max = Math.max.apply(Math, heights);\r\n        var hasMinHeight = elements.some(function (el) { return el.style.minHeight; });\r\n        var hasShrunk = elements.some(function (el, i) { return !el.style.minHeight && heights[i] < max; });\r\n\r\n        if (hasMinHeight && hasShrunk) {\r\n            css(elements, 'minHeight', '');\r\n            heights = elements.map(getHeight);\r\n            max = Math.max.apply(Math, heights);\r\n        }\r\n\r\n        heights = elements.map(function (el, i) { return heights[i] === max && toFloat(el.style.minHeight).toFixed(2) !== max.toFixed(2) ? '' : max; }\r\n        );\r\n\r\n        return {heights: heights, elements: elements};\r\n    }\r\n\r\n    function getHeight(element) {\r\n\r\n        var style = false;\r\n        if (!isVisible(element)) {\r\n            style = element.style.display;\r\n            css(element, 'display', 'block', 'important');\r\n        }\r\n\r\n        var height = dimensions(element).height - boxModelAdjust(element, 'height', 'content-box');\r\n\r\n        if (style !== false) {\r\n            css(element, 'display', style);\r\n        }\r\n\r\n        return height;\r\n    }\r\n\r\n    var heightViewport = {\r\n\r\n        mixins: [FlexBug],\r\n\r\n        props: {\r\n            expand: Boolean,\r\n            offsetTop: Boolean,\r\n            offsetBottom: Boolean,\r\n            minHeight: Number\r\n        },\r\n\r\n        data: {\r\n            expand: false,\r\n            offsetTop: false,\r\n            offsetBottom: false,\r\n            minHeight: 0\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function(ref) {\r\n                var prev = ref.minHeight;\r\n\r\n\r\n                if (!isVisible(this.$el)) {\r\n                    return false;\r\n                }\r\n\r\n                var minHeight = '';\r\n                var box = boxModelAdjust(this.$el, 'height', 'content-box');\r\n\r\n                if (this.expand) {\r\n\r\n                    minHeight = height(window) - (dimensions(document.documentElement).height - dimensions(this.$el).height) - box || '';\r\n\r\n                } else {\r\n\r\n                    // on mobile devices (iOS and Android) window.innerHeight !== 100vh\r\n                    minHeight = 'calc(100vh';\r\n\r\n                    if (this.offsetTop) {\r\n\r\n                        var ref$1 = offset(this.$el);\r\n                        var top = ref$1.top;\r\n                        minHeight += top > 0 && top < height(window) / 2 ? (\" - \" + top + \"px\") : '';\r\n\r\n                    }\r\n\r\n                    if (this.offsetBottom === true) {\r\n\r\n                        minHeight += \" - \" + (dimensions(this.$el.nextElementSibling).height) + \"px\";\r\n\r\n                    } else if (isNumeric(this.offsetBottom)) {\r\n\r\n                        minHeight += \" - \" + (this.offsetBottom) + \"vh\";\r\n\r\n                    } else if (this.offsetBottom && endsWith(this.offsetBottom, 'px')) {\r\n\r\n                        minHeight += \" - \" + (toFloat(this.offsetBottom)) + \"px\";\r\n\r\n                    } else if (isString(this.offsetBottom)) {\r\n\r\n                        minHeight += \" - \" + (dimensions(query(this.offsetBottom, this.$el)).height) + \"px\";\r\n\r\n                    }\r\n\r\n                    minHeight += (box ? (\" - \" + box + \"px\") : '') + \")\";\r\n\r\n                }\r\n\r\n                return {minHeight: minHeight, prev: prev};\r\n            },\r\n\r\n            write: function(ref) {\r\n                var minHeight = ref.minHeight;\r\n                var prev = ref.prev;\r\n\r\n\r\n                css(this.$el, {minHeight: minHeight});\r\n\r\n                if (minHeight !== prev) {\r\n                    this.$update(this.$el, 'resize');\r\n                }\r\n\r\n                if (this.minHeight && toFloat(css(this.$el, 'minHeight')) < this.minHeight) {\r\n                    css(this.$el, 'minHeight', this.minHeight);\r\n                }\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var SVG = {\r\n\r\n        args: 'src',\r\n\r\n        props: {\r\n            id: Boolean,\r\n            icon: String,\r\n            src: String,\r\n            style: String,\r\n            width: Number,\r\n            height: Number,\r\n            ratio: Number,\r\n            class: String,\r\n            strokeAnimation: Boolean,\r\n            focusable: Boolean, // IE 11\r\n            attributes: 'list'\r\n        },\r\n\r\n        data: {\r\n            ratio: 1,\r\n            include: ['style', 'class', 'focusable'],\r\n            class: '',\r\n            strokeAnimation: false\r\n        },\r\n\r\n        beforeConnect: function() {\r\n            this.class += ' uk-svg';\r\n        },\r\n\r\n        connected: function() {\r\n            var this$1 = this;\r\n            var assign;\r\n\r\n\r\n            if (!this.icon && includes(this.src, '#')) {\r\n                (assign = this.src.split('#'), this.src = assign[0], this.icon = assign[1]);\r\n            }\r\n\r\n            this.svg = this.getSvg().then(function (el) {\r\n\r\n                if (this$1._connected) {\r\n\r\n                    var svg = insertSVG(el, this$1.$el);\r\n\r\n                    if (this$1.svgEl && svg !== this$1.svgEl) {\r\n                        remove$1(this$1.svgEl);\r\n                    }\r\n\r\n                    this$1.applyAttributes(svg, el);\r\n                    this$1.$emit();\r\n                    return this$1.svgEl = svg;\r\n                }\r\n\r\n            }, noop);\r\n\r\n        },\r\n\r\n        disconnected: function() {\r\n            var this$1 = this;\r\n\r\n\r\n            this.svg.then(function (svg) {\r\n                if (!this$1._connected) {\r\n\r\n                    if (isVoidElement(this$1.$el)) {\r\n                        this$1.$el.hidden = false;\r\n                    }\r\n\r\n                    remove$1(svg);\r\n                    this$1.svgEl = null;\r\n                }\r\n            });\r\n\r\n            this.svg = null;\r\n\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n                return !!(this.strokeAnimation && this.svgEl && isVisible(this.svgEl));\r\n            },\r\n\r\n            write: function() {\r\n                applyAnimation(this.svgEl);\r\n            },\r\n\r\n            type: ['resize']\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            getSvg: function() {\r\n                var this$1 = this;\r\n\r\n                return loadSVG(this.src).then(function (svg) { return parseSVG(svg, this$1.icon) || Promise$1.reject('SVG not found.'); }\r\n                );\r\n            },\r\n\r\n            applyAttributes: function(el, ref) {\r\n                var this$1 = this;\r\n\r\n\r\n                for (var prop in this.$options.props) {\r\n                    if (includes(this.include, prop) && (prop in this)) {\r\n                        attr(el, prop, this[prop]);\r\n                    }\r\n                }\r\n\r\n                for (var attribute in this.attributes) {\r\n                    var ref$1 = this.attributes[attribute].split(':', 2);\r\n                    var prop$1 = ref$1[0];\r\n                    var value = ref$1[1];\r\n                    attr(el, prop$1, value);\r\n                }\r\n\r\n                if (!this.id) {\r\n                    removeAttr(el, 'id');\r\n                }\r\n\r\n                var props = ['width', 'height'];\r\n                var dimensions = props.map(function (prop) { return this$1[prop]; });\r\n\r\n                if (!dimensions.some(function (val) { return val; })) {\r\n                    dimensions = props.map(function (prop) { return attr(ref, prop); });\r\n                }\r\n\r\n                var viewBox = attr(ref, 'viewBox');\r\n                if (viewBox && !dimensions.some(function (val) { return val; })) {\r\n                    dimensions = viewBox.split(' ').slice(2);\r\n                }\r\n\r\n                dimensions.forEach(function (val, i) { return attr(el, props[i], toFloat(val) * this$1.ratio || null); }\r\n                );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var loadSVG = memoize(function (src) { return new Promise$1(function (resolve, reject) {\r\n\r\n            if (!src) {\r\n                reject();\r\n                return;\r\n            }\r\n\r\n            if (startsWith(src, 'data:')) {\r\n                resolve(decodeURIComponent(src.split(',')[1]));\r\n            } else {\r\n\r\n                ajax(src).then(\r\n                    function (xhr) { return resolve(xhr.response); },\r\n                    function () { return reject('SVG not found.'); }\r\n                );\r\n\r\n            }\r\n        }); }\r\n    );\r\n\r\n    function parseSVG(svg, icon) {\r\n\r\n        if (icon && includes(svg, '<symbol')) {\r\n            svg = parseSymbols(svg, icon) || svg;\r\n        }\r\n\r\n        svg = $(svg.substr(svg.indexOf('<svg')));\r\n        return svg && svg.hasChildNodes() && svg;\r\n    }\r\n\r\n    var symbolRe = /<symbol([^]*?id=(['\"])(.+?)\\2[^]*?<\\/)symbol>/g;\r\n    var symbols = {};\r\n\r\n    function parseSymbols(svg, icon) {\r\n\r\n        if (!symbols[svg]) {\r\n\r\n            symbols[svg] = {};\r\n\r\n            symbolRe.lastIndex = 0;\r\n\r\n            var match;\r\n            while ((match = symbolRe.exec(svg))) {\r\n                symbols[svg][match[3]] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + (match[1]) + \"svg>\";\r\n            }\r\n\r\n        }\r\n\r\n        return symbols[svg][icon];\r\n    }\r\n\r\n    function applyAnimation(el) {\r\n\r\n        var length = getMaxPathLength(el);\r\n\r\n        if (length) {\r\n            el.style.setProperty('--uk-animation-stroke', length);\r\n        }\r\n\r\n    }\r\n\r\n    function getMaxPathLength(el) {\r\n        return Math.ceil(Math.max.apply(Math, [ 0 ].concat( $$('[stroke]', el).map(function (stroke) {\r\n            try {\r\n                return stroke.getTotalLength();\r\n            } catch (e) {\r\n                return 0;\r\n            }\r\n        }) )));\r\n    }\r\n\r\n    function insertSVG(el, root) {\r\n\r\n        if (isVoidElement(root) || root.tagName === 'CANVAS') {\r\n\r\n            root.hidden = true;\r\n\r\n            var next = root.nextElementSibling;\r\n            return equals(el, next)\r\n                ? next\r\n                : after(root, el);\r\n\r\n        }\r\n\r\n        var last = root.lastElementChild;\r\n        return equals(el, last)\r\n            ? last\r\n            : append(root, el);\r\n    }\r\n\r\n    function equals(el, other) {\r\n        return isSVG(el) && isSVG(other) && innerHTML(el) === innerHTML(other);\r\n    }\r\n\r\n    function isSVG(el) {\r\n        return el && el.tagName === 'svg';\r\n    }\r\n\r\n    function innerHTML(el) {\r\n        return (el.innerHTML || (new XMLSerializer()).serializeToString(el).replace(/<svg.*?>(.*?)<\\/svg>/g, '$1')).replace(/\\s/g, '');\r\n    }\r\n\r\n    var closeIcon = \"<svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"13\\\" y2=\\\"13\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"13\\\"/></svg>\";\r\n\r\n    var closeLarge = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"19\\\" y2=\\\"19\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"19\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"19\\\"/></svg>\";\r\n\r\n    var marker = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"11\\\"/><rect x=\\\"4\\\" y=\\\"9\\\" width=\\\"11\\\" height=\\\"1\\\"/></svg>\";\r\n\r\n    var navbarToggleIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect y=\\\"9\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"3\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"15\\\" width=\\\"20\\\" height=\\\"2\\\"/></svg>\";\r\n\r\n    var overlayIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"19\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"40\\\"/><rect x=\\\"0\\\" y=\\\"19\\\" width=\\\"40\\\" height=\\\"1\\\"/></svg>\";\r\n\r\n    var paginationNext = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 1 6 6 1 11\\\"/></svg>\";\r\n\r\n    var paginationPrevious = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"6 1 1 6 6 11\\\"/></svg>\";\r\n\r\n    var searchIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"/></svg>\";\r\n\r\n    var searchLarge = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" cx=\\\"17.5\\\" cy=\\\"17.5\\\" r=\\\"16.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" x1=\\\"38\\\" y1=\\\"39\\\" x2=\\\"29\\\" y2=\\\"30\\\"/></svg>\";\r\n\r\n    var searchNavbar = \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"9.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"23\\\" y1=\\\"23\\\" x2=\\\"17\\\" y2=\\\"17\\\"/></svg>\";\r\n\r\n    var slidenavNext = \"<svg width=\\\"14\\\" height=\\\"24\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"1.225,23 12.775,12 1.225,1 \\\"/></svg>\";\r\n\r\n    var slidenavNextLarge = \"<svg width=\\\"25\\\" height=\\\"40\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"4.002,38.547 22.527,20.024 4,1.5 \\\"/></svg>\";\r\n\r\n    var slidenavPrevious = \"<svg width=\\\"14\\\" height=\\\"24\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"12.775,1 1.225,12 12.775,23 \\\"/></svg>\";\r\n\r\n    var slidenavPreviousLarge = \"<svg width=\\\"25\\\" height=\\\"40\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"20.527,1.5 2,20.024 20.525,38.547 \\\"/></svg>\";\r\n\r\n    var spinner = \"<svg width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 30 30\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"15\\\" cy=\\\"15\\\" r=\\\"14\\\"/></svg>\";\r\n\r\n    var totop = \"<svg width=\\\"18\\\" height=\\\"10\\\" viewBox=\\\"0 0 18 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 9 9 1 17 9 \\\"/></svg>\";\r\n\r\n    var icons = {\r\n        spinner: spinner,\r\n        totop: totop,\r\n        marker: marker,\r\n        'close-icon': closeIcon,\r\n        'close-large': closeLarge,\r\n        'navbar-toggle-icon': navbarToggleIcon,\r\n        'overlay-icon': overlayIcon,\r\n        'pagination-next': paginationNext,\r\n        'pagination-previous': paginationPrevious,\r\n        'search-icon': searchIcon,\r\n        'search-large': searchLarge,\r\n        'search-navbar': searchNavbar,\r\n        'slidenav-next': slidenavNext,\r\n        'slidenav-next-large': slidenavNextLarge,\r\n        'slidenav-previous': slidenavPrevious,\r\n        'slidenav-previous-large': slidenavPreviousLarge\r\n    };\r\n\r\n    var Icon = {\r\n\r\n        install: install$3,\r\n\r\n        extends: SVG,\r\n\r\n        args: 'icon',\r\n\r\n        props: ['icon'],\r\n\r\n        data: {\r\n            include: ['focusable']\r\n        },\r\n\r\n        isIcon: true,\r\n\r\n        beforeConnect: function() {\r\n            addClass(this.$el, 'uk-icon');\r\n        },\r\n\r\n        methods: {\r\n\r\n            getSvg: function() {\r\n\r\n                var icon = getIcon(this.icon);\r\n\r\n                if (!icon) {\r\n                    return Promise$1.reject('Icon not found.');\r\n                }\r\n\r\n                return Promise$1.resolve(icon);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var IconComponent = {\r\n\r\n        args: false,\r\n\r\n        extends: Icon,\r\n\r\n        data: function (vm) { return ({\r\n            icon: hyphenate(vm.constructor.options.name)\r\n        }); },\r\n\r\n        beforeConnect: function() {\r\n            addClass(this.$el, this.$name);\r\n        }\r\n\r\n    };\r\n\r\n    var Slidenav = {\r\n\r\n        extends: IconComponent,\r\n\r\n        beforeConnect: function() {\r\n            addClass(this.$el, 'uk-slidenav');\r\n        },\r\n\r\n        computed: {\r\n\r\n            icon: function(ref, $el) {\r\n                var icon = ref.icon;\r\n\r\n                return hasClass($el, 'uk-slidenav-large')\r\n                    ? (icon + \"-large\")\r\n                    : icon;\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var Search = {\r\n\r\n        extends: IconComponent,\r\n\r\n        computed: {\r\n\r\n            icon: function(ref, $el) {\r\n                var icon = ref.icon;\r\n\r\n                return hasClass($el, 'uk-search-icon') && parents($el, '.uk-search-large').length\r\n                    ? 'search-large'\r\n                    : parents($el, '.uk-search-navbar').length\r\n                        ? 'search-navbar'\r\n                        : icon;\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var Close = {\r\n\r\n        extends: IconComponent,\r\n\r\n        computed: {\r\n\r\n            icon: function() {\r\n                return (\"close-\" + (hasClass(this.$el, 'uk-close-large') ? 'large' : 'icon'));\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var Spinner = {\r\n\r\n        extends: IconComponent,\r\n\r\n        connected: function() {\r\n            var this$1 = this;\r\n\r\n            this.svg.then(function (svg) { return svg && this$1.ratio !== 1 && css($('circle', svg), 'strokeWidth', 1 / this$1.ratio); });\r\n        }\r\n\r\n    };\r\n\r\n    var parsed = {};\r\n    function install$3(UIkit) {\r\n        UIkit.icon.add = function (name, svg) {\r\n            var obj;\r\n\r\n\r\n            var added = isString(name) ? (( obj = {}, obj[name] = svg, obj )) : name;\r\n            each(added, function (svg, name) {\r\n                icons[name] = svg;\r\n                delete parsed[name];\r\n            });\r\n\r\n            if (UIkit._initialized) {\r\n                apply$1(document.body, function (el) { return each(UIkit.getComponents(el), function (cmp) {\r\n                        cmp.$options.isIcon && cmp.icon in added && cmp.$reset();\r\n                    }); }\r\n                );\r\n            }\r\n        };\r\n    }\r\n\r\n    function getIcon(icon) {\r\n\r\n        if (!icons[icon]) {\r\n            return null;\r\n        }\r\n\r\n        if (!parsed[icon]) {\r\n            parsed[icon] = $((icons[applyRtl(icon)] || icons[icon]).trim());\r\n        }\r\n\r\n        return parsed[icon].cloneNode(true);\r\n    }\r\n\r\n    function applyRtl(icon) {\r\n        return isRtl ? swap(swap(icon, 'left', 'right'), 'previous', 'next') : icon;\r\n    }\r\n\r\n    var img = {\r\n\r\n        args: 'dataSrc',\r\n\r\n        props: {\r\n            dataSrc: String,\r\n            dataSrcset: Boolean,\r\n            sizes: String,\r\n            width: Number,\r\n            height: Number,\r\n            offsetTop: String,\r\n            offsetLeft: String,\r\n            target: String\r\n        },\r\n\r\n        data: {\r\n            dataSrc: '',\r\n            dataSrcset: false,\r\n            sizes: false,\r\n            width: false,\r\n            height: false,\r\n            offsetTop: '50vh',\r\n            offsetLeft: '50vw',\r\n            target: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            cacheKey: function(ref) {\r\n                var dataSrc = ref.dataSrc;\r\n\r\n                return ((this.$name) + \".\" + dataSrc);\r\n            },\r\n\r\n            width: function(ref) {\r\n                var width = ref.width;\r\n                var dataWidth = ref.dataWidth;\r\n\r\n                return width || dataWidth;\r\n            },\r\n\r\n            height: function(ref) {\r\n                var height = ref.height;\r\n                var dataHeight = ref.dataHeight;\r\n\r\n                return height || dataHeight;\r\n            },\r\n\r\n            sizes: function(ref) {\r\n                var sizes = ref.sizes;\r\n                var dataSizes = ref.dataSizes;\r\n\r\n                return sizes || dataSizes;\r\n            },\r\n\r\n            isImg: function(_, $el) {\r\n                return isImg($el);\r\n            },\r\n\r\n            target: {\r\n\r\n                get: function(ref) {\r\n                    var target = ref.target;\r\n\r\n                    return [this.$el ].concat( queryAll(target, this.$el));\r\n                },\r\n\r\n                watch: function() {\r\n                    this.observe();\r\n                }\r\n\r\n            },\r\n\r\n            offsetTop: function(ref) {\r\n                var offsetTop = ref.offsetTop;\r\n\r\n                return toPx(offsetTop, 'height');\r\n            },\r\n\r\n            offsetLeft: function(ref) {\r\n                var offsetLeft = ref.offsetLeft;\r\n\r\n                return toPx(offsetLeft, 'width');\r\n            }\r\n\r\n        },\r\n\r\n        connected: function() {\r\n\r\n            if (!window.IntersectionObserver) {\r\n                setSrcAttrs(this.$el, this.dataSrc, this.dataSrcset, this.sizes);\r\n                return;\r\n            }\r\n\r\n            if (storage[this.cacheKey]) {\r\n                setSrcAttrs(this.$el, storage[this.cacheKey], this.dataSrcset, this.sizes);\r\n            } else if (this.isImg && this.width && this.height) {\r\n                setSrcAttrs(this.$el, getPlaceholderImage(this.width, this.height, this.sizes));\r\n            }\r\n\r\n            this.observer = new IntersectionObserver(this.load, {\r\n                rootMargin: ((this.offsetTop) + \"px \" + (this.offsetLeft) + \"px\")\r\n            });\r\n\r\n            requestAnimationFrame(this.observe);\r\n\r\n        },\r\n\r\n        disconnected: function() {\r\n            this.observer && this.observer.disconnect();\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function(ref) {\r\n                var this$1 = this;\r\n                var image = ref.image;\r\n\r\n\r\n                if (!this.observer) {\r\n                    return false;\r\n                }\r\n\r\n                if (!image && document.readyState === 'complete') {\r\n                    this.load(this.observer.takeRecords());\r\n                }\r\n\r\n                if (this.isImg) {\r\n                    return false;\r\n                }\r\n\r\n                image && image.then(function (img) { return img && img.currentSrc !== '' && setSrcAttrs(this$1.$el, currentSrc(img)); });\r\n\r\n            },\r\n\r\n            write: function(data) {\r\n\r\n                if (this.dataSrcset && window.devicePixelRatio !== 1) {\r\n\r\n                    var bgSize = css(this.$el, 'backgroundSize');\r\n                    if (bgSize.match(/^(auto\\s?)+$/) || toFloat(bgSize) === data.bgSize) {\r\n                        data.bgSize = getSourceSize(this.dataSrcset, this.sizes);\r\n                        css(this.$el, 'backgroundSize', ((data.bgSize) + \"px\"));\r\n                    }\r\n\r\n                }\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            load: function(entries) {\r\n                var this$1 = this;\r\n\r\n\r\n                // Old chromium based browsers (UC Browser) did not implement `isIntersecting`\r\n                if (!entries.some(function (entry) { return isUndefined(entry.isIntersecting) || entry.isIntersecting; })) {\r\n                    return;\r\n                }\r\n\r\n                this._data.image = getImage(this.dataSrc, this.dataSrcset, this.sizes).then(function (img) {\r\n\r\n                    setSrcAttrs(this$1.$el, currentSrc(img), img.srcset, img.sizes);\r\n                    storage[this$1.cacheKey] = currentSrc(img);\r\n                    return img;\r\n\r\n                }, function (e) { return trigger(this$1.$el, new e.constructor(e.type, e)); });\r\n\r\n                this.observer.disconnect();\r\n            },\r\n\r\n            observe: function() {\r\n                var this$1 = this;\r\n\r\n                if (this._connected && !this._data.image) {\r\n                    this.target.forEach(function (el) { return this$1.observer.observe(el); });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function setSrcAttrs(el, src, srcset, sizes) {\r\n\r\n        if (isImg(el)) {\r\n            var set = function (prop, val) { return val && val !== el[prop] && (el[prop] = val); };\r\n            set('sizes', sizes);\r\n            set('srcset', srcset);\r\n            set('src', src);\r\n        } else if (src) {\r\n\r\n            var change = !includes(el.style.backgroundImage, src);\r\n            if (change) {\r\n                css(el, 'backgroundImage', (\"url(\" + (escape(src)) + \")\"));\r\n                trigger(el, createEvent('load', false));\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function getPlaceholderImage(width, height, sizes) {\r\n        var assign;\r\n\r\n\r\n        if (sizes) {\r\n            ((assign = Dimensions.ratio({width: width, height: height}, 'width', toPx(sizesToPixel(sizes))), width = assign.width, height = assign.height));\r\n        }\r\n\r\n        return (\"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\"></svg>\");\r\n    }\r\n\r\n    var sizesRe = /\\s*(.*?)\\s*(\\w+|calc\\(.*?\\))\\s*(?:,|$)/g;\r\n    function sizesToPixel(sizes) {\r\n        var matches;\r\n\r\n        sizesRe.lastIndex = 0;\r\n\r\n        while ((matches = sizesRe.exec(sizes))) {\r\n            if (!matches[1] || window.matchMedia(matches[1]).matches) {\r\n                matches = evaluateSize(matches[2]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return matches || '100vw';\r\n    }\r\n\r\n    var sizeRe = /\\d+(?:\\w+|%)/g;\r\n    var additionRe = /[+-]?(\\d+)/g;\r\n    function evaluateSize(size) {\r\n        return startsWith(size, 'calc')\r\n            ? size\r\n                .slice(5, -1)\r\n                .replace(sizeRe, function (size) { return toPx(size); })\r\n                .replace(/ /g, '')\r\n                .match(additionRe)\r\n                .reduce(function (a, b) { return a + +b; }, 0)\r\n            : size;\r\n    }\r\n\r\n    var srcSetRe = /\\s+\\d+w\\s*(?:,|$)/g;\r\n    function getSourceSize(srcset, sizes) {\r\n        var srcSize = toPx(sizesToPixel(sizes));\r\n        var descriptors = (srcset.match(srcSetRe) || []).map(toFloat).sort(function (a, b) { return a - b; });\r\n\r\n        return descriptors.filter(function (size) { return size >= srcSize; })[0] || descriptors.pop() || '';\r\n    }\r\n\r\n    function isImg(el) {\r\n        return el.tagName === 'IMG';\r\n    }\r\n\r\n    function currentSrc(el) {\r\n        return el.currentSrc || el.src;\r\n    }\r\n\r\n    var key = '__test__';\r\n    var storage;\r\n\r\n    // workaround for Safari's private browsing mode and accessing sessionStorage in Blink\r\n    try {\r\n        storage = window.sessionStorage || {};\r\n        storage[key] = 1;\r\n        delete storage[key];\r\n    } catch (e) {\r\n        storage = {};\r\n    }\r\n\r\n    var Media = {\r\n\r\n        props: {\r\n            media: Boolean\r\n        },\r\n\r\n        data: {\r\n            media: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            matchMedia: function() {\r\n                var media = toMedia(this.media);\r\n                return !media || window.matchMedia(media).matches;\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function toMedia(value) {\r\n\r\n        if (isString(value)) {\r\n            if (value[0] === '@') {\r\n                var name = \"breakpoint-\" + (value.substr(1));\r\n                value = toFloat(getCssVar(name));\r\n            } else if (isNaN(value)) {\r\n                return value;\r\n            }\r\n        }\r\n\r\n        return value && !isNaN(value) ? (\"(min-width: \" + value + \"px)\") : false;\r\n    }\r\n\r\n    var leader = {\r\n\r\n        mixins: [Class, Media],\r\n\r\n        props: {\r\n            fill: String\r\n        },\r\n\r\n        data: {\r\n            fill: '',\r\n            clsWrapper: 'uk-leader-fill',\r\n            clsHide: 'uk-leader-hide',\r\n            attrFill: 'data-fill'\r\n        },\r\n\r\n        computed: {\r\n\r\n            fill: function(ref) {\r\n                var fill = ref.fill;\r\n\r\n                return fill || getCssVar('leader-fill-content');\r\n            }\r\n\r\n        },\r\n\r\n        connected: function() {\r\n            var assign;\r\n\r\n            (assign = wrapInner(this.$el, (\"<span class=\\\"\" + (this.clsWrapper) + \"\\\">\")), this.wrapper = assign[0]);\r\n        },\r\n\r\n        disconnected: function() {\r\n            unwrap(this.wrapper.childNodes);\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function(ref) {\r\n                var changed = ref.changed;\r\n                var width = ref.width;\r\n\r\n\r\n                var prev = width;\r\n\r\n                width = Math.floor(this.$el.offsetWidth / 2);\r\n\r\n                return {\r\n                    width: width,\r\n                    fill: this.fill,\r\n                    changed: changed || prev !== width,\r\n                    hide: !this.matchMedia\r\n                };\r\n            },\r\n\r\n            write: function(data) {\r\n\r\n                toggleClass(this.wrapper, this.clsHide, data.hide);\r\n\r\n                if (data.changed) {\r\n                    data.changed = false;\r\n                    attr(this.wrapper, this.attrFill, new Array(data.width).join(data.fill));\r\n                }\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var active = [];\r\n\r\n    var Modal = {\r\n\r\n        mixins: [Class, Container, Togglable],\r\n\r\n        props: {\r\n            selPanel: String,\r\n            selClose: String,\r\n            escClose: Boolean,\r\n            bgClose: Boolean,\r\n            stack: Boolean\r\n        },\r\n\r\n        data: {\r\n            cls: 'uk-open',\r\n            escClose: true,\r\n            bgClose: true,\r\n            overlay: true,\r\n            stack: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            panel: function(ref, $el) {\r\n                var selPanel = ref.selPanel;\r\n\r\n                return $(selPanel, $el);\r\n            },\r\n\r\n            transitionElement: function() {\r\n                return this.panel;\r\n            },\r\n\r\n            bgClose: function(ref) {\r\n                var bgClose = ref.bgClose;\r\n\r\n                return bgClose && this.panel;\r\n            }\r\n\r\n        },\r\n\r\n        beforeDisconnect: function() {\r\n            if (this.isToggled()) {\r\n                this.toggleElement(this.$el, false, false);\r\n            }\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return this.selClose;\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.hide();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'toggle',\r\n\r\n                self: true,\r\n\r\n                handler: function(e) {\r\n\r\n                    if (e.defaultPrevented) {\r\n                        return;\r\n                    }\r\n\r\n                    e.preventDefault();\r\n\r\n                    if (this.isToggled() === includes(active, this)) {\r\n                        this.toggle();\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'beforeshow',\r\n\r\n                self: true,\r\n\r\n                handler: function(e) {\r\n\r\n                    if (includes(active, this)) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (!this.stack && active.length) {\r\n                        Promise$1.all(active.map(function (modal) { return modal.hide(); })).then(this.show);\r\n                        e.preventDefault();\r\n                    } else {\r\n                        active.push(this);\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'show',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n                    var this$1 = this;\r\n\r\n\r\n                    var docEl = document.documentElement;\r\n\r\n                    if (width(window) > docEl.clientWidth && this.overlay) {\r\n                        css(document.body, 'overflowY', 'scroll');\r\n                    }\r\n\r\n                    if (this.stack) {\r\n                        css(this.$el, 'zIndex', toFloat(css(this.$el, 'zIndex')) + active.length);\r\n                    }\r\n\r\n                    addClass(docEl, this.clsPage);\r\n\r\n                    if (this.bgClose) {\r\n                        once(this.$el, 'hide', on(document, pointerDown, function (ref) {\r\n                            var target = ref.target;\r\n\r\n\r\n                            if (last(active) !== this$1 || this$1.overlay && !within(target, this$1.$el) || within(target, this$1.panel)) {\r\n                                return;\r\n                            }\r\n\r\n                            once(document, (pointerUp + \" \" + pointerCancel + \" scroll\"), function (ref) {\r\n                                var defaultPrevented = ref.defaultPrevented;\r\n                                var type = ref.type;\r\n                                var newTarget = ref.target;\r\n\r\n                                if (!defaultPrevented && type === pointerUp && target === newTarget) {\r\n                                    this$1.hide();\r\n                                }\r\n                            }, true);\r\n\r\n                        }), {self: true});\r\n                    }\r\n\r\n                    if (this.escClose) {\r\n                        once(this.$el, 'hide', on(document, 'keydown', function (e) {\r\n                            if (e.keyCode === 27 && last(active) === this$1) {\r\n                                this$1.hide();\r\n                            }\r\n                        }), {self: true});\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'hidden',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n                    var this$1 = this;\r\n\r\n\r\n                    if (includes(active, this)) {\r\n                        active.splice(active.indexOf(this), 1);\r\n                    }\r\n\r\n                    if (!active.length) {\r\n                        css(document.body, 'overflowY', '');\r\n                    }\r\n\r\n                    css(this.$el, 'zIndex', '');\r\n\r\n                    if (!active.some(function (modal) { return modal.clsPage === this$1.clsPage; })) {\r\n                        removeClass(document.documentElement, this.clsPage);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            toggle: function() {\r\n                return this.isToggled() ? this.hide() : this.show();\r\n            },\r\n\r\n            show: function() {\r\n                var this$1 = this;\r\n\r\n                if (this.container && parent(this.$el) !== this.container) {\r\n                    append(this.container, this.$el);\r\n                    return new Promise$1(function (resolve) { return requestAnimationFrame(function () { return this$1.show().then(resolve); }\r\n                        ); }\r\n                    );\r\n                }\r\n\r\n                return this.toggleElement(this.$el, true, animate(this));\r\n            },\r\n\r\n            hide: function() {\r\n                return this.toggleElement(this.$el, false, animate(this));\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function animate(ref) {\r\n        var transitionElement = ref.transitionElement;\r\n        var _toggle = ref._toggle;\r\n\r\n        return function (el, show) { return new Promise$1(function (resolve, reject) { return once(el, 'show hide', function () {\r\n                    el._reject && el._reject();\r\n                    el._reject = reject;\r\n\r\n                    _toggle(el, show);\r\n\r\n                    var off = once(transitionElement, 'transitionstart', function () {\r\n                        once(transitionElement, 'transitionend transitioncancel', resolve, {self: true});\r\n                        clearTimeout(timer);\r\n                    }, {self: true});\r\n\r\n                    var timer = setTimeout(function () {\r\n                        off();\r\n                        resolve();\r\n                    }, toMs(css(transitionElement, 'transitionDuration')));\r\n\r\n                }); }\r\n            ).then(function () { return delete el._reject; }); };\r\n    }\r\n\r\n    var modal = {\r\n\r\n        install: install$2,\r\n\r\n        mixins: [Modal],\r\n\r\n        data: {\r\n            clsPage: 'uk-modal-page',\r\n            selPanel: '.uk-modal-dialog',\r\n            selClose: '.uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full'\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n                name: 'show',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n\r\n                    if (hasClass(this.panel, 'uk-margin-auto-vertical')) {\r\n                        addClass(this.$el, 'uk-flex');\r\n                    } else {\r\n                        css(this.$el, 'display', 'block');\r\n                    }\r\n\r\n                    height(this.$el); // force reflow\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'hidden',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n\r\n                    css(this.$el, 'display', '');\r\n                    removeClass(this.$el, 'uk-flex');\r\n\r\n                }\r\n            }\r\n\r\n        ]\r\n\r\n    };\r\n\r\n    function install$2(ref) {\r\n        var modal = ref.modal;\r\n\r\n\r\n        modal.dialog = function (content, options) {\r\n\r\n            var dialog = modal(\r\n                (\"<div class=\\\"uk-modal\\\"> <div class=\\\"uk-modal-dialog\\\">\" + content + \"</div> </div>\"),\r\n                options\r\n            );\r\n\r\n            dialog.show();\r\n\r\n            on(dialog.$el, 'hidden', function () { return Promise$1.resolve().then(function () { return dialog.$destroy(true); }\r\n                ); }, {self: true}\r\n            );\r\n\r\n            return dialog;\r\n        };\r\n\r\n        modal.alert = function (message, options) {\r\n            return openDialog(\r\n                function (ref) {\r\n                    var labels = ref.labels;\r\n\r\n                    return (\"<div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-primary uk-modal-close\\\" autofocus>\" + (labels.ok) + \"</button> </div>\");\r\n            },\r\n                options,\r\n                function (deferred) { return deferred.resolve(); }\r\n            );\r\n        };\r\n\r\n        modal.confirm = function (message, options) {\r\n            return openDialog(\r\n                function (ref) {\r\n                    var labels = ref.labels;\r\n\r\n                    return (\"<form> <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + (labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary\\\" autofocus>\" + (labels.ok) + \"</button> </div> </form>\");\r\n            },\r\n                options,\r\n                function (deferred) { return deferred.reject(); }\r\n            );\r\n        };\r\n\r\n        modal.prompt = function (message, value, options) {\r\n            return openDialog(\r\n                function (ref) {\r\n                    var labels = ref.labels;\r\n\r\n                    return (\"<form class=\\\"uk-form-stacked\\\"> <div class=\\\"uk-modal-body\\\"> <label>\" + (isString(message) ? message : html(message)) + \"</label> <input class=\\\"uk-input\\\" value=\\\"\" + (value || '') + \"\\\" autofocus> </div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + (labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary\\\">\" + (labels.ok) + \"</button> </div> </form>\");\r\n            },\r\n                options,\r\n                function (deferred) { return deferred.resolve(null); },\r\n                function (dialog) { return $('input', dialog.$el).value; }\r\n            );\r\n        };\r\n\r\n        modal.labels = {\r\n            ok: 'Ok',\r\n            cancel: 'Cancel'\r\n        };\r\n\r\n        function openDialog(tmpl, options, hideFn, submitFn) {\r\n\r\n            options = assign({bgClose: false, escClose: true, labels: modal.labels}, options);\r\n\r\n            var dialog = modal.dialog(tmpl(options), options);\r\n            var deferred = new Deferred();\r\n\r\n            var resolved = false;\r\n\r\n            on(dialog.$el, 'submit', 'form', function (e) {\r\n                e.preventDefault();\r\n                deferred.resolve(submitFn && submitFn(dialog));\r\n                resolved = true;\r\n                dialog.hide();\r\n            });\r\n\r\n            on(dialog.$el, 'hide', function () { return !resolved && hideFn(deferred); });\r\n\r\n            deferred.promise.dialog = dialog;\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n    }\r\n\r\n    var nav = {\r\n\r\n        extends: Accordion,\r\n\r\n        data: {\r\n            targets: '> .uk-parent',\r\n            toggle: '> a',\r\n            content: '> ul'\r\n        }\r\n\r\n    };\r\n\r\n    var navItem = '.uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle';\r\n\r\n    var navbar = {\r\n\r\n        mixins: [Class, Container, FlexBug],\r\n\r\n        props: {\r\n            dropdown: String,\r\n            mode: 'list',\r\n            align: String,\r\n            offset: Number,\r\n            boundary: Boolean,\r\n            boundaryAlign: Boolean,\r\n            clsDrop: String,\r\n            delayShow: Number,\r\n            delayHide: Number,\r\n            dropbar: Boolean,\r\n            dropbarMode: String,\r\n            dropbarAnchor: Boolean,\r\n            duration: Number\r\n        },\r\n\r\n        data: {\r\n            dropdown: navItem,\r\n            align: !isRtl ? 'left' : 'right',\r\n            clsDrop: 'uk-navbar-dropdown',\r\n            mode: undefined,\r\n            offset: undefined,\r\n            delayShow: undefined,\r\n            delayHide: undefined,\r\n            boundaryAlign: undefined,\r\n            flip: 'x',\r\n            boundary: true,\r\n            dropbar: false,\r\n            dropbarMode: 'slide',\r\n            dropbarAnchor: false,\r\n            duration: 200,\r\n            forceHeight: true,\r\n            selMinHeight: navItem,\r\n            container: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            boundary: function(ref, $el) {\r\n                var boundary = ref.boundary;\r\n                var boundaryAlign = ref.boundaryAlign;\r\n\r\n                return (boundary === true || boundaryAlign) ? $el : boundary;\r\n            },\r\n\r\n            dropbarAnchor: function(ref, $el) {\r\n                var dropbarAnchor = ref.dropbarAnchor;\r\n\r\n                return query(dropbarAnchor, $el);\r\n            },\r\n\r\n            pos: function(ref) {\r\n                var align = ref.align;\r\n\r\n                return (\"bottom-\" + align);\r\n            },\r\n\r\n            dropbar: {\r\n\r\n                get: function(ref) {\r\n                    var dropbar = ref.dropbar;\r\n\r\n\r\n                    if (!dropbar) {\r\n                        return null;\r\n                    }\r\n\r\n                    dropbar = this._dropbar || query(dropbar, this.$el) || $('+ .uk-navbar-dropbar', this.$el);\r\n\r\n                    return dropbar ? dropbar : (this._dropbar = $('<div></div>'));\r\n\r\n                },\r\n\r\n                watch: function(dropbar) {\r\n                    addClass(dropbar, 'uk-navbar-dropbar');\r\n                },\r\n\r\n                immediate: true\r\n\r\n            },\r\n\r\n            dropContainer: function(_, $el) {\r\n                return this.container || $el;\r\n            },\r\n\r\n            dropdowns: {\r\n\r\n                get: function(ref, $el) {\r\n                    var clsDrop = ref.clsDrop;\r\n\r\n                    var dropdowns = $$((\".\" + clsDrop), $el);\r\n\r\n                    if (this.container !== $el) {\r\n                        $$((\".\" + clsDrop), this.container).forEach(function (el) { return !includes(dropdowns, el) && dropdowns.push(el); });\r\n                    }\r\n\r\n                    return dropdowns;\r\n                },\r\n\r\n                watch: function(dropdowns) {\r\n                    var this$1 = this;\r\n\r\n                    this.$create(\r\n                        'drop',\r\n                        dropdowns.filter(function (el) { return !this$1.getDropdown(el); }),\r\n                        assign({}, this.$props, {boundary: this.boundary, pos: this.pos, offset: this.dropbar || this.offset})\r\n                    );\r\n                },\r\n\r\n                immediate: true\r\n\r\n            }\r\n\r\n        },\r\n\r\n        disconnected: function() {\r\n            this.dropbar && remove$1(this.dropbar);\r\n            delete this._dropbar;\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n                name: 'mouseover',\r\n\r\n                delegate: function() {\r\n                    return this.dropdown;\r\n                },\r\n\r\n                handler: function(ref) {\r\n                    var current = ref.current;\r\n\r\n                    var active = this.getActive();\r\n                    if (active && active.target && !within(active.target, current) && !active.tracker.movesTo(active.$el)) {\r\n                        active.hide(false);\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'mouseleave',\r\n\r\n                el: function() {\r\n                    return this.dropbar;\r\n                },\r\n\r\n                handler: function() {\r\n                    var active = this.getActive();\r\n\r\n                    if (active && !this.dropdowns.some(function (el) { return matches(el, ':hover'); })) {\r\n                        active.hide();\r\n                    }\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'beforeshow',\r\n\r\n                el: function() {\r\n                    return this.dropContainer;\r\n                },\r\n\r\n                filter: function() {\r\n                    return this.dropbar;\r\n                },\r\n\r\n                handler: function() {\r\n\r\n                    if (!parent(this.dropbar)) {\r\n                        after(this.dropbarAnchor || this.$el, this.dropbar);\r\n                    }\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'show',\r\n\r\n                el: function() {\r\n                    return this.dropContainer;\r\n                },\r\n\r\n                filter: function() {\r\n                    return this.dropbar;\r\n                },\r\n\r\n                handler: function(_, ref) {\r\n                    var $el = ref.$el;\r\n                    var dir = ref.dir;\r\n\r\n                    if (!hasClass($el, this.clsDrop)) {\r\n                        return;\r\n                    }\r\n\r\n                    if (this.dropbarMode === 'slide') {\r\n                        addClass(this.dropbar, 'uk-navbar-dropbar-slide');\r\n                    }\r\n\r\n                    this.clsDrop && addClass($el, ((this.clsDrop) + \"-dropbar\"));\r\n\r\n                    if (dir === 'bottom') {\r\n                        this.transitionTo($el.offsetHeight + toFloat(css($el, 'marginTop')) + toFloat(css($el, 'marginBottom')), $el);\r\n                    }\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'beforehide',\r\n\r\n                el: function() {\r\n                    return this.dropContainer;\r\n                },\r\n\r\n                filter: function() {\r\n                    return this.dropbar;\r\n                },\r\n\r\n                handler: function(e, ref) {\r\n                    var $el = ref.$el;\r\n\r\n\r\n                    var active = this.getActive();\r\n\r\n                    if (matches(this.dropbar, ':hover') && active && active.$el === $el) {\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'hide',\r\n\r\n                el: function() {\r\n                    return this.dropContainer;\r\n                },\r\n\r\n                filter: function() {\r\n                    return this.dropbar;\r\n                },\r\n\r\n                handler: function(_, ref) {\r\n                    var $el = ref.$el;\r\n\r\n                    if (!hasClass($el, this.clsDrop)) {\r\n                        return;\r\n                    }\r\n\r\n                    var active = this.getActive();\r\n\r\n                    if (!active || active && active.$el === $el) {\r\n                        this.transitionTo(0);\r\n                    }\r\n                }\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            getActive: function() {\r\n                return active$1 && includes(active$1.mode, 'hover') && within(active$1.target, this.$el) && active$1;\r\n            },\r\n\r\n            transitionTo: function(newHeight, el) {\r\n                var this$1 = this;\r\n\r\n\r\n                var ref = this;\r\n                var dropbar = ref.dropbar;\r\n                var oldHeight = isVisible(dropbar) ? height(dropbar) : 0;\r\n\r\n                el = oldHeight < newHeight && el;\r\n\r\n                css(el, 'clip', (\"rect(0,\" + (el.offsetWidth) + \"px,\" + oldHeight + \"px,0)\"));\r\n\r\n                height(dropbar, oldHeight);\r\n\r\n                Transition.cancel([el, dropbar]);\r\n                return Promise$1.all([\r\n                    Transition.start(dropbar, {height: newHeight}, this.duration),\r\n                    Transition.start(el, {clip: (\"rect(0,\" + (el.offsetWidth) + \"px,\" + newHeight + \"px,0)\")}, this.duration)\r\n                ])\r\n                    .catch(noop)\r\n                    .then(function () {\r\n                        css(el, {clip: ''});\r\n                        this$1.$update(dropbar);\r\n                    });\r\n            },\r\n\r\n            getDropdown: function(el) {\r\n                return this.$getComponent(el, 'drop') || this.$getComponent(el, 'dropdown');\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var offcanvas = {\r\n\r\n        mixins: [Modal],\r\n\r\n        args: 'mode',\r\n\r\n        props: {\r\n            mode: String,\r\n            flip: Boolean,\r\n            overlay: Boolean\r\n        },\r\n\r\n        data: {\r\n            mode: 'slide',\r\n            flip: false,\r\n            overlay: false,\r\n            clsPage: 'uk-offcanvas-page',\r\n            clsContainer: 'uk-offcanvas-container',\r\n            selPanel: '.uk-offcanvas-bar',\r\n            clsFlip: 'uk-offcanvas-flip',\r\n            clsContainerAnimation: 'uk-offcanvas-container-animation',\r\n            clsSidebarAnimation: 'uk-offcanvas-bar-animation',\r\n            clsMode: 'uk-offcanvas',\r\n            clsOverlay: 'uk-offcanvas-overlay',\r\n            selClose: '.uk-offcanvas-close',\r\n            container: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            clsFlip: function(ref) {\r\n                var flip = ref.flip;\r\n                var clsFlip = ref.clsFlip;\r\n\r\n                return flip ? clsFlip : '';\r\n            },\r\n\r\n            clsOverlay: function(ref) {\r\n                var overlay = ref.overlay;\r\n                var clsOverlay = ref.clsOverlay;\r\n\r\n                return overlay ? clsOverlay : '';\r\n            },\r\n\r\n            clsMode: function(ref) {\r\n                var mode = ref.mode;\r\n                var clsMode = ref.clsMode;\r\n\r\n                return (clsMode + \"-\" + mode);\r\n            },\r\n\r\n            clsSidebarAnimation: function(ref) {\r\n                var mode = ref.mode;\r\n                var clsSidebarAnimation = ref.clsSidebarAnimation;\r\n\r\n                return mode === 'none' || mode === 'reveal' ? '' : clsSidebarAnimation;\r\n            },\r\n\r\n            clsContainerAnimation: function(ref) {\r\n                var mode = ref.mode;\r\n                var clsContainerAnimation = ref.clsContainerAnimation;\r\n\r\n                return mode !== 'push' && mode !== 'reveal' ? '' : clsContainerAnimation;\r\n            },\r\n\r\n            transitionElement: function(ref) {\r\n                var mode = ref.mode;\r\n\r\n                return mode === 'reveal' ? parent(this.panel) : this.panel;\r\n            }\r\n\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n                if (this.isToggled() && !isVisible(this.$el)) {\r\n                    this.hide();\r\n                }\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return 'a[href^=\"#\"]';\r\n                },\r\n\r\n                handler: function(ref) {\r\n                    var hash = ref.current.hash;\r\n                    var defaultPrevented = ref.defaultPrevented;\r\n\r\n                    if (!defaultPrevented && hash && $(hash, document.body)) {\r\n                        this.hide();\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'touchstart',\r\n\r\n                passive: true,\r\n\r\n                el: function() {\r\n                    return this.panel;\r\n                },\r\n\r\n                handler: function(ref) {\r\n                    var targetTouches = ref.targetTouches;\r\n\r\n\r\n                    if (targetTouches.length === 1) {\r\n                        this.clientY = targetTouches[0].clientY;\r\n                    }\r\n\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'touchmove',\r\n\r\n                self: true,\r\n                passive: false,\r\n\r\n                filter: function() {\r\n                    return this.overlay;\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.cancelable && e.preventDefault();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'touchmove',\r\n\r\n                passive: false,\r\n\r\n                el: function() {\r\n                    return this.panel;\r\n                },\r\n\r\n                handler: function(e) {\r\n\r\n                    if (e.targetTouches.length !== 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var clientY = e.targetTouches[0].clientY - this.clientY;\r\n                    var ref = this.panel;\r\n                    var scrollTop = ref.scrollTop;\r\n                    var scrollHeight = ref.scrollHeight;\r\n                    var clientHeight = ref.clientHeight;\r\n\r\n                    if (clientHeight >= scrollHeight\r\n                        || scrollTop === 0 && clientY > 0\r\n                        || scrollHeight - scrollTop <= clientHeight && clientY < 0\r\n                    ) {\r\n                        e.cancelable && e.preventDefault();\r\n                    }\r\n\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'show',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n\r\n                    if (this.mode === 'reveal' && !hasClass(parent(this.panel), this.clsMode)) {\r\n                        wrapAll(this.panel, '<div>');\r\n                        addClass(parent(this.panel), this.clsMode);\r\n                    }\r\n\r\n                    css(document.documentElement, 'overflowY', this.overlay ? 'hidden' : '');\r\n                    addClass(document.body, this.clsContainer, this.clsFlip);\r\n                    css(document.body, 'touch-action', 'pan-y pinch-zoom');\r\n                    css(this.$el, 'display', 'block');\r\n                    addClass(this.$el, this.clsOverlay);\r\n                    addClass(this.panel, this.clsSidebarAnimation, this.mode !== 'reveal' ? this.clsMode : '');\r\n\r\n                    height(document.body); // force reflow\r\n                    addClass(document.body, this.clsContainerAnimation);\r\n\r\n                    this.clsContainerAnimation && suppressUserScale();\r\n\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'hide',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n                    removeClass(document.body, this.clsContainerAnimation);\r\n                    css(document.body, 'touch-action', '');\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'hidden',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n\r\n                    this.clsContainerAnimation && resumeUserScale();\r\n\r\n                    if (this.mode === 'reveal') {\r\n                        unwrap(this.panel);\r\n                    }\r\n\r\n                    removeClass(this.panel, this.clsSidebarAnimation, this.clsMode);\r\n                    removeClass(this.$el, this.clsOverlay);\r\n                    css(this.$el, 'display', '');\r\n                    removeClass(document.body, this.clsContainer, this.clsFlip);\r\n\r\n                    css(document.documentElement, 'overflowY', '');\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'swipeLeft swipeRight',\r\n\r\n                handler: function(e) {\r\n\r\n                    if (this.isToggled() && endsWith(e.type, 'Left') ^ this.flip) {\r\n                        this.hide();\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        ]\r\n\r\n    };\r\n\r\n    // Chrome in responsive mode zooms page upon opening offcanvas\r\n    function suppressUserScale() {\r\n        getViewport().content += ',user-scalable=0';\r\n    }\r\n\r\n    function resumeUserScale() {\r\n        var viewport = getViewport();\r\n        viewport.content = viewport.content.replace(/,user-scalable=0$/, '');\r\n    }\r\n\r\n    function getViewport() {\r\n        return $('meta[name=\"viewport\"]', document.head) || append(document.head, '<meta name=\"viewport\">');\r\n    }\r\n\r\n    var overflowAuto = {\r\n\r\n        mixins: [Class],\r\n\r\n        props: {\r\n            selContainer: String,\r\n            selContent: String\r\n        },\r\n\r\n        data: {\r\n            selContainer: '.uk-modal',\r\n            selContent: '.uk-modal-dialog'\r\n        },\r\n\r\n        computed: {\r\n\r\n            container: function(ref, $el) {\r\n                var selContainer = ref.selContainer;\r\n\r\n                return closest($el, selContainer);\r\n            },\r\n\r\n            content: function(ref, $el) {\r\n                var selContent = ref.selContent;\r\n\r\n                return closest($el, selContent);\r\n            }\r\n\r\n        },\r\n\r\n        connected: function() {\r\n            css(this.$el, 'minHeight', 150);\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n\r\n                if (!this.content || !this.container || !isVisible(this.$el)) {\r\n                    return false;\r\n                }\r\n\r\n                return {\r\n                    current: toFloat(css(this.$el, 'maxHeight')),\r\n                    max: Math.max(150, height(this.container) - (dimensions(this.content).height - height(this.$el)))\r\n                };\r\n            },\r\n\r\n            write: function(ref) {\r\n                var current = ref.current;\r\n                var max = ref.max;\r\n\r\n                css(this.$el, 'maxHeight', max);\r\n                if (Math.round(current) !== Math.round(max)) {\r\n                    trigger(this.$el, 'resize');\r\n                }\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var responsive = {\r\n\r\n        props: ['width', 'height'],\r\n\r\n        connected: function() {\r\n            addClass(this.$el, 'uk-responsive-width');\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n                return isVisible(this.$el) && this.width && this.height\r\n                    ? {width: width(parent(this.$el)), height: this.height}\r\n                    : false;\r\n            },\r\n\r\n            write: function(dim) {\r\n                height(this.$el, Dimensions.contain({\r\n                    height: this.height,\r\n                    width: this.width\r\n                }, dim).height);\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var scroll = {\r\n\r\n        props: {\r\n            offset: Number\r\n        },\r\n\r\n        data: {\r\n            offset: 0\r\n        },\r\n\r\n        methods: {\r\n\r\n            scrollTo: function(el) {\r\n                var this$1 = this;\r\n\r\n\r\n                el = el && $(el) || document.body;\r\n\r\n                if (trigger(this.$el, 'beforescroll', [this, el])) {\r\n                    scrollIntoView(el, {offset: this.offset}).then(function () { return trigger(this$1.$el, 'scrolled', [this$1, el]); }\r\n                    );\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        events: {\r\n\r\n            click: function(e) {\r\n\r\n                if (e.defaultPrevented) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                this.scrollTo((\"#\" + (escape(decodeURIComponent((this.$el.hash || '').substr(1))))));\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var stateKey = '_ukScrollspy';\r\n    var scrollspy = {\r\n\r\n        args: 'cls',\r\n\r\n        props: {\r\n            cls: String,\r\n            target: String,\r\n            hidden: Boolean,\r\n            offsetTop: Number,\r\n            offsetLeft: Number,\r\n            repeat: Boolean,\r\n            delay: Number\r\n        },\r\n\r\n        data: function () { return ({\r\n            cls: false,\r\n            target: false,\r\n            hidden: true,\r\n            offsetTop: 0,\r\n            offsetLeft: 0,\r\n            repeat: false,\r\n            delay: 0,\r\n            inViewClass: 'uk-scrollspy-inview'\r\n        }); },\r\n\r\n        computed: {\r\n\r\n            elements: {\r\n\r\n                get: function(ref, $el) {\r\n                    var target = ref.target;\r\n\r\n                    return target ? $$(target, $el) : [$el];\r\n                },\r\n\r\n                watch: function(elements) {\r\n                    if (this.hidden) {\r\n                        css(filter$1(elements, (\":not(.\" + (this.inViewClass) + \")\")), 'visibility', 'hidden');\r\n                    }\r\n                },\r\n\r\n                immediate: true\r\n\r\n            }\r\n\r\n        },\r\n\r\n        disconnected: function() {\r\n            var this$1 = this;\r\n\r\n            this.elements.forEach(function (el) {\r\n                removeClass(el, this$1.inViewClass, el[stateKey] ? el[stateKey].cls : '');\r\n                delete el[stateKey];\r\n            });\r\n        },\r\n\r\n        update: [\r\n\r\n            {\r\n\r\n                read: function(data$1) {\r\n                    var this$1 = this;\r\n\r\n\r\n                    // Let child components be applied at least once first\r\n                    if (!data$1.update) {\r\n                        Promise$1.resolve().then(function () {\r\n                            this$1.$emit();\r\n                            data$1.update = true;\r\n                        });\r\n                        return false;\r\n                    }\r\n\r\n                    this.elements.forEach(function (el) {\r\n\r\n                        if (!el[stateKey]) {\r\n                            el[stateKey] = {cls: data(el, 'uk-scrollspy-class') || this$1.cls};\r\n                        }\r\n\r\n                        el[stateKey].show = isInView(el, this$1.offsetTop, this$1.offsetLeft);\r\n\r\n                    });\r\n\r\n                },\r\n\r\n                write: function(data) {\r\n                    var this$1 = this;\r\n\r\n\r\n                    this.elements.forEach(function (el) {\r\n\r\n                        var state = el[stateKey];\r\n\r\n                        if (state.show && !state.inview && !state.queued) {\r\n\r\n                            state.queued = true;\r\n\r\n                            data.promise = (data.promise || Promise$1.resolve()).then(function () { return new Promise$1(function (resolve) { return setTimeout(resolve, this$1.delay); }\r\n                                ); }\r\n                            ).then(function () {\r\n                                this$1.toggle(el, true);\r\n                                setTimeout(function () {\r\n                                    state.queued = false;\r\n                                    this$1.$emit();\r\n                                }, 300);\r\n                            });\r\n\r\n                        } else if (!state.show && state.inview && !state.queued && this$1.repeat) {\r\n\r\n                            this$1.toggle(el, false);\r\n\r\n                        }\r\n\r\n                    });\r\n\r\n                },\r\n\r\n                events: ['scroll', 'resize']\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            toggle: function(el, inview) {\r\n\r\n                var state = el[stateKey];\r\n\r\n                state.off && state.off();\r\n\r\n                css(el, 'visibility', !inview && this.hidden ? 'hidden' : '');\r\n\r\n                toggleClass(el, this.inViewClass, inview);\r\n                toggleClass(el, state.cls);\r\n\r\n                if (/\\buk-animation-/.test(state.cls)) {\r\n                    state.off = once(el, 'animationcancel animationend', function () { return removeClasses(el, 'uk-animation-[\\\\w-]+'); }\r\n                    );\r\n                }\r\n\r\n                trigger(el, inview ? 'inview' : 'outview');\r\n\r\n                state.inview = inview;\r\n\r\n                this.$update(el);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var scrollspyNav = {\r\n\r\n        props: {\r\n            cls: String,\r\n            closest: String,\r\n            scroll: Boolean,\r\n            overflow: Boolean,\r\n            offset: Number\r\n        },\r\n\r\n        data: {\r\n            cls: 'uk-active',\r\n            closest: false,\r\n            scroll: false,\r\n            overflow: true,\r\n            offset: 0\r\n        },\r\n\r\n        computed: {\r\n\r\n            links: {\r\n\r\n                get: function(_, $el) {\r\n                    return $$('a[href^=\"#\"]', $el).filter(function (el) { return el.hash; });\r\n                },\r\n\r\n                watch: function(links) {\r\n                    if (this.scroll) {\r\n                        this.$create('scroll', links, {offset: this.offset || 0});\r\n                    }\r\n                },\r\n\r\n                immediate: true\r\n\r\n            },\r\n\r\n            targets: function() {\r\n                return $$(this.links.map(function (el) { return escape(el.hash).substr(1); }).join(','));\r\n            },\r\n\r\n            elements: function(ref) {\r\n                var selector = ref.closest;\r\n\r\n                return closest(this.links, selector || '*');\r\n            }\r\n\r\n        },\r\n\r\n        update: [\r\n\r\n            {\r\n\r\n                read: function() {\r\n                    var this$1 = this;\r\n\r\n\r\n                    var ref = this.targets;\r\n                    var length = ref.length;\r\n\r\n                    if (!length || !isVisible(this.$el)) {\r\n                        return false;\r\n                    }\r\n\r\n                    var ref$1 = scrollParents(this.targets, /auto|scroll/, true);\r\n                    var scrollElement = ref$1[0];\r\n                    var scrollTop = scrollElement.scrollTop;\r\n                    var scrollHeight = scrollElement.scrollHeight;\r\n                    var max = scrollHeight - getViewportClientHeight(scrollElement);\r\n                    var active = false;\r\n\r\n                    if (scrollTop === max) {\r\n                        active = length - 1;\r\n                    } else {\r\n\r\n                        this.targets.every(function (el, i) {\r\n                            if (offset(el).top - offset(getViewport$1(scrollElement)).top - this$1.offset <= 0) {\r\n                                active = i;\r\n                                return true;\r\n                            }\r\n                        });\r\n\r\n                        if (active === false && this.overflow) {\r\n                            active = 0;\r\n                        }\r\n                    }\r\n\r\n                    return {active: active};\r\n                },\r\n\r\n                write: function(ref) {\r\n                    var active = ref.active;\r\n\r\n\r\n                    var changed = active !== false && !hasClass(this.elements[active], this.cls);\r\n\r\n                    this.links.forEach(function (el) { return el.blur(); });\r\n                    removeClass(this.elements, this.cls);\r\n                    addClass(this.elements[active], this.cls);\r\n\r\n                    if (changed) {\r\n                        trigger(this.$el, 'active', [active, this.elements[active]]);\r\n                    }\r\n                },\r\n\r\n                events: ['scroll', 'resize']\r\n\r\n            }\r\n\r\n        ]\r\n\r\n    };\r\n\r\n    var sticky = {\r\n\r\n        mixins: [Class, Media],\r\n\r\n        props: {\r\n            top: null,\r\n            bottom: Boolean,\r\n            offset: String,\r\n            animation: String,\r\n            clsActive: String,\r\n            clsInactive: String,\r\n            clsFixed: String,\r\n            clsBelow: String,\r\n            selTarget: String,\r\n            widthElement: Boolean,\r\n            showOnUp: Boolean,\r\n            targetOffset: Number\r\n        },\r\n\r\n        data: {\r\n            top: 0,\r\n            bottom: false,\r\n            offset: 0,\r\n            animation: '',\r\n            clsActive: 'uk-active',\r\n            clsInactive: '',\r\n            clsFixed: 'uk-sticky-fixed',\r\n            clsBelow: 'uk-sticky-below',\r\n            selTarget: '',\r\n            widthElement: false,\r\n            showOnUp: false,\r\n            targetOffset: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            offset: function(ref) {\r\n                var offset = ref.offset;\r\n\r\n                return toPx(offset);\r\n            },\r\n\r\n            selTarget: function(ref, $el) {\r\n                var selTarget = ref.selTarget;\r\n\r\n                return selTarget && $(selTarget, $el) || $el;\r\n            },\r\n\r\n            widthElement: function(ref, $el) {\r\n                var widthElement = ref.widthElement;\r\n\r\n                return query(widthElement, $el) || this.placeholder;\r\n            },\r\n\r\n            isActive: {\r\n\r\n                get: function() {\r\n                    return hasClass(this.selTarget, this.clsActive);\r\n                },\r\n\r\n                set: function(value) {\r\n                    if (value && !this.isActive) {\r\n                        replaceClass(this.selTarget, this.clsInactive, this.clsActive);\r\n                        trigger(this.$el, 'active');\r\n                    } else if (!value && !hasClass(this.selTarget, this.clsInactive)) {\r\n                        replaceClass(this.selTarget, this.clsActive, this.clsInactive);\r\n                        trigger(this.$el, 'inactive');\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        connected: function() {\r\n            this.placeholder = $('+ .uk-sticky-placeholder', this.$el) || $('<div class=\"uk-sticky-placeholder\"></div>');\r\n            this.isFixed = false;\r\n            this.isActive = false;\r\n        },\r\n\r\n        disconnected: function() {\r\n\r\n            if (this.isFixed) {\r\n                this.hide();\r\n                removeClass(this.selTarget, this.clsInactive);\r\n            }\r\n\r\n            remove$1(this.placeholder);\r\n            this.placeholder = null;\r\n            this.widthElement = null;\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'load hashchange popstate',\r\n\r\n                el: function() {\r\n                    return window;\r\n                },\r\n\r\n                handler: function() {\r\n                    var this$1 = this;\r\n\r\n\r\n                    if (!(this.targetOffset !== false && location.hash && window.pageYOffset > 0)) {\r\n                        return;\r\n                    }\r\n\r\n                    var target = $(location.hash);\r\n\r\n                    if (target) {\r\n                        fastdom.read(function () {\r\n\r\n                            var ref = offset(target);\r\n                            var top = ref.top;\r\n                            var elTop = offset(this$1.$el).top;\r\n                            var elHeight = this$1.$el.offsetHeight;\r\n\r\n                            if (this$1.isFixed && elTop + elHeight >= top && elTop <= top + target.offsetHeight) {\r\n                                scrollTop(window, top - elHeight - (isNumeric(this$1.targetOffset) ? this$1.targetOffset : 0) - this$1.offset);\r\n                            }\r\n\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        update: [\r\n\r\n            {\r\n\r\n                read: function(ref, types) {\r\n                    var height = ref.height;\r\n\r\n\r\n                    this.inactive = !this.matchMedia || !isVisible(this.$el);\r\n\r\n                    if (this.inactive) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (this.isActive && types.has('resize')) {\r\n                        this.hide();\r\n                        height = this.$el.offsetHeight;\r\n                        this.show();\r\n                    }\r\n\r\n                    height = !this.isActive ? this.$el.offsetHeight : height;\r\n\r\n                    this.topOffset = offset(this.isFixed ? this.placeholder : this.$el).top;\r\n                    this.bottomOffset = this.topOffset + height;\r\n\r\n                    var bottom = parseProp('bottom', this);\r\n\r\n                    this.top = Math.max(toFloat(parseProp('top', this)), this.topOffset) - this.offset;\r\n                    this.bottom = bottom && bottom - this.$el.offsetHeight;\r\n                    this.width = dimensions(isVisible(this.widthElement) ? this.widthElement : this.$el).width;\r\n\r\n                    return {\r\n                        height: height,\r\n                        top: offsetPosition(this.placeholder)[0],\r\n                        margins: css(this.$el, ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'])\r\n                    };\r\n                },\r\n\r\n                write: function(ref) {\r\n                    var height = ref.height;\r\n                    var margins = ref.margins;\r\n\r\n\r\n                    var ref$1 = this;\r\n                    var placeholder = ref$1.placeholder;\r\n\r\n                    css(placeholder, assign({height: height}, margins));\r\n\r\n                    if (!within(placeholder, document)) {\r\n                        after(this.$el, placeholder);\r\n                        placeholder.hidden = true;\r\n                    }\r\n\r\n                    this.isActive = !!this.isActive; // force self-assign\r\n\r\n                },\r\n\r\n                events: ['resize']\r\n\r\n            },\r\n\r\n            {\r\n\r\n                read: function(ref) {\r\n                    var scroll = ref.scroll; if ( scroll === void 0 ) scroll = 0;\r\n\r\n\r\n                    this.scroll = window.pageYOffset;\r\n\r\n                    return {\r\n                        dir: scroll <= this.scroll ? 'down' : 'up',\r\n                        scroll: this.scroll\r\n                    };\r\n                },\r\n\r\n                write: function(data, types) {\r\n                    var this$1 = this;\r\n\r\n\r\n                    var now = Date.now();\r\n                    var isScrollUpdate = types.has('scroll');\r\n                    var initTimestamp = data.initTimestamp; if ( initTimestamp === void 0 ) initTimestamp = 0;\r\n                    var dir = data.dir;\r\n                    var lastDir = data.lastDir;\r\n                    var lastScroll = data.lastScroll;\r\n                    var scroll = data.scroll;\r\n                    var top = data.top;\r\n\r\n                    data.lastScroll = scroll;\r\n\r\n                    if (scroll < 0 || scroll === lastScroll && isScrollUpdate || this.showOnUp && !isScrollUpdate && !this.isFixed) {\r\n                        return;\r\n                    }\r\n\r\n                    if (now - initTimestamp > 300 || dir !== lastDir) {\r\n                        data.initScroll = scroll;\r\n                        data.initTimestamp = now;\r\n                    }\r\n\r\n                    data.lastDir = dir;\r\n\r\n                    if (this.showOnUp && !this.isFixed && Math.abs(data.initScroll - scroll) <= 30 && Math.abs(lastScroll - scroll) <= 10) {\r\n                        return;\r\n                    }\r\n\r\n                    if (this.inactive\r\n                        || scroll < this.top\r\n                        || this.showOnUp && (scroll <= this.top || dir === 'down' && isScrollUpdate || dir === 'up' && !this.isFixed && scroll <= this.bottomOffset)\r\n                    ) {\r\n\r\n                        if (!this.isFixed) {\r\n\r\n                            if (Animation.inProgress(this.$el) && top > scroll) {\r\n                                Animation.cancel(this.$el);\r\n                                this.hide();\r\n                            }\r\n\r\n                            return;\r\n                        }\r\n\r\n                        this.isFixed = false;\r\n\r\n                        if (this.animation && scroll > this.topOffset) {\r\n                            Animation.cancel(this.$el);\r\n                            Animation.out(this.$el, this.animation).then(function () { return this$1.hide(); }, noop);\r\n                        } else {\r\n                            this.hide();\r\n                        }\r\n\r\n                    } else if (this.isFixed) {\r\n\r\n                        this.update();\r\n\r\n                    } else if (this.animation) {\r\n\r\n                        Animation.cancel(this.$el);\r\n                        this.show();\r\n                        Animation.in(this.$el, this.animation).catch(noop);\r\n\r\n                    } else {\r\n                        this.show();\r\n                    }\r\n\r\n                },\r\n\r\n                events: ['resize', 'scroll']\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            show: function() {\r\n\r\n                this.isFixed = true;\r\n                this.update();\r\n                this.placeholder.hidden = false;\r\n\r\n            },\r\n\r\n            hide: function() {\r\n\r\n                this.isActive = false;\r\n                removeClass(this.$el, this.clsFixed, this.clsBelow);\r\n                css(this.$el, {position: '', top: '', width: ''});\r\n                this.placeholder.hidden = true;\r\n\r\n            },\r\n\r\n            update: function() {\r\n\r\n                var active = this.top !== 0 || this.scroll > this.top;\r\n                var top = Math.max(0, this.offset);\r\n\r\n                if (isNumeric(this.bottom) && this.scroll > this.bottom - this.offset) {\r\n                    top = this.bottom - this.scroll;\r\n                }\r\n\r\n                css(this.$el, {\r\n                    position: 'fixed',\r\n                    top: (top + \"px\"),\r\n                    width: this.width\r\n                });\r\n\r\n                this.isActive = active;\r\n                toggleClass(this.$el, this.clsBelow, this.scroll > this.bottomOffset);\r\n                addClass(this.$el, this.clsFixed);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function parseProp(prop, ref) {\r\n        var $props = ref.$props;\r\n        var $el = ref.$el;\r\n        var propOffset = ref[(prop + \"Offset\")];\r\n\r\n\r\n        var value = $props[prop];\r\n\r\n        if (!value) {\r\n            return;\r\n        }\r\n\r\n        if (isString(value) && value.match(/^-?\\d/)) {\r\n\r\n            return propOffset + toPx(value);\r\n\r\n        } else {\r\n\r\n            return offset(value === true ? parent($el) : query(value, $el)).bottom;\r\n\r\n        }\r\n    }\r\n\r\n    var Switcher = {\r\n\r\n        mixins: [Togglable],\r\n\r\n        args: 'connect',\r\n\r\n        props: {\r\n            connect: String,\r\n            toggle: String,\r\n            active: Number,\r\n            swiping: Boolean\r\n        },\r\n\r\n        data: {\r\n            connect: '~.uk-switcher',\r\n            toggle: '> * > :first-child',\r\n            active: 0,\r\n            swiping: true,\r\n            cls: 'uk-active',\r\n            attrItem: 'uk-switcher-item'\r\n        },\r\n\r\n        computed: {\r\n\r\n            connects: {\r\n\r\n                get: function(ref, $el) {\r\n                    var connect = ref.connect;\r\n\r\n                    return queryAll(connect, $el);\r\n                },\r\n\r\n                watch: function(connects) {\r\n                    var this$1 = this;\r\n\r\n\r\n                    if (this.swiping) {\r\n                        css(connects, 'touch-action', 'pan-y pinch-zoom');\r\n                    }\r\n\r\n                    var index = this.index();\r\n                    this.connects.forEach(function (el) { return children(el).forEach(function (child, i) { return toggleClass(child, this$1.cls, i === index); }\r\n                        ); }\r\n                    );\r\n\r\n                },\r\n\r\n                immediate: true\r\n\r\n            },\r\n\r\n            toggles: {\r\n\r\n                get: function(ref, $el) {\r\n                    var toggle = ref.toggle;\r\n\r\n                    return $$(toggle, $el).filter(function (el) { return !matches(el, '.uk-disabled *, .uk-disabled, [disabled]'); });\r\n                },\r\n\r\n                watch: function(toggles) {\r\n                    var active = this.index();\r\n                    this.show(~active ? active : toggles[this.active] || toggles[0]);\r\n                },\r\n\r\n                immediate: true\r\n\r\n            },\r\n\r\n            children: function() {\r\n                var this$1 = this;\r\n\r\n                return children(this.$el).filter(function (child) { return this$1.toggles.some(function (toggle) { return within(toggle, child); }); });\r\n            }\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return this.toggle;\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.show(e.current);\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'click',\r\n\r\n                el: function() {\r\n                    return this.connects;\r\n                },\r\n\r\n                delegate: function() {\r\n                    return (\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\");\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.show(data(e.current, this.attrItem));\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'swipeRight swipeLeft',\r\n\r\n                filter: function() {\r\n                    return this.swiping;\r\n                },\r\n\r\n                el: function() {\r\n                    return this.connects;\r\n                },\r\n\r\n                handler: function(ref) {\r\n                    var type = ref.type;\r\n\r\n                    this.show(endsWith(type, 'Left') ? 'next' : 'previous');\r\n                }\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            index: function() {\r\n                var this$1 = this;\r\n\r\n                return findIndex(this.children, function (el) { return hasClass(el, this$1.cls); });\r\n            },\r\n\r\n            show: function(item) {\r\n                var this$1 = this;\r\n\r\n\r\n                var prev = this.index();\r\n                var next = getIndex(\r\n                    this.children[getIndex(item, this.toggles, prev)],\r\n                    children(this.$el)\r\n                );\r\n\r\n                if (prev === next) {\r\n                    return;\r\n                }\r\n\r\n                this.children.forEach(function (child, i) {\r\n                    toggleClass(child, this$1.cls, next === i);\r\n                    attr(this$1.toggles[i], 'aria-expanded', next === i);\r\n                });\r\n\r\n                this.connects.forEach(function (ref) {\r\n                        var children = ref.children;\r\n\r\n                        return this$1.toggleElement(toNodes(children).filter(function (child) { return hasClass(child, this$1.cls); }\r\n                    ), false, prev >= 0).then(function () { return this$1.toggleElement(children[next], true, prev >= 0); }\r\n                    );\r\n                }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var tab = {\r\n\r\n        mixins: [Class],\r\n\r\n        extends: Switcher,\r\n\r\n        props: {\r\n            media: Boolean\r\n        },\r\n\r\n        data: {\r\n            media: 960,\r\n            attrItem: 'uk-tab-item'\r\n        },\r\n\r\n        connected: function() {\r\n\r\n            var cls = hasClass(this.$el, 'uk-tab-left')\r\n                ? 'uk-tab-left'\r\n                : hasClass(this.$el, 'uk-tab-right')\r\n                    ? 'uk-tab-right'\r\n                    : false;\r\n\r\n            if (cls) {\r\n                this.$create('toggle', this.$el, {cls: cls, mode: 'media', media: this.media});\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    var toggle = {\r\n\r\n        mixins: [Media, Togglable],\r\n\r\n        args: 'target',\r\n\r\n        props: {\r\n            href: String,\r\n            target: null,\r\n            mode: 'list',\r\n            queued: Boolean\r\n        },\r\n\r\n        data: {\r\n            href: false,\r\n            target: false,\r\n            mode: 'click',\r\n            queued: true\r\n        },\r\n\r\n        connected: function() {\r\n            if (!isFocusable(this.$el)) {\r\n                attr(this.$el, 'tabindex', '0');\r\n            }\r\n        },\r\n\r\n        computed: {\r\n\r\n            target: {\r\n\r\n                get: function(ref, $el) {\r\n                    var href = ref.href;\r\n                    var target = ref.target;\r\n\r\n                    target = queryAll(target || href, $el);\r\n                    return target.length && target || [$el];\r\n                },\r\n\r\n                watch: function() {\r\n                    this.updateAria();\r\n                },\r\n\r\n                immediate: true\r\n\r\n            }\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: (pointerEnter + \" \" + pointerLeave + \" focus blur\"),\r\n\r\n                filter: function() {\r\n                    return includes(this.mode, 'hover');\r\n                },\r\n\r\n                handler: function(e) {\r\n                    if (!isTouch(e)) {\r\n                        this.toggle((\"toggle\" + (includes([pointerEnter, 'focus'], e.type) ? 'show' : 'hide')));\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                filter: function() {\r\n                    return includes(this.mode, 'click') || hasTouch && includes(this.mode, 'hover');\r\n                },\r\n\r\n                handler: function(e) {\r\n\r\n                    var link;\r\n                    if (closest(e.target, 'a[href=\"#\"], a[href=\"\"]')\r\n                        || (link = closest(e.target, 'a[href]')) && (\r\n                            !isToggled(this.target, this.cls)\r\n                            || link.hash && matches(this.target, link.hash)\r\n                        )\r\n                    ) {\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    this.toggle();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'toggled',\r\n\r\n                self: true,\r\n\r\n                el: function() {\r\n                    return this.target;\r\n                },\r\n\r\n                handler: function(e, toggled) {\r\n                    this.updateAria(toggled);\r\n                }\r\n            }\r\n\r\n        ],\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n                return includes(this.mode, 'media') && this.media\r\n                    ? {match: this.matchMedia}\r\n                    : false;\r\n            },\r\n\r\n            write: function(ref) {\r\n                var match = ref.match;\r\n\r\n\r\n                var toggled = this.isToggled(this.target);\r\n                if (match ? !toggled : toggled) {\r\n                    this.toggle();\r\n                }\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            toggle: function(type) {\r\n                var this$1 = this;\r\n\r\n\r\n                if (!trigger(this.target, type || 'toggle', [this])) {\r\n                    return;\r\n                }\r\n\r\n                if (!this.queued) {\r\n                    return this.toggleElement(this.target);\r\n                }\r\n\r\n                var leaving = this.target.filter(function (el) { return hasClass(el, this$1.clsLeave); });\r\n\r\n                if (leaving.length) {\r\n                    this.target.forEach(function (el) {\r\n                        var isLeaving = includes(leaving, el);\r\n                        this$1.toggleElement(el, isLeaving, isLeaving);\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                var toggled = this.target.filter(this.isToggled);\r\n                this.toggleElement(toggled, false).then(function () { return this$1.toggleElement(this$1.target.filter(function (el) { return !includes(toggled, el); }\r\n                    ), true); }\r\n                );\r\n\r\n            },\r\n\r\n            updateAria: function(toggled) {\r\n                attr(this.$el, 'aria-expanded', isBoolean(toggled)\r\n                    ? toggled\r\n                    : isToggled(this.target, this.cls)\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // TODO improve isToggled handling\r\n    function isToggled(target, cls) {\r\n        return cls\r\n            ? hasClass(target, cls.split(' ')[0])\r\n            : isVisible(target);\r\n    }\r\n\r\n    var components$1 = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        Accordion: Accordion,\r\n        Alert: alert,\r\n        Cover: cover,\r\n        Drop: drop,\r\n        Dropdown: drop,\r\n        FormCustom: formCustom,\r\n        Gif: gif,\r\n        Grid: grid,\r\n        HeightMatch: heightMatch,\r\n        HeightViewport: heightViewport,\r\n        Icon: Icon,\r\n        Img: img,\r\n        Leader: leader,\r\n        Margin: Margin,\r\n        Modal: modal,\r\n        Nav: nav,\r\n        Navbar: navbar,\r\n        Offcanvas: offcanvas,\r\n        OverflowAuto: overflowAuto,\r\n        Responsive: responsive,\r\n        Scroll: scroll,\r\n        Scrollspy: scrollspy,\r\n        ScrollspyNav: scrollspyNav,\r\n        Sticky: sticky,\r\n        Svg: SVG,\r\n        Switcher: Switcher,\r\n        Tab: tab,\r\n        Toggle: toggle,\r\n        Video: Video,\r\n        Close: Close,\r\n        Spinner: Spinner,\r\n        SlidenavNext: Slidenav,\r\n        SlidenavPrevious: Slidenav,\r\n        SearchIcon: Search,\r\n        Marker: IconComponent,\r\n        NavbarToggleIcon: IconComponent,\r\n        OverlayIcon: IconComponent,\r\n        PaginationNext: IconComponent,\r\n        PaginationPrevious: IconComponent,\r\n        Totop: IconComponent\r\n    });\r\n\r\n    // register components\r\n    each(components$1, function (component, name) { return UIkit.component(name, component); }\r\n    );\r\n\r\n    // core functionality\r\n    UIkit.use(Core);\r\n\r\n    boot(UIkit);\r\n\r\n    var countdown = {\r\n\r\n        mixins: [Class],\r\n\r\n        props: {\r\n            date: String,\r\n            clsWrapper: String\r\n        },\r\n\r\n        data: {\r\n            date: '',\r\n            clsWrapper: '.uk-countdown-%unit%'\r\n        },\r\n\r\n        computed: {\r\n\r\n            date: function(ref) {\r\n                var date = ref.date;\r\n\r\n                return Date.parse(date);\r\n            },\r\n\r\n            days: function(ref, $el) {\r\n                var clsWrapper = ref.clsWrapper;\r\n\r\n                return $(clsWrapper.replace('%unit%', 'days'), $el);\r\n            },\r\n\r\n            hours: function(ref, $el) {\r\n                var clsWrapper = ref.clsWrapper;\r\n\r\n                return $(clsWrapper.replace('%unit%', 'hours'), $el);\r\n            },\r\n\r\n            minutes: function(ref, $el) {\r\n                var clsWrapper = ref.clsWrapper;\r\n\r\n                return $(clsWrapper.replace('%unit%', 'minutes'), $el);\r\n            },\r\n\r\n            seconds: function(ref, $el) {\r\n                var clsWrapper = ref.clsWrapper;\r\n\r\n                return $(clsWrapper.replace('%unit%', 'seconds'), $el);\r\n            },\r\n\r\n            units: function() {\r\n                var this$1 = this;\r\n\r\n                return ['days', 'hours', 'minutes', 'seconds'].filter(function (unit) { return this$1[unit]; });\r\n            }\r\n\r\n        },\r\n\r\n        connected: function() {\r\n            this.start();\r\n        },\r\n\r\n        disconnected: function() {\r\n            var this$1 = this;\r\n\r\n            this.stop();\r\n            this.units.forEach(function (unit) { return empty(this$1[unit]); });\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'visibilitychange',\r\n\r\n                el: function() {\r\n                    return document;\r\n                },\r\n\r\n                handler: function() {\r\n                    if (document.hidden) {\r\n                        this.stop();\r\n                    } else {\r\n                        this.start();\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        update: {\r\n\r\n            write: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                var timespan = getTimeSpan(this.date);\r\n\r\n                if (timespan.total <= 0) {\r\n\r\n                    this.stop();\r\n\r\n                    timespan.days\r\n                        = timespan.hours\r\n                        = timespan.minutes\r\n                        = timespan.seconds\r\n                        = 0;\r\n                }\r\n\r\n                this.units.forEach(function (unit) {\r\n\r\n                    var digits = String(Math.floor(timespan[unit]));\r\n\r\n                    digits = digits.length < 2 ? (\"0\" + digits) : digits;\r\n\r\n                    var el = this$1[unit];\r\n                    if (el.textContent !== digits) {\r\n                        digits = digits.split('');\r\n\r\n                        if (digits.length !== el.children.length) {\r\n                            html(el, digits.map(function () { return '<span></span>'; }).join(''));\r\n                        }\r\n\r\n                        digits.forEach(function (digit, i) { return el.children[i].textContent = digit; });\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            start: function() {\r\n\r\n                this.stop();\r\n\r\n                if (this.date && this.units.length) {\r\n                    this.$update();\r\n                    this.timer = setInterval(this.$update, 1000);\r\n                }\r\n\r\n            },\r\n\r\n            stop: function() {\r\n\r\n                if (this.timer) {\r\n                    clearInterval(this.timer);\r\n                    this.timer = null;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getTimeSpan(date) {\r\n\r\n        var total = date - Date.now();\r\n\r\n        return {\r\n            total: total,\r\n            seconds: total / 1000 % 60,\r\n            minutes: total / 1000 / 60 % 60,\r\n            hours: total / 1000 / 60 / 60 % 24,\r\n            days: total / 1000 / 60 / 60 / 24\r\n        };\r\n    }\r\n\r\n    var clsLeave = 'uk-transition-leave';\r\n    var clsEnter = 'uk-transition-enter';\r\n\r\n    function fade(action, target, duration, stagger) {\r\n        if ( stagger === void 0 ) stagger = 0;\r\n\r\n\r\n        var index = transitionIndex(target, true);\r\n        var propsIn = {opacity: 1};\r\n        var propsOut = {opacity: 0};\r\n\r\n        var wrapIndexFn = function (fn) { return function () { return index === transitionIndex(target) ? fn() : Promise$1.reject(); }; };\r\n\r\n        var leaveFn = wrapIndexFn(function () {\r\n\r\n            addClass(target, clsLeave);\r\n\r\n            return Promise$1.all(getTransitionNodes(target).map(function (child, i) { return new Promise$1(function (resolve) { return setTimeout(function () { return Transition.start(child, propsOut, duration / 2, 'ease').then(resolve); }, i * stagger); }\r\n                ); }\r\n            )).then(function () { return removeClass(target, clsLeave); });\r\n\r\n        });\r\n\r\n        var enterFn = wrapIndexFn(function () {\r\n\r\n            var oldHeight = height(target);\r\n\r\n            addClass(target, clsEnter);\r\n            action();\r\n\r\n            css(children(target), {opacity: 0});\r\n\r\n            // Ensure UIkit updates have propagated\r\n            return new Promise$1(function (resolve) { return requestAnimationFrame(function () {\r\n\r\n                    var nodes = children(target);\r\n                    var newHeight = height(target);\r\n\r\n                    // Ensure Grid cells do not stretch when height is applied\r\n                    css(target, 'alignContent', 'flex-start');\r\n                    height(target, oldHeight);\r\n\r\n                    var transitionNodes = getTransitionNodes(target);\r\n                    css(nodes, propsOut);\r\n\r\n                    var transitions = transitionNodes.map(function (child, i) { return new Promise$1(function (resolve) { return setTimeout(function () { return Transition.start(child, propsIn, duration / 2, 'ease').then(resolve); }, i * stagger); }\r\n                        ); }\r\n                    );\r\n\r\n                    if (oldHeight !== newHeight) {\r\n                        transitions.push(Transition.start(target, {height: newHeight}, duration / 2 + transitionNodes.length * stagger, 'ease'));\r\n                    }\r\n\r\n                    Promise$1.all(transitions).then(function () {\r\n                        removeClass(target, clsEnter);\r\n                        if (index === transitionIndex(target)) {\r\n                            css(target, {height: '', alignContent: ''});\r\n                            css(nodes, {opacity: ''});\r\n                            delete target.dataset.transition;\r\n                        }\r\n                        resolve();\r\n                    });\r\n                }); }\r\n            );\r\n        });\r\n\r\n        return hasClass(target, clsLeave)\r\n            ? waitTransitionend(target).then(enterFn)\r\n            : hasClass(target, clsEnter)\r\n                ? waitTransitionend(target).then(leaveFn).then(enterFn)\r\n                : leaveFn().then(enterFn);\r\n    }\r\n\r\n    function transitionIndex(target, next) {\r\n        if (next) {\r\n            target.dataset.transition = 1 + transitionIndex(target);\r\n        }\r\n\r\n        return toNumber(target.dataset.transition) || 0;\r\n    }\r\n\r\n    function waitTransitionend(target) {\r\n        return Promise$1.all(children(target).filter(Transition.inProgress).map(function (el) { return new Promise$1(function (resolve) { return once(el, 'transitionend transitioncanceled', resolve); }); }\r\n        ));\r\n    }\r\n\r\n    function getTransitionNodes(target) {\r\n        return getRows(children(target)).reduce(function (nodes, row) { return nodes.concat(sortBy$1(row.filter(function (el) { return isInView(el); }), 'offsetLeft')); }, []);\r\n    }\r\n\r\n    function slide (action, target, duration) {\r\n\r\n        return new Promise$1(function (resolve) { return requestAnimationFrame(function () {\r\n\r\n                var nodes = children(target);\r\n\r\n                // Get current state\r\n                var currentProps = nodes.map(function (el) { return getProps(el, true); });\r\n                var targetProps = css(target, ['height', 'padding']);\r\n\r\n                // Cancel previous animations\r\n                Transition.cancel(target);\r\n                nodes.forEach(Transition.cancel);\r\n                reset(target);\r\n\r\n                // Adding, sorting, removing nodes\r\n                action();\r\n\r\n                // Find new nodes\r\n                nodes = nodes.concat(children(target).filter(function (el) { return !includes(nodes, el); }));\r\n\r\n                // Wait for update to propagate\r\n                Promise$1.resolve().then(function () {\r\n\r\n                    // Force update\r\n                    fastdom.flush();\r\n\r\n                    // Get new state\r\n                    var targetPropsTo = css(target, ['height', 'padding']);\r\n                    var ref = getTransitionProps(target, nodes, currentProps);\r\n                    var propsTo = ref[0];\r\n                    var propsFrom = ref[1];\r\n\r\n                    // Reset to previous state\r\n                    nodes.forEach(function (el, i) { return propsFrom[i] && css(el, propsFrom[i]); });\r\n                    css(target, assign({display: 'block'}, targetProps));\r\n\r\n                    // Start transitions on next frame\r\n                    requestAnimationFrame(function () {\r\n\r\n                        var transitions = nodes.map(function (el, i) { return parent(el) === target && Transition.start(el, propsTo[i], duration, 'ease'); }\r\n                            ).concat(Transition.start(target, targetPropsTo, duration, 'ease'));\r\n\r\n                        Promise$1.all(transitions).then(function () {\r\n                            nodes.forEach(function (el, i) { return parent(el) === target && css(el, 'display', propsTo[i].opacity === 0 ? 'none' : ''); });\r\n                            reset(target);\r\n                        }, noop).then(resolve);\r\n\r\n                    });\r\n                });\r\n            }); });\r\n    }\r\n\r\n    function getProps(el, opacity) {\r\n\r\n        var zIndex = css(el, 'zIndex');\r\n\r\n        return isVisible(el)\r\n            ? assign({\r\n                display: '',\r\n                opacity: opacity ? css(el, 'opacity') : '0',\r\n                pointerEvents: 'none',\r\n                position: 'absolute',\r\n                zIndex: zIndex === 'auto' ? index(el) : zIndex\r\n            }, getPositionWithMargin(el))\r\n            : false;\r\n    }\r\n\r\n    function getTransitionProps(target, nodes, currentProps) {\r\n\r\n        var propsTo = nodes.map(function (el, i) { return parent(el) && i in currentProps\r\n                ? currentProps[i]\r\n                ? isVisible(el)\r\n                    ? getPositionWithMargin(el)\r\n                    : {opacity: 0}\r\n                : {opacity: isVisible(el) ? 1 : 0}\r\n                : false; });\r\n\r\n        var propsFrom = propsTo.map(function (props, i) {\r\n\r\n            var from = parent(nodes[i]) === target && (currentProps[i] || getProps(nodes[i]));\r\n\r\n            if (!from) {\r\n                return false;\r\n            }\r\n\r\n            if (!props) {\r\n                delete from.opacity;\r\n            } else if (!('opacity' in props)) {\r\n                var opacity = from.opacity;\r\n\r\n                if (opacity % 1) {\r\n                    props.opacity = 1;\r\n                } else {\r\n                    delete from.opacity;\r\n                }\r\n            }\r\n\r\n            return from;\r\n        });\r\n\r\n        return [propsTo, propsFrom];\r\n    }\r\n\r\n    function reset(el) {\r\n        css(el.children, {\r\n            height: '',\r\n            left: '',\r\n            opacity: '',\r\n            pointerEvents: '',\r\n            position: '',\r\n            top: '',\r\n            marginTop: '',\r\n            marginLeft: '',\r\n            transform: '',\r\n            width: '',\r\n            zIndex: ''\r\n        });\r\n        css(el, {height: '', display: '', padding: ''});\r\n    }\r\n\r\n    function getPositionWithMargin(el) {\r\n        var ref = offset(el);\r\n        var height = ref.height;\r\n        var width = ref.width;\r\n        var ref$1 = position(el);\r\n        var top = ref$1.top;\r\n        var left = ref$1.left;\r\n        var ref$2 = css(el, ['marginTop', 'marginLeft']);\r\n        var marginLeft = ref$2.marginLeft;\r\n        var marginTop = ref$2.marginTop;\r\n\r\n        return {top: top, left: left, height: height, width: width, marginLeft: marginLeft, marginTop: marginTop, transform: ''};\r\n    }\r\n\r\n    var Animate = {\r\n\r\n        props: {\r\n            duration: Number,\r\n            animation: Boolean\r\n        },\r\n\r\n        data: {\r\n            duration: 150,\r\n            animation: 'slide'\r\n        },\r\n\r\n        methods: {\r\n\r\n            animate: function(action, target) {\r\n                var this$1 = this;\r\n                if ( target === void 0 ) target = this.$el;\r\n\r\n\r\n                var name = this.animation;\r\n                var animationFn = name === 'fade'\r\n                    ? fade\r\n                    : name === 'delayed-fade'\r\n                        ? function () {\r\n                            var args = [], len = arguments.length;\r\n                            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n                            return fade.apply(void 0, args.concat( [40] ));\r\n                }\r\n                        : !name\r\n                            ? function () {\r\n                                action();\r\n                                return Promise$1.resolve();\r\n                            }\r\n                            : slide;\r\n\r\n                return animationFn(action, target, this.duration)\r\n                    .then(function () { return this$1.$update(target, 'resize'); }, noop);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    var filter = {\r\n\r\n        mixins: [Animate],\r\n\r\n        args: 'target',\r\n\r\n        props: {\r\n            target: Boolean,\r\n            selActive: Boolean\r\n        },\r\n\r\n        data: {\r\n            target: null,\r\n            selActive: false,\r\n            attrItem: 'uk-filter-control',\r\n            cls: 'uk-active',\r\n            duration: 250\r\n        },\r\n\r\n        computed: {\r\n\r\n            toggles: {\r\n\r\n                get: function(ref, $el) {\r\n                    var attrItem = ref.attrItem;\r\n\r\n                    return $$((\"[\" + attrItem + \"],[data-\" + attrItem + \"]\"), $el);\r\n                },\r\n\r\n                watch: function() {\r\n                    var this$1 = this;\r\n\r\n\r\n                    this.updateState();\r\n\r\n                    if (this.selActive !== false) {\r\n                        var actives = $$(this.selActive, this.$el);\r\n                        this.toggles.forEach(function (el) { return toggleClass(el, this$1.cls, includes(actives, el)); });\r\n                    }\r\n\r\n                },\r\n\r\n                immediate: true\r\n\r\n            },\r\n\r\n            children: {\r\n\r\n                get: function(ref, $el) {\r\n                    var target = ref.target;\r\n\r\n                    return $$((target + \" > *\"), $el);\r\n                },\r\n\r\n                watch: function(list, old) {\r\n                    if (old && !isEqualList(list, old)) {\r\n                        this.updateState();\r\n                    }\r\n                },\r\n\r\n                immediate: true\r\n\r\n            }\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return (\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\");\r\n                },\r\n\r\n                handler: function(e) {\r\n\r\n                    e.preventDefault();\r\n                    this.apply(e.current);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            apply: function(el) {\r\n                var prevState = this.getState();\r\n                var newState = mergeState(el, this.attrItem, this.getState());\r\n\r\n                if (!isEqualState(prevState, newState)) {\r\n                    this.setState(newState);\r\n                }\r\n            },\r\n\r\n            getState: function() {\r\n                var this$1 = this;\r\n\r\n                return this.toggles\r\n                    .filter(function (item) { return hasClass(item, this$1.cls); })\r\n                    .reduce(function (state, el) { return mergeState(el, this$1.attrItem, state); }, {filter: {'': ''}, sort: []});\r\n            },\r\n\r\n            setState: function(state, animate) {\r\n                var this$1 = this;\r\n                if ( animate === void 0 ) animate = true;\r\n\r\n\r\n                state = assign({filter: {'': ''}, sort: []}, state);\r\n\r\n                trigger(this.$el, 'beforeFilter', [this, state]);\r\n\r\n                this.toggles.forEach(function (el) { return toggleClass(el, this$1.cls, !!matchFilter(el, this$1.attrItem, state)); });\r\n\r\n                Promise$1.all($$(this.target, this.$el).map(function (target) {\r\n                    var filterFn = function () {\r\n                        applyState(state, target, children(target));\r\n                        this$1.$update(this$1.$el);\r\n                    };\r\n                    return animate ? this$1.animate(filterFn, target) : filterFn();\r\n                })).then(function () { return trigger(this$1.$el, 'afterFilter', [this$1]); });\r\n\r\n            },\r\n\r\n            updateState: function() {\r\n                var this$1 = this;\r\n\r\n                fastdom.write(function () { return this$1.setState(this$1.getState(), false); });\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getFilter(el, attr) {\r\n        return parseOptions(data(el, attr), ['filter']);\r\n    }\r\n\r\n    function isEqualState(stateA, stateB) {\r\n        return ['filter', 'sort'].every(function (prop) { return isEqual(stateA[prop], stateB[prop]); });\r\n    }\r\n\r\n    function applyState(state, target, children) {\r\n        var selector = getSelector(state);\r\n\r\n        children.forEach(function (el) { return css(el, 'display', selector && !matches(el, selector) ? 'none' : ''); });\r\n\r\n        var ref = state.sort;\r\n        var sort = ref[0];\r\n        var order = ref[1];\r\n\r\n        if (sort) {\r\n            var sorted = sortItems(children, sort, order);\r\n            if (!isEqual(sorted, children)) {\r\n                append(target, sorted);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mergeState(el, attr, state) {\r\n\r\n        var filterBy = getFilter(el, attr);\r\n        var filter = filterBy.filter;\r\n        var group = filterBy.group;\r\n        var sort = filterBy.sort;\r\n        var order = filterBy.order; if ( order === void 0 ) order = 'asc';\r\n\r\n        if (filter || isUndefined(sort)) {\r\n\r\n            if (group) {\r\n\r\n                if (filter) {\r\n                    delete state.filter[''];\r\n                    state.filter[group] = filter;\r\n                } else {\r\n                    delete state.filter[group];\r\n\r\n                    if (isEmpty(state.filter) || '' in state.filter) {\r\n                        state.filter = {'': filter || ''};\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                state.filter = {'': filter || ''};\r\n            }\r\n\r\n        }\r\n\r\n        if (!isUndefined(sort)) {\r\n            state.sort = [sort, order];\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    function matchFilter(el, attr, ref) {\r\n        var stateFilter = ref.filter; if ( stateFilter === void 0 ) stateFilter = {'': ''};\r\n        var ref_sort = ref.sort;\r\n        var stateSort = ref_sort[0];\r\n        var stateOrder = ref_sort[1];\r\n\r\n\r\n        var ref$1 = getFilter(el, attr);\r\n        var filter = ref$1.filter; if ( filter === void 0 ) filter = '';\r\n        var group = ref$1.group; if ( group === void 0 ) group = '';\r\n        var sort = ref$1.sort;\r\n        var order = ref$1.order; if ( order === void 0 ) order = 'asc';\r\n\r\n        return isUndefined(sort)\r\n            ? group in stateFilter && filter === stateFilter[group]\r\n                || !filter && group && !(group in stateFilter) && !stateFilter['']\r\n            : stateSort === sort && stateOrder === order;\r\n    }\r\n\r\n    function isEqualList(listA, listB) {\r\n        return listA.length === listB.length\r\n            && listA.every(function (el) { return ~listB.indexOf(el); });\r\n    }\r\n\r\n    function getSelector(ref) {\r\n        var filter = ref.filter;\r\n\r\n        var selector = '';\r\n        each(filter, function (value) { return selector += value || ''; });\r\n        return selector;\r\n    }\r\n\r\n    function sortItems(nodes, sort, order) {\r\n        return assign([], nodes).sort(function (a, b) { return data(a, sort).localeCompare(data(b, sort), undefined, {numeric: true}) * (order === 'asc' || -1); });\r\n    }\r\n\r\n    var Animations$2 = {\r\n\r\n        slide: {\r\n\r\n            show: function(dir) {\r\n                return [\r\n                    {transform: translate(dir * -100)},\r\n                    {transform: translate()}\r\n                ];\r\n            },\r\n\r\n            percent: function(current) {\r\n                return translated(current);\r\n            },\r\n\r\n            translate: function(percent, dir) {\r\n                return [\r\n                    {transform: translate(dir * -100 * percent)},\r\n                    {transform: translate(dir * 100 * (1 - percent))}\r\n                ];\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function translated(el) {\r\n        return Math.abs(css(el, 'transform').split(',')[4] / el.offsetWidth) || 0;\r\n    }\r\n\r\n    function translate(value, unit) {\r\n        if ( value === void 0 ) value = 0;\r\n        if ( unit === void 0 ) unit = '%';\r\n\r\n        value += value ? unit : '';\r\n        return isIE ? (\"translateX(\" + value + \")\") : (\"translate3d(\" + value + \", 0, 0)\"); // currently not translate3d in IE, translate3d within translate3d does not work while transitioning\r\n    }\r\n\r\n    function scale3d(value) {\r\n        return (\"scale3d(\" + value + \", \" + value + \", 1)\");\r\n    }\r\n\r\n    var Animations$1 = assign({}, Animations$2, {\r\n\r\n        fade: {\r\n\r\n            show: function() {\r\n                return [\r\n                    {opacity: 0},\r\n                    {opacity: 1}\r\n                ];\r\n            },\r\n\r\n            percent: function(current) {\r\n                return 1 - css(current, 'opacity');\r\n            },\r\n\r\n            translate: function(percent) {\r\n                return [\r\n                    {opacity: 1 - percent},\r\n                    {opacity: percent}\r\n                ];\r\n            }\r\n\r\n        },\r\n\r\n        scale: {\r\n\r\n            show: function() {\r\n                return [\r\n                    {opacity: 0, transform: scale3d(1 - .2)},\r\n                    {opacity: 1, transform: scale3d(1)}\r\n                ];\r\n            },\r\n\r\n            percent: function(current) {\r\n                return 1 - css(current, 'opacity');\r\n            },\r\n\r\n            translate: function(percent) {\r\n                return [\r\n                    {opacity: 1 - percent, transform: scale3d(1 - .2 * percent)},\r\n                    {opacity: percent, transform: scale3d(1 - .2 + .2 * percent)}\r\n                ];\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    function Transitioner$1(prev, next, dir, ref) {\r\n        var animation = ref.animation;\r\n        var easing = ref.easing;\r\n\r\n\r\n        var percent = animation.percent;\r\n        var translate = animation.translate;\r\n        var show = animation.show; if ( show === void 0 ) show = noop;\r\n        var props = show(dir);\r\n        var deferred = new Deferred();\r\n\r\n        return {\r\n\r\n            dir: dir,\r\n\r\n            show: function(duration, percent, linear) {\r\n                var this$1 = this;\r\n                if ( percent === void 0 ) percent = 0;\r\n\r\n\r\n                var timing = linear ? 'linear' : easing;\r\n                duration -= Math.round(duration * clamp(percent, -1, 1));\r\n\r\n                this.translate(percent);\r\n\r\n                triggerUpdate$1(next, 'itemin', {percent: percent, duration: duration, timing: timing, dir: dir});\r\n                triggerUpdate$1(prev, 'itemout', {percent: 1 - percent, duration: duration, timing: timing, dir: dir});\r\n\r\n                Promise$1.all([\r\n                    Transition.start(next, props[1], duration, timing),\r\n                    Transition.start(prev, props[0], duration, timing)\r\n                ]).then(function () {\r\n                    this$1.reset();\r\n                    deferred.resolve();\r\n                }, noop);\r\n\r\n                return deferred.promise;\r\n            },\r\n\r\n            cancel: function() {\r\n                Transition.cancel([next, prev]);\r\n            },\r\n\r\n            reset: function() {\r\n                for (var prop in props[0]) {\r\n                    css([next, prev], prop, '');\r\n                }\r\n            },\r\n\r\n            forward: function(duration, percent) {\r\n                if ( percent === void 0 ) percent = this.percent();\r\n\r\n                Transition.cancel([next, prev]);\r\n                return this.show(duration, percent, true);\r\n            },\r\n\r\n            translate: function(percent) {\r\n\r\n                this.reset();\r\n\r\n                var props = translate(percent, dir);\r\n                css(next, props[1]);\r\n                css(prev, props[0]);\r\n                triggerUpdate$1(next, 'itemtranslatein', {percent: percent, dir: dir});\r\n                triggerUpdate$1(prev, 'itemtranslateout', {percent: 1 - percent, dir: dir});\r\n\r\n            },\r\n\r\n            percent: function() {\r\n                return percent(prev || next, next, dir);\r\n            },\r\n\r\n            getDistance: function() {\r\n                return prev && prev.offsetWidth;\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function triggerUpdate$1(el, type, data) {\r\n        trigger(el, createEvent(type, false, false, data));\r\n    }\r\n\r\n    var SliderAutoplay = {\r\n\r\n        props: {\r\n            autoplay: Boolean,\r\n            autoplayInterval: Number,\r\n            pauseOnHover: Boolean\r\n        },\r\n\r\n        data: {\r\n            autoplay: false,\r\n            autoplayInterval: 7000,\r\n            pauseOnHover: true\r\n        },\r\n\r\n        connected: function() {\r\n            this.autoplay && this.startAutoplay();\r\n        },\r\n\r\n        disconnected: function() {\r\n            this.stopAutoplay();\r\n        },\r\n\r\n        update: function() {\r\n            attr(this.slides, 'tabindex', '-1');\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'visibilitychange',\r\n\r\n                el: function() {\r\n                    return document;\r\n                },\r\n\r\n                filter: function() {\r\n                    return this.autoplay;\r\n                },\r\n\r\n                handler: function() {\r\n                    if (document.hidden) {\r\n                        this.stopAutoplay();\r\n                    } else {\r\n                        this.startAutoplay();\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            startAutoplay: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                this.stopAutoplay();\r\n\r\n                this.interval = setInterval(\r\n                    function () { return (!this$1.draggable || !$(':focus', this$1.$el))\r\n                        && (!this$1.pauseOnHover || !matches(this$1.$el, ':hover'))\r\n                        && !this$1.stack.length\r\n                        && this$1.show('next'); },\r\n                    this.autoplayInterval\r\n                );\r\n\r\n            },\r\n\r\n            stopAutoplay: function() {\r\n                this.interval && clearInterval(this.interval);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var SliderDrag = {\r\n\r\n        props: {\r\n            draggable: Boolean\r\n        },\r\n\r\n        data: {\r\n            draggable: true,\r\n            threshold: 10\r\n        },\r\n\r\n        created: function() {\r\n            var this$1 = this;\r\n\r\n\r\n            ['start', 'move', 'end'].forEach(function (key) {\r\n\r\n                var fn = this$1[key];\r\n                this$1[key] = function (e) {\r\n\r\n                    var pos = getEventPos(e).x * (isRtl ? -1 : 1);\r\n\r\n                    this$1.prevPos = pos !== this$1.pos ? this$1.pos : this$1.prevPos;\r\n                    this$1.pos = pos;\r\n\r\n                    fn(e);\r\n                };\r\n\r\n            });\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: pointerDown,\r\n\r\n                delegate: function() {\r\n                    return this.selSlides;\r\n                },\r\n\r\n                handler: function(e) {\r\n\r\n                    if (!this.draggable\r\n                        || !isTouch(e) && hasTextNodesOnly(e.target)\r\n                        || closest(e.target, selInput)\r\n                        || e.button > 0\r\n                        || this.length < 2\r\n                    ) {\r\n                        return;\r\n                    }\r\n\r\n                    this.start(e);\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'dragstart',\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            start: function() {\r\n\r\n                this.drag = this.pos;\r\n\r\n                if (this._transitioner) {\r\n\r\n                    this.percent = this._transitioner.percent();\r\n                    this.drag += this._transitioner.getDistance() * this.percent * this.dir;\r\n\r\n                    this._transitioner.cancel();\r\n                    this._transitioner.translate(this.percent);\r\n\r\n                    this.dragging = true;\r\n\r\n                    this.stack = [];\r\n\r\n                } else {\r\n                    this.prevIndex = this.index;\r\n                }\r\n\r\n                on(document, pointerMove, this.move, {passive: false});\r\n\r\n                // 'input' event is triggered by video controls\r\n                on(document, (pointerUp + \" \" + pointerCancel + \" input\"), this.end, true);\r\n\r\n                css(this.list, 'userSelect', 'none');\r\n\r\n            },\r\n\r\n            move: function(e) {\r\n                var this$1 = this;\r\n\r\n\r\n                var distance = this.pos - this.drag;\r\n\r\n                if (distance === 0 || this.prevPos === this.pos || !this.dragging && Math.abs(distance) < this.threshold) {\r\n                    return;\r\n                }\r\n\r\n                // prevent click event\r\n                css(this.list, 'pointerEvents', 'none');\r\n\r\n                e.cancelable && e.preventDefault();\r\n\r\n                this.dragging = true;\r\n                this.dir = (distance < 0 ? 1 : -1);\r\n\r\n                var ref = this;\r\n                var slides = ref.slides;\r\n                var ref$1 = this;\r\n                var prevIndex = ref$1.prevIndex;\r\n                var dis = Math.abs(distance);\r\n                var nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);\r\n                var width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\r\n\r\n                while (nextIndex !== prevIndex && dis > width) {\r\n\r\n                    this.drag -= width * this.dir;\r\n\r\n                    prevIndex = nextIndex;\r\n                    dis -= width;\r\n                    nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);\r\n                    width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\r\n\r\n                }\r\n\r\n                this.percent = dis / width;\r\n\r\n                var prev = slides[prevIndex];\r\n                var next = slides[nextIndex];\r\n                var changed = this.index !== nextIndex;\r\n                var edge = prevIndex === nextIndex;\r\n\r\n                var itemShown;\r\n\r\n                [this.index, this.prevIndex].filter(function (i) { return !includes([nextIndex, prevIndex], i); }).forEach(function (i) {\r\n                    trigger(slides[i], 'itemhidden', [this$1]);\r\n\r\n                    if (edge) {\r\n                        itemShown = true;\r\n                        this$1.prevIndex = prevIndex;\r\n                    }\r\n\r\n                });\r\n\r\n                if (this.index === prevIndex && this.prevIndex !== prevIndex || itemShown) {\r\n                    trigger(slides[this.index], 'itemshown', [this]);\r\n                }\r\n\r\n                if (changed) {\r\n                    this.prevIndex = prevIndex;\r\n                    this.index = nextIndex;\r\n\r\n                    !edge && trigger(prev, 'beforeitemhide', [this]);\r\n                    trigger(next, 'beforeitemshow', [this]);\r\n                }\r\n\r\n                this._transitioner = this._translate(Math.abs(this.percent), prev, !edge && next);\r\n\r\n                if (changed) {\r\n                    !edge && trigger(prev, 'itemhide', [this]);\r\n                    trigger(next, 'itemshow', [this]);\r\n                }\r\n\r\n            },\r\n\r\n            end: function() {\r\n\r\n                off(document, pointerMove, this.move, {passive: false});\r\n                off(document, (pointerUp + \" \" + pointerCancel + \" input\"), this.end, true);\r\n\r\n                if (this.dragging) {\r\n\r\n                    this.dragging = null;\r\n\r\n                    if (this.index === this.prevIndex) {\r\n                        this.percent = 1 - this.percent;\r\n                        this.dir *= -1;\r\n                        this._show(false, this.index, true);\r\n                        this._transitioner = null;\r\n                    } else {\r\n\r\n                        var dirChange = (isRtl ? this.dir * (isRtl ? 1 : -1) : this.dir) < 0 === this.prevPos > this.pos;\r\n                        this.index = dirChange ? this.index : this.prevIndex;\r\n\r\n                        if (dirChange) {\r\n                            this.percent = 1 - this.percent;\r\n                        }\r\n\r\n                        this.show(this.dir > 0 && !dirChange || this.dir < 0 && dirChange ? 'next' : 'previous', true);\r\n                    }\r\n\r\n                }\r\n\r\n                css(this.list, {userSelect: '', pointerEvents: ''});\r\n\r\n                this.drag\r\n                    = this.percent\r\n                    = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function hasTextNodesOnly(el) {\r\n        return !el.children.length && el.childNodes.length;\r\n    }\r\n\r\n    var SliderNav = {\r\n\r\n        data: {\r\n            selNav: false\r\n        },\r\n\r\n        computed: {\r\n\r\n            nav: function(ref, $el) {\r\n                var selNav = ref.selNav;\r\n\r\n                return $(selNav, $el);\r\n            },\r\n\r\n            selNavItem: function(ref) {\r\n                var attrItem = ref.attrItem;\r\n\r\n                return (\"[\" + attrItem + \"],[data-\" + attrItem + \"]\");\r\n            },\r\n\r\n            navItems: function(_, $el) {\r\n                return $$(this.selNavItem, $el);\r\n            }\r\n\r\n        },\r\n\r\n        update: {\r\n\r\n            write: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                if (this.nav && this.length !== this.nav.children.length) {\r\n                    html(this.nav, this.slides.map(function (_, i) { return (\"<li \" + (this$1.attrItem) + \"=\\\"\" + i + \"\\\"><a href></a></li>\"); }).join(''));\r\n                }\r\n\r\n                this.navItems.concat(this.nav).forEach(function (el) { return el && (el.hidden = !this$1.maxIndex); });\r\n\r\n                this.updateNav();\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return this.selNavItem;\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.show(data(e.current, this.attrItem));\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'itemshow',\r\n                handler: 'updateNav'\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            updateNav: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                var i = this.getValidIndex();\r\n                this.navItems.forEach(function (el) {\r\n\r\n                    var cmd = data(el, this$1.attrItem);\r\n\r\n                    toggleClass(el, this$1.clsActive, toNumber(cmd) === i);\r\n                    toggleClass(el, 'uk-invisible', this$1.finite && (cmd === 'previous' && i === 0 || cmd === 'next' && i >= this$1.maxIndex));\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var Slider = {\r\n\r\n        mixins: [SliderAutoplay, SliderDrag, SliderNav],\r\n\r\n        props: {\r\n            clsActivated: Boolean,\r\n            easing: String,\r\n            index: Number,\r\n            finite: Boolean,\r\n            velocity: Number,\r\n            selSlides: String\r\n        },\r\n\r\n        data: function () { return ({\r\n            easing: 'ease',\r\n            finite: false,\r\n            velocity: 1,\r\n            index: 0,\r\n            prevIndex: -1,\r\n            stack: [],\r\n            percent: 0,\r\n            clsActive: 'uk-active',\r\n            clsActivated: false,\r\n            Transitioner: false,\r\n            transitionOptions: {}\r\n        }); },\r\n\r\n        connected: function() {\r\n            this.prevIndex = -1;\r\n            this.index = this.getValidIndex(this.$props.index);\r\n            this.stack = [];\r\n        },\r\n\r\n        disconnected: function() {\r\n            removeClass(this.slides, this.clsActive);\r\n        },\r\n\r\n        computed: {\r\n\r\n            duration: function(ref, $el) {\r\n                var velocity = ref.velocity;\r\n\r\n                return speedUp($el.offsetWidth / velocity);\r\n            },\r\n\r\n            list: function(ref, $el) {\r\n                var selList = ref.selList;\r\n\r\n                return $(selList, $el);\r\n            },\r\n\r\n            maxIndex: function() {\r\n                return this.length - 1;\r\n            },\r\n\r\n            selSlides: function(ref) {\r\n                var selList = ref.selList;\r\n                var selSlides = ref.selSlides;\r\n\r\n                return (selList + \" \" + (selSlides || '> *'));\r\n            },\r\n\r\n            slides: {\r\n\r\n                get: function() {\r\n                    return $$(this.selSlides, this.$el);\r\n                },\r\n\r\n                watch: function() {\r\n                    this.$reset();\r\n                }\r\n\r\n            },\r\n\r\n            length: function() {\r\n                return this.slides.length;\r\n            }\r\n\r\n        },\r\n\r\n        events: {\r\n\r\n            itemshown: function() {\r\n                this.$update(this.list);\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            show: function(index, force) {\r\n                var this$1 = this;\r\n                if ( force === void 0 ) force = false;\r\n\r\n\r\n                if (this.dragging || !this.length) {\r\n                    return;\r\n                }\r\n\r\n                var ref = this;\r\n                var stack = ref.stack;\r\n                var queueIndex = force ? 0 : stack.length;\r\n                var reset = function () {\r\n                    stack.splice(queueIndex, 1);\r\n\r\n                    if (stack.length) {\r\n                        this$1.show(stack.shift(), true);\r\n                    }\r\n                };\r\n\r\n                stack[force ? 'unshift' : 'push'](index);\r\n\r\n                if (!force && stack.length > 1) {\r\n\r\n                    if (stack.length === 2) {\r\n                        this._transitioner.forward(Math.min(this.duration, 200));\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                var prevIndex = this.getIndex(this.index);\r\n                var prev = hasClass(this.slides, this.clsActive) && this.slides[prevIndex];\r\n                var nextIndex = this.getIndex(index, this.index);\r\n                var next = this.slides[nextIndex];\r\n\r\n                if (prev === next) {\r\n                    reset();\r\n                    return;\r\n                }\r\n\r\n                this.dir = getDirection(index, prevIndex);\r\n                this.prevIndex = prevIndex;\r\n                this.index = nextIndex;\r\n\r\n                if (prev && !trigger(prev, 'beforeitemhide', [this])\r\n                    || !trigger(next, 'beforeitemshow', [this, prev])\r\n                ) {\r\n                    this.index = this.prevIndex;\r\n                    reset();\r\n                    return;\r\n                }\r\n\r\n                var promise = this._show(prev, next, force).then(function () {\r\n\r\n                    prev && trigger(prev, 'itemhidden', [this$1]);\r\n                    trigger(next, 'itemshown', [this$1]);\r\n\r\n                    return new Promise$1(function (resolve) {\r\n                        fastdom.write(function () {\r\n                            stack.shift();\r\n                            if (stack.length) {\r\n                                this$1.show(stack.shift(), true);\r\n                            } else {\r\n                                this$1._transitioner = null;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                    });\r\n\r\n                });\r\n\r\n                prev && trigger(prev, 'itemhide', [this]);\r\n                trigger(next, 'itemshow', [this]);\r\n\r\n                return promise;\r\n\r\n            },\r\n\r\n            getIndex: function(index, prev) {\r\n                if ( index === void 0 ) index = this.index;\r\n                if ( prev === void 0 ) prev = this.index;\r\n\r\n                return clamp(getIndex(index, this.slides, prev, this.finite), 0, this.maxIndex);\r\n            },\r\n\r\n            getValidIndex: function(index, prevIndex) {\r\n                if ( index === void 0 ) index = this.index;\r\n                if ( prevIndex === void 0 ) prevIndex = this.prevIndex;\r\n\r\n                return this.getIndex(index, prevIndex);\r\n            },\r\n\r\n            _show: function(prev, next, force) {\r\n\r\n                this._transitioner = this._getTransitioner(\r\n                    prev,\r\n                    next,\r\n                    this.dir,\r\n                    assign({\r\n                        easing: force\r\n                            ? next.offsetWidth < 600\r\n                                ? 'cubic-bezier(0.25, 0.46, 0.45, 0.94)' /* easeOutQuad */\r\n                                : 'cubic-bezier(0.165, 0.84, 0.44, 1)' /* easeOutQuart */\r\n                            : this.easing\r\n                    }, this.transitionOptions)\r\n                );\r\n\r\n                if (!force && !prev) {\r\n                    this._translate(1);\r\n                    return Promise$1.resolve();\r\n                }\r\n\r\n                var ref = this.stack;\r\n                var length = ref.length;\r\n                return this._transitioner[length > 1 ? 'forward' : 'show'](length > 1 ? Math.min(this.duration, 75 + 75 / (length - 1)) : this.duration, this.percent);\r\n\r\n            },\r\n\r\n            _getDistance: function(prev, next) {\r\n                return this._getTransitioner(prev, prev !== next && next).getDistance();\r\n            },\r\n\r\n            _translate: function(percent, prev, next) {\r\n                if ( prev === void 0 ) prev = this.prevIndex;\r\n                if ( next === void 0 ) next = this.index;\r\n\r\n                var transitioner = this._getTransitioner(prev !== next ? prev : false, next);\r\n                transitioner.translate(percent);\r\n                return transitioner;\r\n            },\r\n\r\n            _getTransitioner: function(prev, next, dir, options) {\r\n                if ( prev === void 0 ) prev = this.prevIndex;\r\n                if ( next === void 0 ) next = this.index;\r\n                if ( dir === void 0 ) dir = this.dir || 1;\r\n                if ( options === void 0 ) options = this.transitionOptions;\r\n\r\n                return new this.Transitioner(\r\n                    isNumber(prev) ? this.slides[prev] : prev,\r\n                    isNumber(next) ? this.slides[next] : next,\r\n                    dir * (isRtl ? -1 : 1),\r\n                    options\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getDirection(index, prevIndex) {\r\n        return index === 'next'\r\n            ? 1\r\n            : index === 'previous'\r\n                ? -1\r\n                : index < prevIndex\r\n                    ? -1\r\n                    : 1;\r\n    }\r\n\r\n    function speedUp(x) {\r\n        return .5 * x + 300; // parabola through (400,500; 600,600; 1800,1200)\r\n    }\r\n\r\n    var Slideshow = {\r\n\r\n        mixins: [Slider],\r\n\r\n        props: {\r\n            animation: String\r\n        },\r\n\r\n        data: {\r\n            animation: 'slide',\r\n            clsActivated: 'uk-transition-active',\r\n            Animations: Animations$2,\r\n            Transitioner: Transitioner$1\r\n        },\r\n\r\n        computed: {\r\n\r\n            animation: function(ref) {\r\n                var animation = ref.animation;\r\n                var Animations = ref.Animations;\r\n\r\n                return assign(Animations[animation] || Animations.slide, {name: animation});\r\n            },\r\n\r\n            transitionOptions: function() {\r\n                return {animation: this.animation};\r\n            }\r\n\r\n        },\r\n\r\n        events: {\r\n\r\n            'itemshow itemhide itemshown itemhidden': function(ref) {\r\n                var target = ref.target;\r\n\r\n                this.$update(target);\r\n            },\r\n\r\n            beforeitemshow: function(ref) {\r\n                var target = ref.target;\r\n\r\n                addClass(target, this.clsActive);\r\n            },\r\n\r\n            itemshown: function(ref) {\r\n                var target = ref.target;\r\n\r\n                addClass(target, this.clsActivated);\r\n            },\r\n\r\n            itemhidden: function(ref) {\r\n                var target = ref.target;\r\n\r\n                removeClass(target, this.clsActive, this.clsActivated);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var LightboxPanel = {\r\n\r\n        mixins: [Container, Modal, Togglable, Slideshow],\r\n\r\n        functional: true,\r\n\r\n        props: {\r\n            delayControls: Number,\r\n            preload: Number,\r\n            videoAutoplay: Boolean,\r\n            template: String\r\n        },\r\n\r\n        data: function () { return ({\r\n            preload: 1,\r\n            videoAutoplay: false,\r\n            delayControls: 3000,\r\n            items: [],\r\n            cls: 'uk-open',\r\n            clsPage: 'uk-lightbox-page',\r\n            selList: '.uk-lightbox-items',\r\n            attrItem: 'uk-lightbox-item',\r\n            selClose: '.uk-close-large',\r\n            selCaption: '.uk-lightbox-caption',\r\n            pauseOnHover: false,\r\n            velocity: 2,\r\n            Animations: Animations$1,\r\n            template: \"<div class=\\\"uk-lightbox uk-overflow-hidden\\\"> <ul class=\\\"uk-lightbox-items\\\"></ul> <div class=\\\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\\\"> <button class=\\\"uk-lightbox-toolbar-icon uk-close-large\\\" type=\\\"button\\\" uk-close></button> </div> <a class=\\\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\\\" href uk-slidenav-previous uk-lightbox-item=\\\"previous\\\"></a> <a class=\\\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\\\" href uk-slidenav-next uk-lightbox-item=\\\"next\\\"></a> <div class=\\\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\\\"></div> </div>\"\r\n        }); },\r\n\r\n        created: function() {\r\n\r\n            var $el = $(this.template);\r\n            var list = $(this.selList, $el);\r\n            this.items.forEach(function () { return append(list, '<li>'); });\r\n\r\n            this.$mount(append(this.container, $el));\r\n\r\n        },\r\n\r\n        computed: {\r\n\r\n            caption: function(ref, $el) {\r\n                var selCaption = ref.selCaption;\r\n\r\n                return $(selCaption, $el);\r\n            }\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: (pointerMove + \" \" + pointerDown + \" keydown\"),\r\n\r\n                handler: 'showControls'\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                self: true,\r\n\r\n                delegate: function() {\r\n                    return this.selSlides;\r\n                },\r\n\r\n                handler: function(e) {\r\n\r\n                    if (e.defaultPrevented) {\r\n                        return;\r\n                    }\r\n\r\n                    this.hide();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'shown',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n                    this.showControls();\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'hide',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n\r\n                    this.hideControls();\r\n\r\n                    removeClass(this.slides, this.clsActive);\r\n                    Transition.stop(this.slides);\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n\r\n                name: 'hidden',\r\n\r\n                self: true,\r\n\r\n                handler: function() {\r\n                    this.$destroy(true);\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'keyup',\r\n\r\n                el: function() {\r\n                    return document;\r\n                },\r\n\r\n                handler: function(e) {\r\n\r\n                    if (!this.isToggled(this.$el) || !this.draggable) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (e.keyCode) {\r\n                        case 37:\r\n                            this.show('previous');\r\n                            break;\r\n                        case 39:\r\n                            this.show('next');\r\n                            break;\r\n                    }\r\n                }\r\n            },\r\n\r\n            {\r\n\r\n                name: 'beforeitemshow',\r\n\r\n                handler: function(e) {\r\n\r\n                    if (this.isToggled()) {\r\n                        return;\r\n                    }\r\n\r\n                    this.draggable = false;\r\n\r\n                    e.preventDefault();\r\n\r\n                    this.toggleElement(this.$el, true, false);\r\n\r\n                    this.animation = Animations$1['scale'];\r\n                    removeClass(e.target, this.clsActive);\r\n                    this.stack.splice(1, 0, this.index);\r\n\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'itemshow',\r\n\r\n                handler: function() {\r\n\r\n                    html(this.caption, this.getItem().caption || '');\r\n\r\n                    for (var j = -this.preload; j <= this.preload; j++) {\r\n                        this.loadItem(this.index + j);\r\n                    }\r\n\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'itemshown',\r\n\r\n                handler: function() {\r\n                    this.draggable = this.$props.draggable;\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n\r\n                name: 'itemload',\r\n\r\n                handler: function(_, item) {\r\n                    var this$1 = this;\r\n\r\n\r\n                    var src = item.source;\r\n                    var type = item.type;\r\n                    var alt = item.alt; if ( alt === void 0 ) alt = '';\r\n                    var poster = item.poster;\r\n                    var attrs = item.attrs; if ( attrs === void 0 ) attrs = {};\r\n\r\n                    this.setItem(item, '<span uk-spinner></span>');\r\n\r\n                    if (!src) {\r\n                        return;\r\n                    }\r\n\r\n                    var matches;\r\n                    var iframeAttrs = {\r\n                        frameborder: '0',\r\n                        allow: 'autoplay',\r\n                        allowfullscreen: '',\r\n                        style: 'max-width: 100%; box-sizing: border-box;',\r\n                        'uk-responsive': '',\r\n                        'uk-video': (\"\" + (this.videoAutoplay))\r\n                    };\r\n\r\n                    // Image\r\n                    if (type === 'image' || src.match(/\\.(avif|jpe?g|a?png|gif|svg|webp)($|\\?)/i)) {\r\n\r\n                        getImage(src, attrs.srcset, attrs.size).then(\r\n                            function (ref) {\r\n                                var width = ref.width;\r\n                                var height = ref.height;\r\n\r\n                                return this$1.setItem(item, createEl('img', assign({src: src, width: width, height: height, alt: alt}, attrs)));\r\n                        },\r\n                            function () { return this$1.setError(item); }\r\n                        );\r\n\r\n                    // Video\r\n                    } else if (type === 'video' || src.match(/\\.(mp4|webm|ogv)($|\\?)/i)) {\r\n\r\n                        var video = createEl('video', assign({\r\n                            src: src,\r\n                            poster: poster,\r\n                            controls: '',\r\n                            playsinline: '',\r\n                            'uk-video': (\"\" + (this.videoAutoplay))\r\n                        }, attrs));\r\n\r\n                        on(video, 'loadedmetadata', function () {\r\n                            attr(video, {width: video.videoWidth, height: video.videoHeight});\r\n                            this$1.setItem(item, video);\r\n                        });\r\n                        on(video, 'error', function () { return this$1.setError(item); });\r\n\r\n                    // Iframe\r\n                    } else if (type === 'iframe' || src.match(/\\.(html|php)($|\\?)/i)) {\r\n\r\n                        this.setItem(item, createEl('iframe', assign({\r\n                            src: src,\r\n                            frameborder: '0',\r\n                            allowfullscreen: '',\r\n                            class: 'uk-lightbox-iframe'\r\n                        }, attrs)));\r\n\r\n                    // YouTube\r\n                    } else if ((matches = src.match(/\\/\\/(?:.*?youtube(-nocookie)?\\..*?[?&]v=|youtu\\.be\\/)([\\w-]{11})[&?]?(.*)?/))) {\r\n\r\n                        this.setItem(item, createEl('iframe', assign({\r\n                            src: (\"https://www.youtube\" + (matches[1] || '') + \".com/embed/\" + (matches[2]) + (matches[3] ? (\"?\" + (matches[3])) : '')),\r\n                            width: 1920,\r\n                            height: 1080\r\n                        }, iframeAttrs, attrs)));\r\n\r\n                    // Vimeo\r\n                    } else if ((matches = src.match(/\\/\\/.*?vimeo\\.[a-z]+\\/(\\d+)[&?]?(.*)?/))) {\r\n\r\n                        ajax((\"https://vimeo.com/api/oembed.json?maxwidth=1920&url=\" + (encodeURI(src))), {\r\n                            responseType: 'json',\r\n                            withCredentials: false\r\n                        }).then(\r\n                            function (ref) {\r\n                                var ref_response = ref.response;\r\n                                var height = ref_response.height;\r\n                                var width = ref_response.width;\r\n\r\n                                return this$1.setItem(item, createEl('iframe', assign({\r\n                                src: (\"https://player.vimeo.com/video/\" + (matches[1]) + (matches[2] ? (\"?\" + (matches[2])) : '')),\r\n                                width: width,\r\n                                height: height\r\n                            }, iframeAttrs, attrs)));\r\n                        },\r\n                            function () { return this$1.setError(item); }\r\n                        );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            loadItem: function(index) {\r\n                if ( index === void 0 ) index = this.index;\r\n\r\n\r\n                var item = this.getItem(index);\r\n\r\n                if (!this.getSlide(item).childElementCount) {\r\n                    trigger(this.$el, 'itemload', [item]);\r\n                }\r\n            },\r\n\r\n            getItem: function(index) {\r\n                if ( index === void 0 ) index = this.index;\r\n\r\n                return this.items[getIndex(index, this.slides)];\r\n            },\r\n\r\n            setItem: function(item, content) {\r\n                trigger(this.$el, 'itemloaded', [this, html(this.getSlide(item), content) ]);\r\n            },\r\n\r\n            getSlide: function(item) {\r\n                return this.slides[this.items.indexOf(item)];\r\n            },\r\n\r\n            setError: function(item) {\r\n                this.setItem(item, '<span uk-icon=\"icon: bolt; ratio: 2\"></span>');\r\n            },\r\n\r\n            showControls: function() {\r\n\r\n                clearTimeout(this.controlsTimer);\r\n                this.controlsTimer = setTimeout(this.hideControls, this.delayControls);\r\n\r\n                addClass(this.$el, 'uk-active', 'uk-transition-active');\r\n\r\n            },\r\n\r\n            hideControls: function() {\r\n                removeClass(this.$el, 'uk-active', 'uk-transition-active');\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function createEl(tag, attrs) {\r\n        var el = fragment((\"<\" + tag + \">\"));\r\n        attr(el, attrs);\r\n        return el;\r\n    }\r\n\r\n    var lightbox = {\r\n\r\n        install: install$1,\r\n\r\n        props: {toggle: String},\r\n\r\n        data: {toggle: 'a'},\r\n\r\n        computed: {\r\n\r\n            toggles: {\r\n\r\n                get: function(ref, $el) {\r\n                    var toggle = ref.toggle;\r\n\r\n                    return $$(toggle, $el);\r\n                },\r\n\r\n                watch: function() {\r\n                    this.hide();\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        disconnected: function() {\r\n            this.hide();\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n\r\n                name: 'click',\r\n\r\n                delegate: function() {\r\n                    return ((this.toggle) + \":not(.uk-disabled)\");\r\n                },\r\n\r\n                handler: function(e) {\r\n                    e.preventDefault();\r\n                    this.show(e.current);\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n\r\n        methods: {\r\n\r\n            show: function(index) {\r\n                var this$1 = this;\r\n\r\n\r\n                var items = uniqueBy(this.toggles.map(toItem), 'source');\r\n\r\n                if (isElement(index)) {\r\n                    var ref = toItem(index);\r\n                    var source = ref.source;\r\n                    index = findIndex(items, function (ref) {\r\n                        var src = ref.source;\r\n\r\n                        return source === src;\r\n                    });\r\n                }\r\n\r\n                this.panel = this.panel || this.$create('lightboxPanel', assign({}, this.$props, {items: items}));\r\n\r\n                on(this.panel.$el, 'hidden', function () { return this$1.panel = false; });\r\n\r\n                return this.panel.show(index);\r\n\r\n            },\r\n\r\n            hide: function() {\r\n\r\n                return this.panel && this.panel.hide();\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function install$1(UIkit, Lightbox) {\r\n\r\n        if (!UIkit.lightboxPanel) {\r\n            UIkit.component('lightboxPanel', LightboxPanel);\r\n        }\r\n\r\n        assign(\r\n            Lightbox.props,\r\n            UIkit.component('lightboxPanel').options.props\r\n        );\r\n\r\n    }\r\n\r\n    function toItem(el) {\r\n\r\n        var item = {};\r\n\r\n        ['href', 'caption', 'type', 'poster', 'alt', 'attrs'].forEach(function (attr) {\r\n            item[attr === 'href' ? 'source' : attr] = data(el, attr);\r\n        });\r\n\r\n        item.attrs = parseOptions(item.attrs);\r\n\r\n        return item;\r\n    }\r\n\r\n    var obj$1;\r\n\r\n    var notification = {\r\n\r\n        mixins: [Container],\r\n\r\n        functional: true,\r\n\r\n        args: ['message', 'status'],\r\n\r\n        data: {\r\n            message: '',\r\n            status: '',\r\n            timeout: 5000,\r\n            group: null,\r\n            pos: 'top-center',\r\n            clsContainer: 'uk-notification',\r\n            clsClose: 'uk-notification-close',\r\n            clsMsg: 'uk-notification-message'\r\n        },\r\n\r\n        install: install,\r\n\r\n        computed: {\r\n\r\n            marginProp: function(ref) {\r\n                var pos = ref.pos;\r\n\r\n                return (\"margin\" + (startsWith(pos, 'top') ? 'Top' : 'Bottom'));\r\n            },\r\n\r\n            startProps: function() {\r\n                var obj;\r\n\r\n                return ( obj = {opacity: 0}, obj[this.marginProp] = -this.$el.offsetHeight, obj );\r\n            }\r\n\r\n        },\r\n\r\n        created: function() {\r\n\r\n            var container = $((\".\" + (this.clsContainer) + \"-\" + (this.pos)), this.container)\r\n                || append(this.container, (\"<div class=\\\"\" + (this.clsContainer) + \" \" + (this.clsContainer) + \"-\" + (this.pos) + \"\\\" style=\\\"display: block\\\"></div>\"));\r\n\r\n            this.$mount(append(container,\r\n                (\"<div class=\\\"\" + (this.clsMsg) + (this.status ? (\" \" + (this.clsMsg) + \"-\" + (this.status)) : '') + \"\\\"> <a href class=\\\"\" + (this.clsClose) + \"\\\" data-uk-close></a> <div>\" + (this.message) + \"</div> </div>\")\r\n            ));\r\n\r\n        },\r\n\r\n        connected: function() {\r\n            var this$1 = this;\r\n            var obj;\r\n\r\n\r\n            var margin = toFloat(css(this.$el, this.marginProp));\r\n            Transition.start(\r\n                css(this.$el, this.startProps),\r\n                ( obj = {opacity: 1}, obj[this.marginProp] = margin, obj )\r\n            ).then(function () {\r\n                if (this$1.timeout) {\r\n                    this$1.timer = setTimeout(this$1.close, this$1.timeout);\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        events: ( obj$1 = {\r\n\r\n            click: function(e) {\r\n                if (closest(e.target, 'a[href=\"#\"],a[href=\"\"]')) {\r\n                    e.preventDefault();\r\n                }\r\n                this.close();\r\n            }\r\n\r\n        }, obj$1[pointerEnter] = function () {\r\n                if (this.timer) {\r\n                    clearTimeout(this.timer);\r\n                }\r\n            }, obj$1[pointerLeave] = function () {\r\n                if (this.timeout) {\r\n                    this.timer = setTimeout(this.close, this.timeout);\r\n                }\r\n            }, obj$1 ),\r\n\r\n        methods: {\r\n\r\n            close: function(immediate) {\r\n                var this$1 = this;\r\n\r\n\r\n                var removeFn = function (el) {\r\n\r\n                    var container = parent(el);\r\n\r\n                    trigger(el, 'close', [this$1]);\r\n                    remove$1(el);\r\n\r\n                    if (container && !container.hasChildNodes()) {\r\n                        remove$1(container);\r\n                    }\r\n\r\n                };\r\n\r\n                if (this.timer) {\r\n                    clearTimeout(this.timer);\r\n                }\r\n\r\n                if (immediate) {\r\n                    removeFn(this.$el);\r\n                } else {\r\n                    Transition.start(this.$el, this.startProps).then(removeFn);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function install(UIkit) {\r\n        UIkit.notification.closeAll = function (group, immediate) {\r\n            apply$1(document.body, function (el) {\r\n                var notification = UIkit.getComponent(el, 'notification');\r\n                if (notification && (!group || group === notification.group)) {\r\n                    notification.close(immediate);\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    var props = ['x', 'y', 'bgx', 'bgy', 'rotate', 'scale', 'color', 'backgroundColor', 'borderColor', 'opacity', 'blur', 'hue', 'grayscale', 'invert', 'saturate', 'sepia', 'fopacity', 'stroke'];\r\n\r\n    var Parallax = {\r\n\r\n        mixins: [Media],\r\n\r\n        props: props.reduce(function (props, prop) {\r\n            props[prop] = 'list';\r\n            return props;\r\n        }, {}),\r\n\r\n        data: props.reduce(function (data, prop) {\r\n            data[prop] = undefined;\r\n            return data;\r\n        }, {}),\r\n\r\n        computed: {\r\n\r\n            props: function(properties, $el) {\r\n                var this$1 = this;\r\n\r\n\r\n                return props.reduce(function (props, prop) {\r\n\r\n                    if (isUndefined(properties[prop])) {\r\n                        return props;\r\n                    }\r\n\r\n                    var isColor = prop.match(/color/i);\r\n                    var isCssProp = isColor || prop === 'opacity';\r\n\r\n                    var pos, bgPos, diff;\r\n                    var steps = properties[prop].slice();\r\n\r\n                    if (isCssProp) {\r\n                        css($el, prop, '');\r\n                    }\r\n\r\n                    if (steps.length < 2) {\r\n                        steps.unshift((prop === 'scale'\r\n                            ? 1\r\n                            : isCssProp\r\n                                ? css($el, prop)\r\n                                : 0) || 0);\r\n                    }\r\n\r\n                    var unit = getUnit(steps);\r\n\r\n                    if (isColor) {\r\n\r\n                        var ref = $el.style;\r\n                        var color = ref.color;\r\n                        steps = steps.map(function (step) { return parseColor($el, step); });\r\n                        $el.style.color = color;\r\n\r\n                    } else if (startsWith(prop, 'bg')) {\r\n\r\n                        var attr = prop === 'bgy' ? 'height' : 'width';\r\n                        steps = steps.map(function (step) { return toPx(step, attr, this$1.$el); });\r\n\r\n                        css($el, (\"background-position-\" + (prop[2])), '');\r\n                        bgPos = css($el, 'backgroundPosition').split(' ')[prop[2] === 'x' ? 0 : 1]; // IE 11 can't read background-position-[x|y]\r\n\r\n                        if (this$1.covers) {\r\n\r\n                            var min = Math.min.apply(Math, steps);\r\n                            var max = Math.max.apply(Math, steps);\r\n                            var down = steps.indexOf(min) < steps.indexOf(max);\r\n\r\n                            diff = max - min;\r\n\r\n                            steps = steps.map(function (step) { return step - (down ? min : max); });\r\n                            pos = (down ? -diff : 0) + \"px\";\r\n\r\n                        } else {\r\n\r\n                            pos = bgPos;\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        steps = steps.map(toFloat);\r\n\r\n                    }\r\n\r\n                    if (prop === 'stroke') {\r\n\r\n                        if (!steps.some(function (step) { return step; })) {\r\n                            return props;\r\n                        }\r\n\r\n                        var length = getMaxPathLength(this$1.$el);\r\n                        css($el, 'strokeDasharray', length);\r\n\r\n                        if (unit === '%') {\r\n                            steps = steps.map(function (step) { return step * length / 100; });\r\n                        }\r\n\r\n                        steps = steps.reverse();\r\n\r\n                        prop = 'strokeDashoffset';\r\n                    }\r\n\r\n                    props[prop] = {steps: steps, unit: unit, pos: pos, bgPos: bgPos, diff: diff};\r\n\r\n                    return props;\r\n\r\n                }, {});\r\n\r\n            },\r\n\r\n            bgProps: function() {\r\n                var this$1 = this;\r\n\r\n                return ['bgx', 'bgy'].filter(function (bg) { return bg in this$1.props; });\r\n            },\r\n\r\n            covers: function(_, $el) {\r\n                return covers($el);\r\n            }\r\n\r\n        },\r\n\r\n        disconnected: function() {\r\n            delete this._image;\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function(data) {\r\n                var this$1 = this;\r\n\r\n\r\n                if (!this.matchMedia) {\r\n                    return;\r\n                }\r\n\r\n                if (!data.image && this.covers && this.bgProps.length) {\r\n                    var src = css(this.$el, 'backgroundImage').replace(/^none|url\\([\"']?(.+?)[\"']?\\)$/, '$1');\r\n\r\n                    if (src) {\r\n                        var img = new Image();\r\n                        img.src = src;\r\n                        data.image = img;\r\n\r\n                        if (!img.naturalWidth) {\r\n                            img.onload = function () { return this$1.$update(); };\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                var image = data.image;\r\n\r\n                if (!image || !image.naturalWidth) {\r\n                    return;\r\n                }\r\n\r\n                var dimEl = {\r\n                    width: this.$el.offsetWidth,\r\n                    height: this.$el.offsetHeight\r\n                };\r\n                var dimImage = {\r\n                    width: image.naturalWidth,\r\n                    height: image.naturalHeight\r\n                };\r\n\r\n                var dim = Dimensions.cover(dimImage, dimEl);\r\n\r\n                this.bgProps.forEach(function (prop) {\r\n\r\n                    var ref = this$1.props[prop];\r\n                    var diff = ref.diff;\r\n                    var bgPos = ref.bgPos;\r\n                    var steps = ref.steps;\r\n                    var attr = prop === 'bgy' ? 'height' : 'width';\r\n                    var span = dim[attr] - dimEl[attr];\r\n\r\n                    if (span < diff) {\r\n                        dimEl[attr] = dim[attr] + diff - span;\r\n                    } else if (span > diff) {\r\n\r\n                        var posPercentage = dimEl[attr] / toPx(bgPos, attr, this$1.$el);\r\n\r\n                        if (posPercentage) {\r\n                            this$1.props[prop].steps = steps.map(function (step) { return step - (span - diff) / posPercentage; });\r\n                        }\r\n                    }\r\n\r\n                    dim = Dimensions.cover(dimImage, dimEl);\r\n                });\r\n\r\n                data.dim = dim;\r\n            },\r\n\r\n            write: function(ref) {\r\n                var dim = ref.dim;\r\n\r\n\r\n                if (!this.matchMedia) {\r\n                    css(this.$el, {backgroundSize: '', backgroundRepeat: ''});\r\n                    return;\r\n                }\r\n\r\n                dim && css(this.$el, {\r\n                    backgroundSize: ((dim.width) + \"px \" + (dim.height) + \"px\"),\r\n                    backgroundRepeat: 'no-repeat'\r\n                });\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            reset: function() {\r\n                var this$1 = this;\r\n\r\n                each(this.getCss(0), function (_, prop) { return css(this$1.$el, prop, ''); });\r\n            },\r\n\r\n            getCss: function(percent) {\r\n\r\n                var ref = this;\r\n                var props = ref.props;\r\n                return Object.keys(props).reduce(function (css, prop) {\r\n\r\n                    var ref = props[prop];\r\n                    var steps = ref.steps;\r\n                    var unit = ref.unit;\r\n                    var pos = ref.pos;\r\n                    var value = getValue(steps, percent);\r\n\r\n                    switch (prop) {\r\n\r\n                        // transforms\r\n                        case 'x':\r\n                        case 'y': {\r\n                            unit = unit || 'px';\r\n                            css.transform += \" translate\" + (ucfirst(prop)) + \"(\" + (toFloat(value).toFixed(unit === 'px' ? 0 : 2)) + unit + \")\";\r\n                            break;\r\n                        }\r\n                        case 'rotate':\r\n                            unit = unit || 'deg';\r\n                            css.transform += \" rotate(\" + (value + unit) + \")\";\r\n                            break;\r\n                        case 'scale':\r\n                            css.transform += \" scale(\" + value + \")\";\r\n                            break;\r\n\r\n                        // bg image\r\n                        case 'bgy':\r\n                        case 'bgx':\r\n                            css[(\"background-position-\" + (prop[2]))] = \"calc(\" + pos + \" + \" + value + \"px)\";\r\n                            break;\r\n\r\n                        // color\r\n                        case 'color':\r\n                        case 'backgroundColor':\r\n                        case 'borderColor': {\r\n\r\n                            var ref$1 = getStep(steps, percent);\r\n                            var start = ref$1[0];\r\n                            var end = ref$1[1];\r\n                            var p = ref$1[2];\r\n\r\n                            css[prop] = \"rgba(\" + (start.map(function (value, i) {\r\n                                    value = value + p * (end[i] - value);\r\n                                    return i === 3 ? toFloat(value) : parseInt(value, 10);\r\n                                }).join(',')) + \")\";\r\n                            break;\r\n                        }\r\n                        // CSS Filter\r\n                        case 'blur':\r\n                            unit = unit || 'px';\r\n                            css.filter += \" blur(\" + (value + unit) + \")\";\r\n                            break;\r\n                        case 'hue':\r\n                            unit = unit || 'deg';\r\n                            css.filter += \" hue-rotate(\" + (value + unit) + \")\";\r\n                            break;\r\n                        case 'fopacity':\r\n                            unit = unit || '%';\r\n                            css.filter += \" opacity(\" + (value + unit) + \")\";\r\n                            break;\r\n                        case 'grayscale':\r\n                        case 'invert':\r\n                        case 'saturate':\r\n                        case 'sepia':\r\n                            unit = unit || '%';\r\n                            css.filter += \" \" + prop + \"(\" + (value + unit) + \")\";\r\n                            break;\r\n                        default:\r\n                            css[prop] = value;\r\n                    }\r\n\r\n                    return css;\r\n\r\n                }, {transform: '', filter: ''});\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function parseColor(el, color) {\r\n        return css(css(el, 'color', color), 'color')\r\n            .split(/[(),]/g)\r\n            .slice(1, -1)\r\n            .concat(1)\r\n            .slice(0, 4)\r\n            .map(toFloat);\r\n    }\r\n\r\n    function getStep(steps, percent) {\r\n        var count = steps.length - 1;\r\n        var index = Math.min(Math.floor(count * percent), count - 1);\r\n        var step = steps.slice(index, index + 2);\r\n\r\n        step.push(percent === 1 ? 1 : percent % (1 / count) * count);\r\n\r\n        return step;\r\n    }\r\n\r\n    function getValue(steps, percent, digits) {\r\n        if ( digits === void 0 ) digits = 2;\r\n\r\n        var ref = getStep(steps, percent);\r\n        var start = ref[0];\r\n        var end = ref[1];\r\n        var p = ref[2];\r\n        return (isNumber(start)\r\n            ? start + Math.abs(start - end) * p * (start < end ? 1 : -1)\r\n            : +end\r\n        ).toFixed(digits);\r\n    }\r\n\r\n    function getUnit(steps) {\r\n        return steps.reduce(function (unit, step) { return isString(step) && step.replace(/-|\\d/g, '').trim() || unit; }, '');\r\n    }\r\n\r\n    function covers(el) {\r\n        var ref = el.style;\r\n        var backgroundSize = ref.backgroundSize;\r\n        var covers = css(css(el, 'backgroundSize', ''), 'backgroundSize') === 'cover';\r\n        el.style.backgroundSize = backgroundSize;\r\n        return covers;\r\n    }\r\n\r\n    var parallax = {\r\n\r\n        mixins: [Parallax],\r\n\r\n        props: {\r\n            target: String,\r\n            viewport: Number,\r\n            easing: Number\r\n        },\r\n\r\n        data: {\r\n            target: false,\r\n            viewport: 1,\r\n            easing: 1\r\n        },\r\n\r\n        computed: {\r\n\r\n            target: function(ref, $el) {\r\n                var target = ref.target;\r\n\r\n                return getOffsetElement(target && query(target, $el) || $el);\r\n            }\r\n\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function(ref, types) {\r\n                var percent = ref.percent;\r\n\r\n\r\n                if (!types.has('scroll')) {\r\n                    percent = false;\r\n                }\r\n\r\n                if (!this.matchMedia) {\r\n                    return;\r\n                }\r\n\r\n                var prev = percent;\r\n                percent = ease(scrolledOver(this.target) / (this.viewport || 1), this.easing);\r\n\r\n                return {\r\n                    percent: percent,\r\n                    style: prev !== percent ? this.getCss(percent) : false\r\n                };\r\n            },\r\n\r\n            write: function(ref) {\r\n                var style = ref.style;\r\n\r\n\r\n                if (!this.matchMedia) {\r\n                    this.reset();\r\n                    return;\r\n                }\r\n\r\n                style && css(this.$el, style);\r\n\r\n            },\r\n\r\n            events: ['scroll', 'resize']\r\n        }\r\n\r\n    };\r\n\r\n    function ease(percent, easing) {\r\n        return clamp(percent * (1 - (easing - easing * percent)));\r\n    }\r\n\r\n    // SVG elements do not inherit from HTMLElement\r\n    function getOffsetElement(el) {\r\n        return el\r\n            ? 'offsetTop' in el\r\n                ? el\r\n                : getOffsetElement(parent(el))\r\n            : document.body;\r\n    }\r\n\r\n    var SliderReactive = {\r\n\r\n        update: {\r\n\r\n            write: function() {\r\n\r\n                if (this.stack.length || this.dragging) {\r\n                    return;\r\n                }\r\n\r\n                var index = this.getValidIndex(this.index);\r\n\r\n                if (!~this.prevIndex || this.index !== index) {\r\n                    this.show(index);\r\n                }\r\n\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function Transitioner (prev, next, dir, ref) {\r\n        var center = ref.center;\r\n        var easing = ref.easing;\r\n        var list = ref.list;\r\n\r\n\r\n        var deferred = new Deferred();\r\n\r\n        var from = prev\r\n            ? getLeft(prev, list, center)\r\n            : getLeft(next, list, center) + dimensions(next).width * dir;\r\n        var to = next\r\n            ? getLeft(next, list, center)\r\n            : from + dimensions(prev).width * dir * (isRtl ? -1 : 1);\r\n\r\n        return {\r\n\r\n            dir: dir,\r\n\r\n            show: function(duration, percent, linear) {\r\n                if ( percent === void 0 ) percent = 0;\r\n\r\n\r\n                var timing = linear ? 'linear' : easing;\r\n                duration -= Math.round(duration * clamp(percent, -1, 1));\r\n\r\n                this.translate(percent);\r\n\r\n                percent = prev ? percent : clamp(percent, 0, 1);\r\n                triggerUpdate(this.getItemIn(), 'itemin', {percent: percent, duration: duration, timing: timing, dir: dir});\r\n                prev && triggerUpdate(this.getItemIn(true), 'itemout', {percent: 1 - percent, duration: duration, timing: timing, dir: dir});\r\n\r\n                Transition\r\n                    .start(list, {transform: translate(-to * (isRtl ? -1 : 1), 'px')}, duration, timing)\r\n                    .then(deferred.resolve, noop);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            cancel: function() {\r\n                Transition.cancel(list);\r\n            },\r\n\r\n            reset: function() {\r\n                css(list, 'transform', '');\r\n            },\r\n\r\n            forward: function(duration, percent) {\r\n                if ( percent === void 0 ) percent = this.percent();\r\n\r\n                Transition.cancel(list);\r\n                return this.show(duration, percent, true);\r\n            },\r\n\r\n            translate: function(percent) {\r\n\r\n                var distance = this.getDistance() * dir * (isRtl ? -1 : 1);\r\n\r\n                css(list, 'transform', translate(clamp(\r\n                    -to + (distance - distance * percent),\r\n                    -getWidth(list),\r\n                    dimensions(list).width\r\n                ) * (isRtl ? -1 : 1), 'px'));\r\n\r\n                var actives = this.getActives();\r\n                var itemIn = this.getItemIn();\r\n                var itemOut = this.getItemIn(true);\r\n\r\n                percent = prev ? clamp(percent, -1, 1) : 0;\r\n\r\n                children(list).forEach(function (slide) {\r\n                    var isActive = includes(actives, slide);\r\n                    var isIn = slide === itemIn;\r\n                    var isOut = slide === itemOut;\r\n                    var translateIn = isIn || !isOut && (isActive || dir * (isRtl ? -1 : 1) === -1 ^ getElLeft(slide, list) > getElLeft(prev || next));\r\n\r\n                    triggerUpdate(slide, (\"itemtranslate\" + (translateIn ? 'in' : 'out')), {\r\n                        dir: dir,\r\n                        percent: isOut\r\n                            ? 1 - percent\r\n                            : isIn\r\n                                ? percent\r\n                                : isActive\r\n                                    ? 1\r\n                                    : 0\r\n                    });\r\n                });\r\n\r\n            },\r\n\r\n            percent: function() {\r\n                return Math.abs((css(list, 'transform').split(',')[4] * (isRtl ? -1 : 1) + from) / (to - from));\r\n            },\r\n\r\n            getDistance: function() {\r\n                return Math.abs(to - from);\r\n            },\r\n\r\n            getItemIn: function(out) {\r\n                if ( out === void 0 ) out = false;\r\n\r\n\r\n                var actives = this.getActives();\r\n                var nextActives = inView(list, getLeft(next || prev, list, center));\r\n\r\n                if (out) {\r\n                    var temp = actives;\r\n                    actives = nextActives;\r\n                    nextActives = temp;\r\n                }\r\n\r\n                return nextActives[findIndex(nextActives, function (el) { return !includes(actives, el); })];\r\n\r\n            },\r\n\r\n            getActives: function() {\r\n                return inView(list, getLeft(prev || next, list, center));\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function getLeft(el, list, center) {\r\n\r\n        var left = getElLeft(el, list);\r\n\r\n        return center\r\n            ? left - centerEl(el, list)\r\n            : Math.min(left, getMax(list));\r\n\r\n    }\r\n\r\n    function getMax(list) {\r\n        return Math.max(0, getWidth(list) - dimensions(list).width);\r\n    }\r\n\r\n    function getWidth(list) {\r\n        return children(list).reduce(function (right, el) { return dimensions(el).width + right; }, 0);\r\n    }\r\n\r\n    function centerEl(el, list) {\r\n        return dimensions(list).width / 2 - dimensions(el).width / 2;\r\n    }\r\n\r\n    function getElLeft(el, list) {\r\n        return el && (position(el).left + (isRtl ? dimensions(el).width - dimensions(list).width : 0)) * (isRtl ? -1 : 1) || 0;\r\n    }\r\n\r\n    function inView(list, listLeft) {\r\n\r\n        listLeft -= 1;\r\n        var listRight = listLeft + dimensions(list).width + 2;\r\n\r\n        return children(list).filter(function (slide) {\r\n            var slideLeft = getElLeft(slide, list);\r\n            var slideRight = slideLeft + dimensions(slide).width;\r\n\r\n            return slideLeft >= listLeft && slideRight <= listRight;\r\n        });\r\n    }\r\n\r\n    function triggerUpdate(el, type, data) {\r\n        trigger(el, createEvent(type, false, false, data));\r\n    }\r\n\r\n    var slider = {\r\n\r\n        mixins: [Class, Slider, SliderReactive],\r\n\r\n        props: {\r\n            center: Boolean,\r\n            sets: Boolean\r\n        },\r\n\r\n        data: {\r\n            center: false,\r\n            sets: false,\r\n            attrItem: 'uk-slider-item',\r\n            selList: '.uk-slider-items',\r\n            selNav: '.uk-slider-nav',\r\n            clsContainer: 'uk-slider-container',\r\n            Transitioner: Transitioner\r\n        },\r\n\r\n        computed: {\r\n\r\n            avgWidth: function() {\r\n                return getWidth(this.list) / this.length;\r\n            },\r\n\r\n            finite: function(ref) {\r\n                var finite = ref.finite;\r\n\r\n                return finite || Math.ceil(getWidth(this.list)) < dimensions(this.list).width + getMaxElWidth(this.list) + this.center;\r\n            },\r\n\r\n            maxIndex: function() {\r\n\r\n                if (!this.finite || this.center && !this.sets) {\r\n                    return this.length - 1;\r\n                }\r\n\r\n                if (this.center) {\r\n                    return last(this.sets);\r\n                }\r\n\r\n                var lft = 0;\r\n                var max = getMax(this.list);\r\n                var index = findIndex(this.slides, function (el) {\r\n\r\n                    if (lft >= max) {\r\n                        return true;\r\n                    }\r\n\r\n                    lft += dimensions(el).width;\r\n\r\n                });\r\n\r\n                return ~index ? index : this.length - 1;\r\n            },\r\n\r\n            sets: function(ref) {\r\n                var this$1 = this;\r\n                var sets = ref.sets;\r\n\r\n\r\n                if (!sets) {\r\n                    return;\r\n                }\r\n\r\n                var width = dimensions(this.list).width / (this.center ? 2 : 1);\r\n\r\n                var left = 0;\r\n                var leftCenter = width;\r\n                var slideLeft = 0;\r\n\r\n                sets = sortBy$1(this.slides, 'offsetLeft').reduce(function (sets, slide, i) {\r\n\r\n                    var slideWidth = dimensions(slide).width;\r\n                    var slideRight = slideLeft + slideWidth;\r\n\r\n                    if (slideRight > left) {\r\n\r\n                        if (!this$1.center && i > this$1.maxIndex) {\r\n                            i = this$1.maxIndex;\r\n                        }\r\n\r\n                        if (!includes(sets, i)) {\r\n\r\n                            var cmp = this$1.slides[i + 1];\r\n                            if (this$1.center && cmp && slideWidth < leftCenter - dimensions(cmp).width / 2) {\r\n                                leftCenter -= slideWidth;\r\n                            } else {\r\n                                leftCenter = width;\r\n                                sets.push(i);\r\n                                left = slideLeft + width + (this$1.center ? slideWidth / 2 : 0);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    slideLeft += slideWidth;\r\n\r\n                    return sets;\r\n\r\n                }, []);\r\n\r\n                return !isEmpty(sets) && sets;\r\n\r\n            },\r\n\r\n            transitionOptions: function() {\r\n                return {\r\n                    center: this.center,\r\n                    list: this.list\r\n                };\r\n            }\r\n\r\n        },\r\n\r\n        connected: function() {\r\n            toggleClass(this.$el, this.clsContainer, !$((\".\" + (this.clsContainer)), this.$el));\r\n        },\r\n\r\n        update: {\r\n\r\n            write: function() {\r\n                var this$1 = this;\r\n\r\n                this.navItems.forEach(function (el) {\r\n                    var index = toNumber(data(el, this$1.attrItem));\r\n                    if (index !== false) {\r\n                        el.hidden = !this$1.maxIndex || index > this$1.maxIndex || this$1.sets && !includes(this$1.sets, index);\r\n                    }\r\n                });\r\n\r\n                if (this.length && !this.dragging && !this.stack.length) {\r\n                    this.reorder();\r\n                    this._translate(1);\r\n                }\r\n\r\n                var actives = this._getTransitioner(this.index).getActives();\r\n                this.slides.forEach(function (slide) { return toggleClass(slide, this$1.clsActive, includes(actives, slide)); });\r\n\r\n                if (this.clsActivated && (!this.sets || includes(this.sets, toFloat(this.index)))) {\r\n                    this.slides.forEach(function (slide) { return toggleClass(slide, this$1.clsActivated || '', includes(actives, slide)); });\r\n                }\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        },\r\n\r\n        events: {\r\n\r\n            beforeitemshow: function(e) {\r\n\r\n                if (!this.dragging && this.sets && this.stack.length < 2 && !includes(this.sets, this.index)) {\r\n                    this.index = this.getValidIndex();\r\n                }\r\n\r\n                var diff = Math.abs(\r\n                    this.index\r\n                    - this.prevIndex\r\n                    + (this.dir > 0 && this.index < this.prevIndex || this.dir < 0 && this.index > this.prevIndex ? (this.maxIndex + 1) * this.dir : 0)\r\n                );\r\n\r\n                if (!this.dragging && diff > 1) {\r\n\r\n                    for (var i = 0; i < diff; i++) {\r\n                        this.stack.splice(1, 0, this.dir > 0 ? 'next' : 'previous');\r\n                    }\r\n\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                var index = this.dir < 0 || !this.slides[this.prevIndex] ? this.index : this.prevIndex;\r\n                this.duration = speedUp(this.avgWidth / this.velocity) * (dimensions(this.slides[index]).width / this.avgWidth);\r\n\r\n                this.reorder();\r\n\r\n            },\r\n\r\n            itemshow: function() {\r\n                if (~this.prevIndex) {\r\n                    addClass(this._getTransitioner().getItemIn(), this.clsActive);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            reorder: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                if (this.finite) {\r\n                    css(this.slides, 'order', '');\r\n                    return;\r\n                }\r\n\r\n                var index = this.dir > 0 && this.slides[this.prevIndex] ? this.prevIndex : this.index;\r\n\r\n                this.slides.forEach(function (slide, i) { return css(slide, 'order', this$1.dir > 0 && i < index\r\n                        ? 1\r\n                        : this$1.dir < 0 && i >= this$1.index\r\n                            ? -1\r\n                            : ''\r\n                    ); }\r\n                );\r\n\r\n                if (!this.center) {\r\n                    return;\r\n                }\r\n\r\n                var next = this.slides[index];\r\n                var width = dimensions(this.list).width / 2 - dimensions(next).width / 2;\r\n                var j = 0;\r\n\r\n                while (width > 0) {\r\n                    var slideIndex = this.getIndex(--j + index, index);\r\n                    var slide = this.slides[slideIndex];\r\n\r\n                    css(slide, 'order', slideIndex > index ? -2 : -1);\r\n                    width -= dimensions(slide).width;\r\n                }\r\n\r\n            },\r\n\r\n            getValidIndex: function(index, prevIndex) {\r\n                if ( index === void 0 ) index = this.index;\r\n                if ( prevIndex === void 0 ) prevIndex = this.prevIndex;\r\n\r\n\r\n                index = this.getIndex(index, prevIndex);\r\n\r\n                if (!this.sets) {\r\n                    return index;\r\n                }\r\n\r\n                var prev;\r\n\r\n                do {\r\n\r\n                    if (includes(this.sets, index)) {\r\n                        return index;\r\n                    }\r\n\r\n                    prev = index;\r\n                    index = this.getIndex(index + this.dir, prevIndex);\r\n\r\n                } while (index !== prev);\r\n\r\n                return index;\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function getMaxElWidth(list) {\r\n        return Math.max.apply(Math, [ 0 ].concat( children(list).map(function (el) { return dimensions(el).width; }) ));\r\n    }\r\n\r\n    var sliderParallax = {\r\n\r\n        mixins: [Parallax],\r\n\r\n        data: {\r\n            selItem: '!li'\r\n        },\r\n\r\n        computed: {\r\n\r\n            item: function(ref, $el) {\r\n                var selItem = ref.selItem;\r\n\r\n                return query(selItem, $el);\r\n            }\r\n\r\n        },\r\n\r\n        events: [\r\n\r\n            {\r\n                name: 'itemin itemout',\r\n\r\n                self: true,\r\n\r\n                el: function() {\r\n                    return this.item;\r\n                },\r\n\r\n                handler: function(ref) {\r\n                    var this$1 = this;\r\n                    var type = ref.type;\r\n                    var ref_detail = ref.detail;\r\n                    var percent = ref_detail.percent;\r\n                    var duration = ref_detail.duration;\r\n                    var timing = ref_detail.timing;\r\n                    var dir = ref_detail.dir;\r\n\r\n\r\n                    fastdom.read(function () {\r\n                        var propsFrom = this$1.getCss(getCurrentPercent(type, dir, percent));\r\n                        var propsTo = this$1.getCss(isIn(type) ? .5 : dir > 0 ? 1 : 0);\r\n                        fastdom.write(function () {\r\n                            css(this$1.$el, propsFrom);\r\n                            Transition.start(this$1.$el, propsTo, duration, timing).catch(noop);\r\n                        });\r\n                    });\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n                name: 'transitioncanceled transitionend',\r\n\r\n                self: true,\r\n\r\n                el: function() {\r\n                    return this.item;\r\n                },\r\n\r\n                handler: function() {\r\n                    Transition.cancel(this.$el);\r\n                }\r\n\r\n            },\r\n\r\n            {\r\n                name: 'itemtranslatein itemtranslateout',\r\n\r\n                self: true,\r\n\r\n                el: function() {\r\n                    return this.item;\r\n                },\r\n\r\n                handler: function(ref) {\r\n                    var this$1 = this;\r\n                    var type = ref.type;\r\n                    var ref_detail = ref.detail;\r\n                    var percent = ref_detail.percent;\r\n                    var dir = ref_detail.dir;\r\n\r\n                    fastdom.read(function () {\r\n                        var props = this$1.getCss(getCurrentPercent(type, dir, percent));\r\n                        fastdom.write(function () { return css(this$1.$el, props); });\r\n                    });\r\n                }\r\n            }\r\n\r\n        ]\r\n\r\n    };\r\n\r\n    function isIn(type) {\r\n        return endsWith(type, 'in');\r\n    }\r\n\r\n    function getCurrentPercent(type, dir, percent) {\r\n\r\n        percent /= 2;\r\n\r\n        return !isIn(type)\r\n            ? dir < 0\r\n                ? percent\r\n                : 1 - percent\r\n            : dir < 0\r\n                ? 1 - percent\r\n                : percent;\r\n    }\r\n\r\n    var Animations = assign({}, Animations$2, {\r\n\r\n        fade: {\r\n\r\n            show: function() {\r\n                return [\r\n                    {opacity: 0, zIndex: 0},\r\n                    {zIndex: -1}\r\n                ];\r\n            },\r\n\r\n            percent: function(current) {\r\n                return 1 - css(current, 'opacity');\r\n            },\r\n\r\n            translate: function(percent) {\r\n                return [\r\n                    {opacity: 1 - percent, zIndex: 0},\r\n                    {zIndex: -1}\r\n                ];\r\n            }\r\n\r\n        },\r\n\r\n        scale: {\r\n\r\n            show: function() {\r\n                return [\r\n                    {opacity: 0, transform: scale3d(1 + .5), zIndex: 0},\r\n                    {zIndex: -1}\r\n                ];\r\n            },\r\n\r\n            percent: function(current) {\r\n                return 1 - css(current, 'opacity');\r\n            },\r\n\r\n            translate: function(percent) {\r\n                return [\r\n                    {opacity: 1 - percent, transform: scale3d(1 + .5 * percent), zIndex: 0},\r\n                    {zIndex: -1}\r\n                ];\r\n            }\r\n\r\n        },\r\n\r\n        pull: {\r\n\r\n            show: function(dir) {\r\n                return dir < 0\r\n                    ? [\r\n                        {transform: translate(30), zIndex: -1},\r\n                        {transform: translate(), zIndex: 0}\r\n                    ]\r\n                    : [\r\n                        {transform: translate(-100), zIndex: 0},\r\n                        {transform: translate(), zIndex: -1}\r\n                    ];\r\n            },\r\n\r\n            percent: function(current, next, dir) {\r\n                return dir < 0\r\n                    ? 1 - translated(next)\r\n                    : translated(current);\r\n            },\r\n\r\n            translate: function(percent, dir) {\r\n                return dir < 0\r\n                    ? [\r\n                        {transform: translate(30 * percent), zIndex: -1},\r\n                        {transform: translate(-100 * (1 - percent)), zIndex: 0}\r\n                    ]\r\n                    : [\r\n                        {transform: translate(-percent * 100), zIndex: 0},\r\n                        {transform: translate(30 * (1 - percent)), zIndex: -1}\r\n                    ];\r\n            }\r\n\r\n        },\r\n\r\n        push: {\r\n\r\n            show: function(dir) {\r\n                return dir < 0\r\n                    ? [\r\n                        {transform: translate(100), zIndex: 0},\r\n                        {transform: translate(), zIndex: -1}\r\n                    ]\r\n                    : [\r\n                        {transform: translate(-30), zIndex: -1},\r\n                        {transform: translate(), zIndex: 0}\r\n                    ];\r\n            },\r\n\r\n            percent: function(current, next, dir) {\r\n                return dir > 0\r\n                    ? 1 - translated(next)\r\n                    : translated(current);\r\n            },\r\n\r\n            translate: function(percent, dir) {\r\n                return dir < 0\r\n                    ? [\r\n                        {transform: translate(percent * 100), zIndex: 0},\r\n                        {transform: translate(-30 * (1 - percent)), zIndex: -1}\r\n                    ]\r\n                    : [\r\n                        {transform: translate(-30 * percent), zIndex: -1},\r\n                        {transform: translate(100 * (1 - percent)), zIndex: 0}\r\n                    ];\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    var slideshow = {\r\n\r\n        mixins: [Class, Slideshow, SliderReactive],\r\n\r\n        props: {\r\n            ratio: String,\r\n            minHeight: Number,\r\n            maxHeight: Number\r\n        },\r\n\r\n        data: {\r\n            ratio: '16:9',\r\n            minHeight: false,\r\n            maxHeight: false,\r\n            selList: '.uk-slideshow-items',\r\n            attrItem: 'uk-slideshow-item',\r\n            selNav: '.uk-slideshow-nav',\r\n            Animations: Animations\r\n        },\r\n\r\n        update: {\r\n\r\n            read: function() {\r\n\r\n                var ref = this.ratio.split(':').map(Number);\r\n                var width = ref[0];\r\n                var height = ref[1];\r\n\r\n                height = height * this.list.offsetWidth / width || 0;\r\n\r\n                if (this.minHeight) {\r\n                    height = Math.max(this.minHeight, height);\r\n                }\r\n\r\n                if (this.maxHeight) {\r\n                    height = Math.min(this.maxHeight, height);\r\n                }\r\n\r\n                return {height: height - boxModelAdjust(this.list, 'height', 'content-box')};\r\n            },\r\n\r\n            write: function(ref) {\r\n                var height = ref.height;\r\n\r\n                height > 0 && css(this.list, 'minHeight', height);\r\n            },\r\n\r\n            events: ['resize']\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var sortable = {\r\n\r\n        mixins: [Class, Animate],\r\n\r\n        props: {\r\n            group: String,\r\n            threshold: Number,\r\n            clsItem: String,\r\n            clsPlaceholder: String,\r\n            clsDrag: String,\r\n            clsDragState: String,\r\n            clsBase: String,\r\n            clsNoDrag: String,\r\n            clsEmpty: String,\r\n            clsCustom: String,\r\n            handle: String\r\n        },\r\n\r\n        data: {\r\n            group: false,\r\n            threshold: 5,\r\n            clsItem: 'uk-sortable-item',\r\n            clsPlaceholder: 'uk-sortable-placeholder',\r\n            clsDrag: 'uk-sortable-drag',\r\n            clsDragState: 'uk-drag',\r\n            clsBase: 'uk-sortable',\r\n            clsNoDrag: 'uk-sortable-nodrag',\r\n            clsEmpty: 'uk-sortable-empty',\r\n            clsCustom: '',\r\n            handle: false,\r\n            pos: {}\r\n        },\r\n\r\n        created: function() {\r\n            var this$1 = this;\r\n\r\n            ['init', 'start', 'move', 'end'].forEach(function (key) {\r\n                var fn = this$1[key];\r\n                this$1[key] = function (e) {\r\n                    assign(this$1.pos, getEventPos(e));\r\n                    fn(e);\r\n                };\r\n            });\r\n        },\r\n\r\n        events: {\r\n\r\n            name: pointerDown,\r\n            passive: false,\r\n            handler: 'init'\r\n\r\n        },\r\n\r\n        computed: {\r\n\r\n            target: function() {\r\n                return (this.$el.tBodies || [this.$el])[0];\r\n            },\r\n\r\n            items: function() {\r\n                return children(this.target);\r\n            },\r\n\r\n            isEmpty: {\r\n\r\n                get: function() {\r\n                    return isEmpty(this.items);\r\n                },\r\n\r\n                watch: function(empty) {\r\n                    toggleClass(this.target, this.clsEmpty, empty);\r\n                },\r\n\r\n                immediate: true\r\n\r\n            },\r\n\r\n            handles: {\r\n\r\n                get: function(ref, el) {\r\n                    var handle = ref.handle;\r\n\r\n                    return handle ? $$(handle, el) : this.items;\r\n                },\r\n\r\n                watch: function(handles, prev) {\r\n                    css(prev, {touchAction: '', userSelect: ''});\r\n                    css(handles, {touchAction: hasTouch ? 'none' : '', userSelect: 'none'}); // touchAction set to 'none' causes a performance drop in Chrome 80\r\n                },\r\n\r\n                immediate: true\r\n\r\n            }\r\n\r\n        },\r\n\r\n        update: {\r\n\r\n            write: function(data) {\r\n\r\n                if (!this.drag || !parent(this.placeholder)) {\r\n                    return;\r\n                }\r\n\r\n                var ref = this;\r\n                var ref_pos = ref.pos;\r\n                var x = ref_pos.x;\r\n                var y = ref_pos.y;\r\n                var ref_origin = ref.origin;\r\n                var offsetTop = ref_origin.offsetTop;\r\n                var offsetLeft = ref_origin.offsetLeft;\r\n                var placeholder = ref.placeholder;\r\n\r\n                css(this.drag, {\r\n                    top: y - offsetTop,\r\n                    left: x - offsetLeft\r\n                });\r\n\r\n                var sortable = this.getSortable(document.elementFromPoint(x, y));\r\n\r\n                if (!sortable) {\r\n                    return;\r\n                }\r\n\r\n                var items = sortable.items;\r\n\r\n                if (items.some(Transition.inProgress)) {\r\n                    return;\r\n                }\r\n\r\n                var target = findTarget(items, {x: x, y: y});\r\n\r\n                if (items.length && (!target || target === placeholder)) {\r\n                    return;\r\n                }\r\n\r\n                var previous = this.getSortable(placeholder);\r\n                var insertTarget = findInsertTarget(sortable.target, target, placeholder, x, y, sortable === previous && data.moved !== target);\r\n\r\n                if (insertTarget === false) {\r\n                    return;\r\n                }\r\n\r\n                if (insertTarget && placeholder === insertTarget) {\r\n                    return;\r\n                }\r\n\r\n                if (sortable !== previous) {\r\n                    previous.remove(placeholder);\r\n                    data.moved = target;\r\n                } else {\r\n                    delete data.moved;\r\n                }\r\n\r\n                sortable.insert(placeholder, insertTarget);\r\n\r\n                this.touched.add(sortable);\r\n            },\r\n\r\n            events: ['move']\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            init: function(e) {\r\n\r\n                var target = e.target;\r\n                var button = e.button;\r\n                var defaultPrevented = e.defaultPrevented;\r\n                var ref = this.items.filter(function (el) { return within(target, el); });\r\n                var placeholder = ref[0];\r\n\r\n                if (!placeholder\r\n                    || defaultPrevented\r\n                    || button > 0\r\n                    || isInput(target)\r\n                    || within(target, (\".\" + (this.clsNoDrag)))\r\n                    || this.handle && !within(target, this.handle)\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n\r\n                this.touched = new Set([this]);\r\n                this.placeholder = placeholder;\r\n                this.origin = assign({target: target, index: index(placeholder)}, this.pos);\r\n\r\n                on(document, pointerMove, this.move);\r\n                on(document, pointerUp, this.end);\r\n\r\n                if (!this.threshold) {\r\n                    this.start(e);\r\n                }\r\n\r\n            },\r\n\r\n            start: function(e) {\r\n\r\n                this.drag = appendDrag(this.$container, this.placeholder);\r\n                var ref = this.placeholder.getBoundingClientRect();\r\n                var left = ref.left;\r\n                var top = ref.top;\r\n                assign(this.origin, {offsetLeft: this.pos.x - left, offsetTop: this.pos.y - top});\r\n\r\n                addClass(this.drag, this.clsDrag, this.clsCustom);\r\n                addClass(this.placeholder, this.clsPlaceholder);\r\n                addClass(this.items, this.clsItem);\r\n                addClass(document.documentElement, this.clsDragState);\r\n\r\n                trigger(this.$el, 'start', [this, this.placeholder]);\r\n\r\n                trackScroll(this.pos);\r\n\r\n                this.move(e);\r\n            },\r\n\r\n            move: function(e) {\r\n\r\n                if (this.drag) {\r\n                    this.$emit('move');\r\n                } else if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) {\r\n                    this.start(e);\r\n                }\r\n\r\n            },\r\n\r\n            end: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                off(document, pointerMove, this.move);\r\n                off(document, pointerUp, this.end);\r\n                off(window, 'scroll', this.scroll);\r\n\r\n                if (!this.drag) {\r\n                    return;\r\n                }\r\n\r\n                untrackScroll();\r\n\r\n                var sortable = this.getSortable(this.placeholder);\r\n\r\n                if (this === sortable) {\r\n                    if (this.origin.index !== index(this.placeholder)) {\r\n                        trigger(this.$el, 'moved', [this, this.placeholder]);\r\n                    }\r\n                } else {\r\n                    trigger(sortable.$el, 'added', [sortable, this.placeholder]);\r\n                    trigger(this.$el, 'removed', [this, this.placeholder]);\r\n                }\r\n\r\n                trigger(this.$el, 'stop', [this, this.placeholder]);\r\n\r\n                remove$1(this.drag);\r\n                this.drag = null;\r\n\r\n                this.touched.forEach(function (ref) {\r\n                        var clsPlaceholder = ref.clsPlaceholder;\r\n                        var clsItem = ref.clsItem;\r\n\r\n                        return this$1.touched.forEach(function (sortable) { return removeClass(sortable.items, clsPlaceholder, clsItem); }\r\n                    );\r\n                }\r\n                );\r\n                this.touched = null;\r\n                removeClass(document.documentElement, this.clsDragState);\r\n\r\n            },\r\n\r\n            insert: function(element, target) {\r\n                var this$1 = this;\r\n\r\n\r\n                addClass(this.items, this.clsItem);\r\n\r\n                var insert = function () { return target\r\n                    ? before(target, element)\r\n                    : append(this$1.target, element); };\r\n\r\n                this.animate(insert);\r\n\r\n            },\r\n\r\n            remove: function(element) {\r\n\r\n                if (!within(element, this.target)) {\r\n                    return;\r\n                }\r\n\r\n                this.animate(function () { return remove$1(element); });\r\n\r\n            },\r\n\r\n            getSortable: function(element) {\r\n                do {\r\n                    var sortable = this.$getComponent(element, 'sortable');\r\n\r\n                    if (sortable && (sortable === this || this.group !== false && sortable.group === this.group)) {\r\n                        return sortable;\r\n                    }\r\n                } while ((element = parent(element)));\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var trackTimer;\r\n    function trackScroll(pos) {\r\n\r\n        var last = Date.now();\r\n        trackTimer = setInterval(function () {\r\n\r\n            var x = pos.x;\r\n            var y = pos.y;\r\n            y += window.pageYOffset;\r\n\r\n            var dist = (Date.now() - last) * .3;\r\n            last = Date.now();\r\n\r\n            scrollParents(document.elementFromPoint(x, pos.y)).reverse().some(function (scrollEl) {\r\n\r\n                var scroll = scrollEl.scrollTop;\r\n                var scrollHeight = scrollEl.scrollHeight;\r\n\r\n                var ref = offset(getViewport$1(scrollEl));\r\n                var top = ref.top;\r\n                var bottom = ref.bottom;\r\n                var height = ref.height;\r\n\r\n                if (top < y && top + 35 > y) {\r\n                    scroll -= dist;\r\n                } else if (bottom > y && bottom - 35 < y) {\r\n                    scroll += dist;\r\n                } else {\r\n                    return;\r\n                }\r\n\r\n                if (scroll > 0 && scroll < scrollHeight - height) {\r\n                    scrollTop(scrollEl, scroll);\r\n                    return true;\r\n                }\r\n\r\n            });\r\n\r\n        }, 15);\r\n\r\n    }\r\n\r\n    function untrackScroll() {\r\n        clearInterval(trackTimer);\r\n    }\r\n\r\n    function appendDrag(container, element) {\r\n        var clone = append(container, element.outerHTML.replace(/(^<)(?:li|tr)|(?:li|tr)(\\/>$)/g, '$1div$2'));\r\n\r\n        css(clone, 'margin', '0', 'important');\r\n        css(clone, assign({\r\n            boxSizing: 'border-box',\r\n            width: element.offsetWidth,\r\n            height: element.offsetHeight\r\n        }, css(element, ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'])));\r\n\r\n        height(clone.firstElementChild, height(element.firstElementChild));\r\n\r\n        return clone;\r\n    }\r\n\r\n    function findTarget(items, point) {\r\n        return items[findIndex(items, function (item) { return pointInRect(point, item.getBoundingClientRect()); })];\r\n    }\r\n\r\n    function findInsertTarget(list, target, placeholder, x, y, sameList) {\r\n\r\n        if (!children(list).length) {\r\n            return;\r\n        }\r\n\r\n        var rect = target.getBoundingClientRect();\r\n        if (!sameList) {\r\n\r\n            if (!isHorizontal(list, placeholder)) {\r\n                return y < rect.top + rect.height / 2\r\n                    ? target\r\n                    : target.nextElementSibling;\r\n            }\r\n\r\n            return target;\r\n        }\r\n\r\n        var placeholderRect = placeholder.getBoundingClientRect();\r\n        var sameRow = linesIntersect(\r\n            [rect.top, rect.bottom],\r\n            [placeholderRect.top, placeholderRect.bottom]\r\n        );\r\n\r\n        var pointerPos = sameRow ? x : y;\r\n        var lengthProp = sameRow ? 'width' : 'height';\r\n        var startProp = sameRow ? 'left' : 'top';\r\n        var endProp = sameRow ? 'right' : 'bottom';\r\n\r\n        var diff = placeholderRect[lengthProp] < rect[lengthProp] ? rect[lengthProp] - placeholderRect[lengthProp] : 0;\r\n\r\n        if (placeholderRect[startProp] < rect[startProp]) {\r\n\r\n            if (diff && pointerPos < rect[startProp] + diff) {\r\n                return false;\r\n            }\r\n\r\n            return target.nextElementSibling;\r\n        }\r\n\r\n        if (diff && pointerPos > rect[endProp] - diff) {\r\n            return false;\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    function isHorizontal(list, placeholder) {\r\n\r\n        var single = children(list).length === 1;\r\n\r\n        if (single) {\r\n            append(list, placeholder);\r\n        }\r\n\r\n        var items = children(list);\r\n        var isHorizontal = items.some(function (el, i) {\r\n            var rectA = el.getBoundingClientRect();\r\n            return items.slice(i + 1).some(function (el) {\r\n                var rectB = el.getBoundingClientRect();\r\n                return !linesIntersect([rectA.left, rectA.right], [rectB.left, rectB.right]);\r\n            });\r\n        });\r\n\r\n        if (single) {\r\n            remove$1(placeholder);\r\n        }\r\n\r\n        return isHorizontal;\r\n    }\r\n\r\n    function linesIntersect(lineA, lineB) {\r\n        return lineA[1] > lineB[0] && lineB[1] > lineA[0];\r\n    }\r\n\r\n    var obj;\r\n\r\n    var tooltip = {\r\n\r\n        mixins: [Container, Togglable, Position],\r\n\r\n        args: 'title',\r\n\r\n        props: {\r\n            delay: Number,\r\n            title: String\r\n        },\r\n\r\n        data: {\r\n            pos: 'top',\r\n            title: '',\r\n            delay: 0,\r\n            animation: ['uk-animation-scale-up'],\r\n            duration: 100,\r\n            cls: 'uk-active',\r\n            clsPos: 'uk-tooltip'\r\n        },\r\n\r\n        beforeConnect: function() {\r\n            this._hasTitle = hasAttr(this.$el, 'title');\r\n            attr(this.$el, 'title', '');\r\n            this.updateAria(false);\r\n            makeFocusable(this.$el);\r\n        },\r\n\r\n        disconnected: function() {\r\n            this.hide();\r\n            attr(this.$el, 'title', this._hasTitle ? this.title : null);\r\n        },\r\n\r\n        methods: {\r\n\r\n            show: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                if (this.isToggled(this.tooltip || null) || !this.title) {\r\n                    return;\r\n                }\r\n\r\n                this._unbind = once(document, (\"show keydown \" + pointerDown), this.hide, false, function (e) { return e.type === pointerDown && !within(e.target, this$1.$el)\r\n                    || e.type === 'keydown' && e.keyCode === 27\r\n                    || e.type === 'show' && e.detail[0] !== this$1 && e.detail[0].$name === this$1.$name; }\r\n                );\r\n\r\n                clearTimeout(this.showTimer);\r\n                this.showTimer = setTimeout(this._show, this.delay);\r\n            },\r\n\r\n            hide: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                if (matches(this.$el, 'input:focus')) {\r\n                    return;\r\n                }\r\n\r\n                clearTimeout(this.showTimer);\r\n\r\n                if (!this.isToggled(this.tooltip || null)) {\r\n                    return;\r\n                }\r\n\r\n                this.toggleElement(this.tooltip, false, false).then(function () {\r\n                    this$1.tooltip = remove$1(this$1.tooltip);\r\n                    this$1._unbind();\r\n                });\r\n            },\r\n\r\n            _show: function() {\r\n                var this$1 = this;\r\n\r\n\r\n                this.tooltip = append(this.container,\r\n                    (\"<div class=\\\"\" + (this.clsPos) + \"\\\"> <div class=\\\"\" + (this.clsPos) + \"-inner\\\">\" + (this.title) + \"</div> </div>\")\r\n                );\r\n\r\n                on(this.tooltip, 'toggled', function (e, toggled) {\r\n\r\n                    this$1.updateAria(toggled);\r\n\r\n                    if (!toggled) {\r\n                        return;\r\n                    }\r\n\r\n                    this$1.positionAt(this$1.tooltip, this$1.$el);\r\n\r\n                    this$1.origin = this$1.getAxis() === 'y'\r\n                        ? ((flipPosition(this$1.dir)) + \"-\" + (this$1.align))\r\n                        : ((this$1.align) + \"-\" + (flipPosition(this$1.dir)));\r\n                });\r\n\r\n                this.toggleElement(this.tooltip, true);\r\n\r\n            },\r\n\r\n            updateAria: function(toggled) {\r\n                attr(this.$el, 'aria-expanded', toggled);\r\n            }\r\n\r\n        },\r\n\r\n        events: ( obj = {\r\n\r\n            focus: 'show',\r\n            blur: 'hide'\r\n\r\n        }, obj[(pointerEnter + \" \" + pointerLeave)] = function (e) {\r\n                if (!isTouch(e)) {\r\n                    this[e.type === pointerEnter ? 'show' : 'hide']();\r\n                }\r\n            }, obj[pointerDown] = function (e) {\r\n                if (isTouch(e)) {\r\n                    this.show();\r\n                }\r\n            }, obj )\r\n\r\n    };\r\n\r\n    function makeFocusable(el) {\r\n        if (!isFocusable(el)) {\r\n            attr(el, 'tabindex', '0');\r\n        }\r\n    }\r\n\r\n    var upload = {\r\n\r\n        props: {\r\n            allow: String,\r\n            clsDragover: String,\r\n            concurrent: Number,\r\n            maxSize: Number,\r\n            method: String,\r\n            mime: String,\r\n            msgInvalidMime: String,\r\n            msgInvalidName: String,\r\n            msgInvalidSize: String,\r\n            multiple: Boolean,\r\n            name: String,\r\n            params: Object,\r\n            type: String,\r\n            url: String\r\n        },\r\n\r\n        data: {\r\n            allow: false,\r\n            clsDragover: 'uk-dragover',\r\n            concurrent: 1,\r\n            maxSize: 0,\r\n            method: 'POST',\r\n            mime: false,\r\n            msgInvalidMime: 'Invalid File Type: %s',\r\n            msgInvalidName: 'Invalid File Name: %s',\r\n            msgInvalidSize: 'Invalid File Size: %s Kilobytes Max',\r\n            multiple: false,\r\n            name: 'files[]',\r\n            params: {},\r\n            type: '',\r\n            url: '',\r\n            abort: noop,\r\n            beforeAll: noop,\r\n            beforeSend: noop,\r\n            complete: noop,\r\n            completeAll: noop,\r\n            error: noop,\r\n            fail: noop,\r\n            load: noop,\r\n            loadEnd: noop,\r\n            loadStart: noop,\r\n            progress: noop\r\n        },\r\n\r\n        events: {\r\n\r\n            change: function(e) {\r\n\r\n                if (!matches(e.target, 'input[type=\"file\"]')) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n\r\n                if (e.target.files) {\r\n                    this.upload(e.target.files);\r\n                }\r\n\r\n                e.target.value = '';\r\n            },\r\n\r\n            drop: function(e) {\r\n                stop(e);\r\n\r\n                var transfer = e.dataTransfer;\r\n\r\n                if (!transfer || !transfer.files) {\r\n                    return;\r\n                }\r\n\r\n                removeClass(this.$el, this.clsDragover);\r\n\r\n                this.upload(transfer.files);\r\n            },\r\n\r\n            dragenter: function(e) {\r\n                stop(e);\r\n            },\r\n\r\n            dragover: function(e) {\r\n                stop(e);\r\n                addClass(this.$el, this.clsDragover);\r\n            },\r\n\r\n            dragleave: function(e) {\r\n                stop(e);\r\n                removeClass(this.$el, this.clsDragover);\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            upload: function(files) {\r\n                var this$1 = this;\r\n\r\n\r\n                if (!files.length) {\r\n                    return;\r\n                }\r\n\r\n                trigger(this.$el, 'upload', [files]);\r\n\r\n                for (var i = 0; i < files.length; i++) {\r\n\r\n                    if (this.maxSize && this.maxSize * 1000 < files[i].size) {\r\n                        this.fail(this.msgInvalidSize.replace('%s', this.maxSize));\r\n                        return;\r\n                    }\r\n\r\n                    if (this.allow && !match(this.allow, files[i].name)) {\r\n                        this.fail(this.msgInvalidName.replace('%s', this.allow));\r\n                        return;\r\n                    }\r\n\r\n                    if (this.mime && !match(this.mime, files[i].type)) {\r\n                        this.fail(this.msgInvalidMime.replace('%s', this.mime));\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n                if (!this.multiple) {\r\n                    files = [files[0]];\r\n                }\r\n\r\n                this.beforeAll(this, files);\r\n\r\n                var chunks = chunk(files, this.concurrent);\r\n                var upload = function (files) {\r\n\r\n                    var data = new FormData();\r\n\r\n                    files.forEach(function (file) { return data.append(this$1.name, file); });\r\n\r\n                    for (var key in this$1.params) {\r\n                        data.append(key, this$1.params[key]);\r\n                    }\r\n\r\n                    ajax(this$1.url, {\r\n                        data: data,\r\n                        method: this$1.method,\r\n                        responseType: this$1.type,\r\n                        beforeSend: function (env) {\r\n\r\n                            var xhr = env.xhr;\r\n                            xhr.upload && on(xhr.upload, 'progress', this$1.progress);\r\n                            ['loadStart', 'load', 'loadEnd', 'abort'].forEach(function (type) { return on(xhr, type.toLowerCase(), this$1[type]); }\r\n                            );\r\n\r\n                            return this$1.beforeSend(env);\r\n\r\n                        }\r\n                    }).then(\r\n                        function (xhr) {\r\n\r\n                            this$1.complete(xhr);\r\n\r\n                            if (chunks.length) {\r\n                                upload(chunks.shift());\r\n                            } else {\r\n                                this$1.completeAll(xhr);\r\n                            }\r\n\r\n                        },\r\n                        function (e) { return this$1.error(e); }\r\n                    );\r\n\r\n                };\r\n\r\n                upload(chunks.shift());\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    function match(pattern, path) {\r\n        return path.match(new RegExp((\"^\" + (pattern.replace(/\\//g, '\\\\/').replace(/\\*\\*/g, '(\\\\/[^\\\\/]+)*').replace(/\\*/g, '[^\\\\/]+').replace(/((?!\\\\))\\?/g, '$1.')) + \"$\"), 'i'));\r\n    }\r\n\r\n    function chunk(files, size) {\r\n        var chunks = [];\r\n        for (var i = 0; i < files.length; i += size) {\r\n            var chunk = [];\r\n            for (var j = 0; j < size; j++) {\r\n                chunk.push(files[i + j]);\r\n            }\r\n            chunks.push(chunk);\r\n        }\r\n        return chunks;\r\n    }\r\n\r\n    function stop(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    var components = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        Countdown: countdown,\r\n        Filter: filter,\r\n        Lightbox: lightbox,\r\n        LightboxPanel: LightboxPanel,\r\n        Notification: notification,\r\n        Parallax: parallax,\r\n        Slider: slider,\r\n        SliderParallax: sliderParallax,\r\n        Slideshow: slideshow,\r\n        SlideshowParallax: sliderParallax,\r\n        Sortable: sortable,\r\n        Tooltip: tooltip,\r\n        Upload: upload\r\n    });\r\n\r\n    each(components, function (component, name) { return UIkit.component(name, component); }\r\n    );\r\n\r\n    return UIkit;\r\n\r\n})));\r\n\n\n//# sourceURL=webpack:///./src/assets/js/uikit.js?");

/***/ }),

/***/ 0:
/*!****************************************************************************************************************************************************!*\
  !*** multi ./src/assets/js/app.js ./src/assets/js/burger.js ./src/assets/js/calculator.js ./src/assets/js/uikit-icons.js ./src/assets/js/uikit.js ***!
  \****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! C:\\Users\\Admin\\Desktop\\work\\cement\\src\\assets\\js\\app.js */\"./src/assets/js/app.js\");\n__webpack_require__(/*! C:\\Users\\Admin\\Desktop\\work\\cement\\src\\assets\\js\\burger.js */\"./src/assets/js/burger.js\");\n__webpack_require__(/*! C:\\Users\\Admin\\Desktop\\work\\cement\\src\\assets\\js\\calculator.js */\"./src/assets/js/calculator.js\");\n__webpack_require__(/*! C:\\Users\\Admin\\Desktop\\work\\cement\\src\\assets\\js\\uikit-icons.js */\"./src/assets/js/uikit-icons.js\");\nmodule.exports = __webpack_require__(/*! C:\\Users\\Admin\\Desktop\\work\\cement\\src\\assets\\js\\uikit.js */\"./src/assets/js/uikit.js\");\n\n\n//# sourceURL=webpack:///multi_./src/assets/js/app.js_./src/assets/js/burger.js_./src/assets/js/calculator.js_./src/assets/js/uikit-icons.js_./src/assets/js/uikit.js?");

/***/ })

/******/ });